{"version":3,"sources":["webpack://fhir_resources/webpack/universalModuleDefinition","webpack://fhir_resources/webpack/bootstrap","webpack://fhir_resources/./src/definition/version4.0.0/index.ts","webpack://fhir_resources/./src/index.ts","webpack://fhir_resources/./src/resource/version4.0.0/bundle.ts","webpack://fhir_resources/./node_modules/guid-typescript/dist/guid.js","webpack://fhir_resources/./src/definition/version4.0.0/fhir._.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Account.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ActivityDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.AdverseEvent.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.AllergyIntolerance.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Appointment.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.AuditEvent.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.BiologicallyDerivedProduct.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Bundle.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CapabilityStatement.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CarePlan.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CareTeam.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CatalogEntry.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ChargeItem.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ChargeItemDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Claim.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ClaimResponse.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CodeSystem.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CompartmentDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Composition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ConceptMap.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Consent.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CoverageEligibilityRequest.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.CoverageEligibilityResponse.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DetectedIssue.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Device.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DeviceDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DeviceMetric.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DeviceUseStatement.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DiagnosticReport.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DocumentManifest.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.DocumentReference.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.EffectEvidenceSynthesis.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Encounter.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Endpoint.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.EnrollmentResponse.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.EpisodeOfCare.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.EventDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Evidence.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.EvidenceVariable.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ExampleScenario.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ExplanationOfBenefit.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.FamilyMemberHistory.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Flag.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Goal.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.GraphDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Group.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.GuidanceResponse.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.HealthcareService.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ImagingStudy.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.ImplementationGuide.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.InsurancePlan.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Invoice.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Library.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Linkage.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.List.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Location.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.Measure.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.MeasureReport.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.MessageDefinition.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.MessageHeader.ts","webpack://fhir_resources/./src/definition/version4.0.0/fhir.MolecularSequence.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA,iCAAyB;AACzB,iCAA+B;AAC/B,iCAA0C;AAC1C,iCAAoC;AACpC,iCAA0C;AAC1C,iCAAmC;AAEnC,kCAAkC;AAGlC,kCAAkD;AAElD,kCAA8B;AAC9B,kCAA2C;AAC3C,kCAAgC;AAChC,kCAAgC;AAChC,kCAAoC;AACpC,kCAAkC;AAClC,kCAA4C;AAC5C,kCAA6B;AAC7B,kCAAqC;AAErC,kCAAkC;AAGlC,kCAA6C;AAC7C,kCAAmC;AACnC,kCAAkC;AAElC,kCAA+B;AAG/B,kCAAkD;AAClD,kCAAmD;AACnD,kCAAqC;AACrC,kCAA8B;AAC9B,kCAAwC;AACxC,kCAAoC;AAEpC,kCAA0C;AAC1C,kCAAwC;AACxC,kCAAwC;AACxC,kCAAyC;AACzC,kCAA+C;AAC/C,kCAAiC;AACjC,kCAAgC;AAEhC,kCAA0C;AAC1C,kCAAqC;AACrC,kCAAuC;AACvC,kCAAgC;AAChC,kCAAwC;AACxC,kCAAuC;AACvC,kCAA4C;AAC5C,kCAA2C;AAC3C,kCAA4B;AAC5B,kCAA4B;AAC5B,kCAAuC;AACvC,kCAA6B;AAC7B,kCAAwC;AACxC,kCAAyC;AACzC,kCAAoC;AAIpC,kCAA2C;AAC3C,kCAAqC;AACrC,kCAA+B;AAC/B,kCAA+B;AAC/B,kCAA+B;AAC/B,kCAA4B;AAC5B,kCAAgC;AAChC,kCAA+B;AAC/B,kCAAqC;AAkBrC,kCAAyC;AACzC,kCAAqC;AACrC,kCAAyC;;;;;;;;;AC7FzC,iEAAiE;AACjE,2CAA2C;AAC3C,+FAA+F;;AAE/F;;GAEG;AACH,sCAAwF;AAA/E,wCAAU;AAEnB;;;;;GAKG;AACH,SAAgB,YAAY,CAAC,OAA+B;IACxD,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;QAChC,OAAO,CAAC,GAAG,CAAC,uCAAqC,qBAAqB,CAAC,MAAM,8BAA2B,CAAC,CAAC;QAC1G,uEAAc,CAA2B,MAAE;KAC9C;IAED,QAAQ,OAAO,EAAE;QACb,KAAK,qBAAqB,CAAC,MAAM;YAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,uEAAc,CAA2B,MAAE;QAC/C,KAAK,qBAAqB,CAAC,MAAM;YAC7B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,qBAAqB,CAAC;KACpC;AACL,CAAC;AAdD,oCAcC;AAED,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC7B,0CAAiB;IACjB,0CAAiB;IACjB,0CAAiB;AACrB,CAAC,EAJW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAIhC;;;;;;;;;;AClCD,+CAAuC;AAMvC;IAMI,oBAAY,IAAgB;QAL5B,iBAAY,GAAG,QAAQ,CAAC;QAMpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;;;;;OAMG;IACH,6BAAQ,GAAR,UAAS,MAAc,EAAE,YAAoB,EAAE,QAAa;QAExD,IAAI,EAAU,CAAC;QAEf,cAAc;QACd,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAEvB,wCAAwC;QACxC,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACnB;QAED,yCAAyC;QACzC,IAAI,OAAO,QAAQ,CAAC,EAAE,KAAK,WAAW,EAAE;YACpC,6BAA6B;YAC7B,OAAO,CAAC,IAAI,CAAC,uCAAqC,QAAQ,CAAC,EAAE,WAAQ,CAAC,CAAC;YACvE,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;YAEjB,mDAAmD;YACnD,IAAI,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,EAAE;gBAClC,MAAM,KAAK,CAAC,0BAAwB,QAAQ,CAAC,EAAE,8BAA2B,CAAC,CAAC;aAC/E;SACJ;QAED,2BAA2B;QAC3B,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;QAEjB,gEAAgE;QAChE,IAAI,WAAW,GAAgB;YAC3B,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,YAAY;aACpB;YACD,QAAQ,EAAE,QAAQ;SACrB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE7B,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,gCAAW,GAAX,UAAY,EAAU;QAAtB,iBAaC;QAZG,IAAI,WAAW,GAA4B,SAAS,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;YACxB,IAAI,QAAQ,GAA+B,CAAC,CAAC,QAAQ,CAAC;YACtD,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;gBACvB,WAAW,GAAG,CAAC,CAAC;gBAChB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC/B;QACL,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,WAAW,KAAK,WAAW;YAClC,OAAO,CAAC,IAAI,CAAC,gCAA8B,EAAE,WAAQ,CAAC;QAE1D,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;OAGG;IACK,+BAAU,GAAlB;QACI,OAAO,sBAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACK,4CAAuB,GAA/B,UAAgC,EAAU;QACtC,KAAc,UAAU,EAAV,SAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,EAAE;YAArB,IAAI,CAAC;YACN,IAAI,QAAQ,GAA+B,CAAC,CAAC,QAAQ,CAAC;YACtD,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;gBACrB,OAAO,IAAI,CAAC;SACnB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEL,iBAAC;AAAD,CAAC;AApGY,gCAAU;;;;;;;;ACPV;AACb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AAC9F;AACA;AACA,CAAC;AACD;;;;;;;;;;AC8uGA;;GAEG;AACH,IAAY,qBASX;AATD,WAAY,qBAAqB;IAC7B,8DAAqC;IACrC,uDAA8B;IAC9B,iDAAwB;IACxB,qDAA4B;IAC5B,uDAA8B;IAC9B,qDAA4B;IAC5B,mDAA0B;IAC1B,8CAAqB;AACzB,CAAC,EATW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAShC;AAED;;GAEG;AACH,IAAY,mBASX;AATD,WAAY,mBAAmB;IAC3B,4CAAqB;IACrB,iDAA0B;IAC1B,+CAAwB;IACxB,mDAA4B;IAC5B,sDAA+B;IAC/B,sDAA+B;IAC/B,kDAA2B;IAC3B,8CAAuB;AAC3B,CAAC,EATW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAS9B;AAED;;GAEG;AACH,IAAY,YAQX;AARD,WAAY,YAAY;IACpB,uCAAuB;IACvB,iCAAiB;IACjB,qCAAqB;IACrB,qCAAqB;IACrB,2BAAW;IACX,6BAAa;IACb,+BAAe;AACnB,CAAC,EARW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAQvB;AAED;;GAEG;AACH,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,8DAAkD;IAClD,gCAAoB;IACpB,0CAA8B;AAClC,CAAC,EAJW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAInB;AAED;;;;GAIG;AACH,IAAY,IAQX;AARD,WAAY,IAAI;IACZ,eAAO;IACP,eAAO;IACP,eAAO;IACP,mBAAW;IACX,iBAAS;IACT,eAAO;IACP,iBAAS;AACb,CAAC,EARW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAQf;AAED,IAAY,IA2BX;AA3BD,WAAY,IAAI;IACZ,iBAAS;IACT,mBAAW;IACX,mBAAW;IACX,8BAAsB;IACtB,4BAAoB;IACpB,mBAAW;IACX,mBAAW;IACX,eAAO;IACP,iBAAS;IACT,iBAAS;IACT,iBAAS;IACT,8BAAsB;IACtB,4BAAoB;IACpB,mBAAW;IACX,iBAAS;IACT,gCAAwB;IACxB,8BAAsB;IACtB,qBAAa;IACb,uBAAe;IACf,qBAAa;IACb,iBAAS;IACT,mBAAW;IACX,mBAAW;IACX,mBAAW;IACX,mBAAW;IACX,qBAAa;AACjB,CAAC,EA3BW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QA2Bf;AAED;;;;GAIG;AACH,IAAY,UAKX;AALD,WAAY,UAAU;IAClB,+BAAiB;IACjB,yBAAW;IACX,0BAAY;IACZ,2BAAa;AACjB,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAED;;GAEG;AACH,IAAY,SAGX;AAHD,WAAY,SAAS;IACjB,oCAAuB;IACvB,sCAAyB;AAC7B,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAED;;GAEG;AACH,IAAY,eAKX;AALD,WAAY,eAAe;IACvB,oCAAiB;IACjB,oCAAiB;IACjB,wCAAqB;IACrB,wCAAqB;AACzB,CAAC,EALW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK1B;AAED;;;GAGG;AACH,IAAY,MAQX;AARD,WAAY,MAAM;IACd,yBAAe;IACf,qBAAW;IACX,yBAAe;IACf,yBAAe;IACf,yBAAe;IACf,qBAAW;IACX,qBAAW;AACf,CAAC,EARW,MAAM,GAAN,cAAM,KAAN,cAAM,QAQjB;AAED;;GAEG;AACH,IAAY,eAMX;AAND,WAAY,eAAe;IACvB,gCAAa;IACb,oCAAiB;IACjB,8BAAW;IACX,gCAAa;IACb,gCAAa;AACjB,CAAC,EANW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAM1B;AAED;;GAEG;AACH,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,sCAAqB;IACrB,4BAAW;IACX,wCAAuB;IACvB,8BAAa;IACb,gCAAe;AACnB,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;AAED;;;GAGG;AACH,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,4BAAa;IACb,oCAAqB;IACrB,gCAAiB;AACrB,CAAC,EAJW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAItB;AAED;;GAEG;AACH,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,iCAAmB;IACnB,2BAAa;IACb,yBAAW;IACX,2BAAa;IACb,2BAAa;AACjB,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AA+GD;;;GAGG;AACH,IAAY,MAKX;AALD,WAAY,MAAM;IACd,mCAAyB;IACzB,yBAAe;IACf,mCAAyB;IACzB,iCAAuB;AAC3B,CAAC,EALW,MAAM,GAAN,cAAM,KAAN,cAAM,QAKjB;;;;;;;;;;AC31GD;;GAEG;AACH,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,kCAAiB;IACjB,oDAAmC;IACnC,sCAAqB;IACrB,mCAAkB;IAClB,oCAAmB;AACvB,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;;;;;;;;;;AC6RD;;GAEG;AACH,IAAY,wBAKX;AALD,WAAY,wBAAwB;IAChC,6CAAiB;IACjB,2CAAe;IACf,+CAAmB;IACnB,+CAAmB;AACvB,CAAC,EALW,wBAAwB,GAAxB,gCAAwB,KAAxB,gCAAwB,QAKnC;;;;;;;;;;ACtWD;;;GAGG;AACH,IAAY,SAGX;AAHD,WAAY,SAAS;IACjB,8BAAiB;IACjB,oCAAuB;AAC3B,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;;;;;;;;;;ACgBD,IAAY,0BAKX;AALD,WAAY,0BAA0B;IAClC,mDAAqB;IACrB,yDAA2B;IAC3B,2CAAa;IACb,uDAAyB;AAC7B,CAAC,EALW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAKrC;AAED;;;GAGG;AACH,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,4BAAa;IACb,0BAAW;IACX,kDAAmC;AACvC,CAAC,EAJW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAItB;AAuFD;;;GAGG;AACH,IAAY,0BAIX;AAJD,WAAY,0BAA0B;IAClC,2CAAa;IACb,mDAAqB;IACrB,+CAAiB;AACrB,CAAC,EAJW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAIrC;AAED;;GAEG;AACH,IAAY,sBAGX;AAHD,WAAY,sBAAsB;IAC9B,6CAAmB;IACnB,qDAA2B;AAC/B,CAAC,EAHW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAGjC;;;;;;;;;;AC7BD;;;;GAIG;AACH,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,gDAAoC;IACpC,iCAAqB;IACrB,iCAAqB;AACzB,CAAC,EAJW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAInB;AAED;;GAEG;AACH,IAAY,4BAKX;AALD,WAAY,4BAA4B;IACpC,qDAAqB;IACrB,qDAAqB;IACrB,4DAA4B;IAC5B,uDAAuB;AAC3B,CAAC,EALW,4BAA4B,GAA5B,oCAA4B,KAA5B,oCAA4B,QAKvC;AAED;;;;GAIG;AACH,IAAY,iBAWX;AAXD,WAAY,iBAAiB;IACzB,wCAAmB;IACnB,sCAAiB;IACjB,4CAAuB;IACvB,6CAAwB;IACxB,wDAAmC;IACnC,4CAAuB;IACvB,sCAAiB;IACjB,wCAAmB;IACnB,0CAAqB;IACrB,0CAAqB;AACzB,CAAC,EAXW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAW5B;;;;;;;;;;ACnMD;;GAEG;AACH,IAAY,MAMX;AAND,WAAY,MAAM;IACd,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;IACP,iBAAO;AACX,CAAC,EANW,MAAM,GAAN,cAAM,KAAN,cAAM,QAMjB;AA4JD;;GAEG;AACH,IAAY,qBAMX;AAND,WAAY,qBAAqB;IAC7B,mCAAU;IACV,mCAAU;IACV,mCAAU;IACV,mCAAU;IACV,mCAAU;AACd,CAAC,EANW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAMhC;AA8ID;;GAEG;AACH,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,+BAAU;IACV,iCAAY;IACZ,+BAAU;IACV,+BAAU;AACd,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;;;;;;;;;;AC9ID;;GAEG;AACH,IAAY,eAMX;AAND,WAAY,eAAe;IACvB,sDAAmC;IACnC,kCAAe;IACf,kCAAe;IACf,kCAAe;IACf,oCAAiB;AACrB,CAAC,EANW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAM1B;AAED;;GAEG;AACH,IAAY,gCAGX;AAHD,WAAY,gCAAgC;IACxC,2DAAuB;IACvB,+DAA2B;AAC/B,CAAC,EAHW,gCAAgC,GAAhC,wCAAgC,KAAhC,wCAAgC,QAG3C;AAiED;;GAEG;AACH,IAAY,KAIX;AAJD,WAAY,KAAK;IACb,4BAAmB;IACnB,gCAAuB;IACvB,0BAAiB;AACrB,CAAC,EAJW,KAAK,GAAL,aAAK,KAAL,aAAK,QAIhB;;;;;;;;;;AChCD;;;GAGG;AACH,IAAY,MAOX;AAPD,WAAY,MAAM;IACd,2BAAiB;IACjB,qBAAW;IACX,uBAAa;IACb,yBAAe;IACf,uBAAa;IACb,qBAAW;AACf,CAAC,EAPW,MAAM,GAAN,cAAM,KAAN,cAAM,QAOjB;AAuDD;;;;GAIG;AACH,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,uCAAmB;IACnB,mCAAe;IACf,uCAAmB;AACvB,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AAED;;GAEG;AACH,IAAY,UAUX;AAVD,WAAY,UAAU;IAClB,6BAAe;IACf,8CAAgC;IAChC,uCAAyB;IACzB,mCAAqB;IACrB,iCAAmB;IACnB,iCAAmB;IACnB,qCAAuB;IACvB,yCAA2B;IAC3B,0DAA4C;AAChD,CAAC,EAVW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAUrB;;;;;;;;;;AC7HD;;GAEG;AACH,IAAY,+BAGX;AAHD,WAAY,+BAA+B;IACvC,wDAAqB;IACrB,wDAAqB;AACzB,CAAC,EAHW,+BAA+B,GAA/B,uCAA+B,KAA/B,uCAA+B,QAG1C;AAED;;;;GAIG;AACH,IAAY,8BAsBX;AAtBD,WAAY,8BAA8B;IACtC,iDAAe;IACf,iDAAe;IACf,iDAAe;IACf,oDAAkB;IAClB,oDAAkB;IAClB,oDAAkB;IAClB,iDAAe;IACf,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;AACpB,CAAC,EAtBW,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAsBzC;AA+DD;;;;GAIG;AACH,IAAY,IAIX;AAJD,WAAY,IAAI;IACZ,iCAAyB;IACzB,6BAAqB;IACrB,qCAA6B;AACjC,CAAC,EAJW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAIf;AAgKD;;GAEG;AACH,IAAY,uCAGX;AAHD,WAAY,uCAAuC;IAC/C,gEAAqB;IACrB,4DAAiB;AACrB,CAAC,EAHW,uCAAuC,GAAvC,+CAAuC,KAAvC,+CAAuC,QAGlD;AAwID;;GAEG;AACH,IAAY,mCAKX;AALD,WAAY,mCAAmC;IAC3C,sDAAe;IACf,uEAAgC;IAChC,qEAA8B;IAC9B,kEAA2B;AAC/B,CAAC,EALW,mCAAmC,GAAnC,2CAAmC,KAAnC,2CAAmC,QAK9C;AAED;;;GAGG;AACH,IAAY,2BAGX;AAHD,WAAY,2BAA2B;IACnC,gDAAiB;IACjB,gDAAiB;AACrB,CAAC,EAHW,2BAA2B,GAA3B,mCAA2B,KAA3B,mCAA2B,QAGtC;AA6OD;;GAEG;AACH,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IACzB,0CAAqB;IACrB,mDAA8B;IAC9B,sCAAiB;AACrB,CAAC,EAJW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAI5B;AAED;;GAEG;AACH,IAAY,eAKX;AALD,WAAY,eAAe;IACvB,+CAA4B;IAC5B,mDAAgC;IAChC,yCAAsB;IACtB,iDAA8B;AAClC,CAAC,EALW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK1B;AAuDD;;GAEG;AACH,IAAY,kCAUX;AAVD,WAAY,kCAAkC;IAC1C,uDAAiB;IACjB,uDAAiB;IACjB,0EAAoC;IACpC,kEAA4B;IAC5B,qDAAe;IACf,mDAAa;IACb,gEAA0B;IAC1B,uDAAiB;IACjB,qDAAe;AACnB,CAAC,EAVW,kCAAkC,GAAlC,0CAAkC,KAAlC,0CAAkC,QAU7C;AAED,IAAY,eAMX;AAND,WAAY,eAAe;IACvB,wCAAqB;IACrB,sCAAmB;IACnB,kCAAe;IACf,sCAAmB;IACnB,wCAAqB;AACzB,CAAC,EANW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAM1B;AAsED;;GAEG;AACH,IAAY,kCAUX;AAVD,WAAY,kCAAkC;IAC1C,6DAAuB;IACvB,mDAAa;IACb,uDAAiB;IACjB,2DAAqB;IACrB,6DAAuB;IACvB,yDAAmB;IACnB,uDAAiB;IACjB,qDAAe;IACf,iDAAW;AACf,CAAC,EAVW,kCAAkC,GAAlC,0CAAkC,KAAlC,0CAAkC,QAU7C;AAED;;;;;;GAMG;AACH,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,sCAAwB;IACxB,qCAAuB;IACvB,kDAAoC;AACxC,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;AA4HD;;GAEG;AACH,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACjC,8CAAiB;IACjB,4CAAe;IACf,gDAAmB;IACnB,gDAAmB;AACvB,CAAC,EALW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAKpC;;;;;;;;;;ACl4BD;;GAEG;AACH,IAAY,oBAUX;AAVD,WAAY,oBAAoB;IAC5B,+CAAuB;IACvB,+CAAuB;IACvB,2DAAmC;IACnC,kDAA0B;IAC1B,kDAA0B;IAC1B,0CAAkB;IAClB,+CAAuB;IACvB,2CAAmB;IACnB,2CAAmB;AACvB,CAAC,EAVW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAU/B;;;;;;;;;;ACrPD;;GAEG;AACH,IAAY,cAMX;AAND,WAAY,cAAc;IACtB,mCAAiB;IACjB,qDAAmC;IACnC,uCAAqB;IACrB,uCAAqB;IACrB,yCAAuB;AAC3B,CAAC,EANW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAMzB;;;;;;;;;;ACXD;;;GAGG;AACH,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,+CAA+B;IAC/B,qCAAqB;AACzB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAED;;;GAGG;AACH,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC1B,uCAAiB;IACjB,qCAAe;IACf,yCAAmB;IACnB,yCAAmB;AACvB,CAAC,EALW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAK7B;;;;;;;;;;AC6DD;;GAEG;AACH,IAAY,gBAQX;AARD,WAAY,gBAAgB;IACxB,uCAAmB;IACnB,yCAAqB;IACrB,qCAAiB;IACjB,uDAAmC;IACnC,gDAA4B;IAC5B,uCAAmB;IACnB,uCAAmB;AACvB,CAAC,EARW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAQ3B;;;;;;;;;;AC6ID;;GAEG;AACH,IAAY,0BAKX;AALD,WAAY,0BAA0B;IAClC,+CAAiB;IACjB,6CAAe;IACf,iDAAmB;IACnB,iDAAmB;AACvB,CAAC,EALW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAKrC;;;;;;;;;;ACgqBD;;;;;GAKG;AACH,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,2BAAe;IACf,iDAAqC;IACrC,iDAAqC;AACzC,CAAC,EAJW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAInB;;;;;;;;;;AC7FD;;GAEG;AACH,IAAY,4BAIX;AAJD,WAAY,4BAA4B;IACpC,mDAAmB;IACnB,+CAAe;IACf,uDAAuB;AAC3B,CAAC,EAJW,4BAA4B,GAA5B,oCAA4B,KAA5B,oCAA4B,QAIvC;;;;;;;;;;ACvgBD;;;GAGG;AACH,IAAY,OAMX;AAND,WAAY,OAAO;IACf,gCAAqB;IACrB,8BAAmB;IACnB,gCAAqB;IACrB,qCAA0B;IAC1B,oCAAyB;AAC7B,CAAC,EANW,OAAO,GAAP,eAAO,KAAP,eAAO,QAMlB;AAsED;;GAEG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,sDAAkC;IAClC,4CAAwB;IACxB,gCAAY;IACZ,sCAAkB;AACtB,CAAC,EALW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAK3B;AAwED;;;GAGG;AACH,IAAY,sBAQX;AARD,WAAY,sBAAsB;IAC9B,6CAAmB;IACnB,uCAAa;IACb,2CAAiB;IACjB,+CAAqB;IACrB,6CAAmB;IACnB,6CAAmB;IACnB,2CAAiB;AACrB,CAAC,EARW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAQjC;AAED;;GAEG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,qCAAiB;IACjB,mCAAe;IACf,uCAAmB;IACnB,uCAAmB;AACvB,CAAC,EALW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAK3B;;;;;;;;;;AC/eD;;GAEG;AACH,IAAY,yBAMX;AAND,WAAY,yBAAyB;IACjC,8CAAiB;IACjB,oDAAuB;IACvB,gDAAmB;IACnB,0DAA6B;IAC7B,4DAA+B;AACnC,CAAC,EANW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAMpC;AA4DD;;GAEG;AACH,IAAY,2BAKX;AALD,WAAY,2BAA2B;IACnC,gDAAiB;IACjB,8CAAe;IACf,kDAAmB;IACnB,kDAAmB;AACvB,CAAC,EALW,2BAA2B,GAA3B,mCAA2B,KAA3B,mCAA2B,QAKtC;;;;;;;;;;ACnDD;;GAEG;AACH,IAAY,uBAKX;AALD,WAAY,uBAAuB;IAC/B,0CAAe;IACf,gDAAqB;IACrB,gDAAqB;IACrB,wDAA6B;AACjC,CAAC,EALW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAKlC;AA4ND;;;GAGG;AACH,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,wCAAmB;IACnB,wDAAmC;IACnC,oCAAe;IACf,gDAA2B;AAC/B,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;;;;;;;;;;ACkED;;;;GAIG;AACH,IAAY,WAWX;AAXD,WAAY,WAAW;IACnB,oCAAqB;IACrB,8BAAe;IACf,wCAAyB;IACzB,kCAAmB;IACnB,oCAAqB;IACrB,sCAAuB;IACvB,0CAA2B;IAC3B,oCAAqB;IACrB,sCAAuB;IACvB,8BAAe;AACnB,CAAC,EAXW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAWtB;AA4ED;;;;;;GAMG;AACH,IAAY,sBAIX;AAJD,WAAY,sBAAsB;IAC9B,yCAAe;IACf,gDAAsB;IACtB,+CAAqB;AACzB,CAAC,EAJW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAIjC;AAED;;GAEG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,qCAAiB;IACjB,mCAAe;IACf,uCAAmB;IACnB,uCAAmB;AACvB,CAAC,EALW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAK3B;;;;;;;;;;ACrPD;;GAEG;AACH,IAAY,OAKX;AALD,WAAY,OAAO;IACf,oCAAyB;IACzB,oCAAyB;IACzB,gCAAqB;IACrB,8BAAmB;AACvB,CAAC,EALW,OAAO,GAAP,eAAO,KAAP,eAAO,QAKlB;AAED;;;GAGG;AACH,IAAY,oBAGX;AAHD,WAAY,oBAAoB;IAC5B,qCAAa;IACb,yCAAiB;AACrB,CAAC,EAHW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAG/B;AAED;;GAEG;AACH,IAAY,aAOX;AAPD,WAAY,aAAa;IACrB,kCAAiB;IACjB,gCAAe;IACf,oDAAmC;IACnC,sCAAqB;IACrB,sCAAqB;IACrB,sCAAqB;AACzB,CAAC,EAPW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAOxB;;;;;;;;;;ACxED,IAAY,iCAKX;AALD,WAAY,iCAAiC;IACzC,2EAAsC;IACtC,0DAAqB;IACrB,4DAAuB;IACvB,8DAAyB;AAC7B,CAAC,EALW,iCAAiC,GAAjC,yCAAiC,KAAjC,yCAAiC,QAK5C;;;;;;;;;;AC+GD;;GAEG;AACH,IAAY,kCAKX;AALD,WAAY,kCAAkC;IAC1C,2DAAqB;IACrB,qDAAe;IACf,yDAAmB;IACnB,uDAAiB;AACrB,CAAC,EALW,kCAAkC,GAAlC,0CAAkC,KAAlC,0CAAkC,QAK7C;AAED,IAAY,kCAKX;AALD,WAAY,kCAAkC;IAC1C,4EAAsC;IACtC,2DAAqB;IACrB,6DAAuB;IACvB,+DAAyB;AAC7B,CAAC,EALW,kCAAkC,GAAlC,0CAAkC,KAAlC,0CAAkC,QAK7C;;;;;;;;;;ACpOD;;;GAGG;AACH,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC7B,sCAAa;IACb,oCAAW;IACX,8CAAqB;AACzB,CAAC,EAJW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAIhC;;;;;;;;;;AC2BD;;;GAGG;AACH,IAAY,oBAOX;AAPD,WAAY,oBAAoB;IAC5B,8DAAsC;IACtC,gDAAwB;IACxB,uCAAe;IACf,qEAA6C;IAC7C,uDAA+B;IAC/B,+DAAuC;AAC3C,CAAC,EAPW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAO/B;AAgGD;;GAEG;AACH,IAAY,YAKX;AALD,WAAY,YAAY;IACpB,iCAAiB;IACjB,mDAAmC;IACnC,qCAAqB;IACrB,mCAAmB;AACvB,CAAC,EALW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAKvB;AAsGD;;GAEG;AACH,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,gCAAmB;IACnB,0BAAa;IACb,8BAAiB;IACjB,0BAAa;IACb,2CAA8B;IAC9B,gCAAmB;AACvB,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;;;;;;;;;;AC7ND;;;GAGG;AACH,IAAY,8BAOX;AAPD,WAAY,8BAA8B;IACtC,wEAAsC;IACtC,0DAAwB;IACxB,iDAAe;IACf,+EAA6C;IAC7C,iEAA+B;IAC/B,yEAAuC;AAC3C,CAAC,EAPW,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAOzC;;;;;;;;;;ACvGD;;GAEG;AACH,IAAY,KAKX;AALD,WAAY,KAAK;IACb,kCAAyB;IACzB,qDAA4C;IAC5C,yCAAgC;IAChC,oCAA2B;AAC/B,CAAC,EALW,KAAK,GAAL,aAAK,KAAL,aAAK,QAKhB;AAED;;GAEG;AACH,IAAY,2BAKX;AALD,WAAY,2BAA2B;IACnC,4CAAa;IACb,gDAAiB;IACjB,qDAAsB;IACtB,0DAA2B;AAC/B,CAAC,EALW,2BAA2B,GAA3B,mCAA2B,KAA3B,mCAA2B,QAKtC;AAED;;;GAGG;AACH,IAAY,oBAKX;AALD,WAAY,oBAAoB;IAC5B,mDAA2B;IAC3B,mDAA2B;IAC3B,2CAAmB;IACnB,mDAA2B;AAC/B,CAAC,EALW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAK/B;AAED;;;;;GAKG;AACH,IAAY,KASX;AATD,WAAY,KAAK;IACb,wBAAe;IACf,sBAAa;IACb,sBAAa;IACb,wBAAe;IACf,4BAAmB;IACnB,oBAAW;IACX,wBAAe;IACf,0BAAiB;AACrB,CAAC,EATW,KAAK,GAAL,aAAK,KAAL,aAAK,QAShB;AAED;;GAEG;AACH,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,wDAAmC;IACnC,gCAAW;IACX,8BAAS;IACT,wCAAmB;AACvB,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;;;;;;;;;;ACtGD;;;GAGG;AACH,IAAY,wBAOX;AAPD,WAAY,wBAAwB;IAChC,6CAAiB;IACjB,mDAAuB;IACvB,+DAAmC;IACnC,iDAAqB;IACrB,8CAAkB;IAClB,+CAAmB;AACvB,CAAC,EAPW,wBAAwB,GAAxB,gCAAwB,KAAxB,gCAAwB,QAOnC;;;;;;;;;;ACyED;;GAEG;AACH,IAAY,sBAWX;AAXD,WAAY,sBAAsB;IAC9B,6CAAmB;IACnB,+CAAqB;IACrB,iDAAuB;IACvB,iDAAuB;IACvB,6DAAmC;IACnC,yCAAe;IACf,6CAAmB;IACnB,qDAA2B;IAC3B,mDAAyB;IACzB,6CAAmB;AACvB,CAAC,EAXW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAWjC;;;;;;;;;;AC5DD;;GAEG;AACH,IAAY,sBAIX;AAJD,WAAY,sBAAsB;IAC9B,6CAAmB;IACnB,6DAAmC;IACnC,mDAAyB;AAC7B,CAAC,EAJW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAIjC;;;;;;;;;;ACwID;;GAEG;AACH,IAAY,8BAKX;AALD,WAAY,8BAA8B;IACtC,qDAAmB;IACnB,uDAAqB;IACrB,iDAAe;IACf,2DAAyB;AAC7B,CAAC,EALW,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAKzC;AAED;;GAEG;AACH,IAAY,uBAIX;AAJD,WAAY,uBAAuB;IAC/B,8CAAmB;IACnB,8DAAmC;IACnC,oDAAyB;AAC7B,CAAC,EAJW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAIlC;;;;;;;;;;AC4ND;;GAEG;AACH,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,sCAAqB;IACrB,6DAA4C;AAChD,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;AA+DD;;;GAGG;AACH,IAAY,6BAKX;AALD,WAAY,6BAA6B;IACrC,kDAAiB;IACjB,gDAAe;IACf,oDAAmB;IACnB,oDAAmB;AACvB,CAAC,EALW,6BAA6B,GAA7B,qCAA6B,KAA7B,qCAA6B,QAKxC;;;;;;;;;;ACzOD;;;;GAIG;AACH,IAAY,uBAKX;AALD,WAAY,uBAAuB;IAC/B,4CAAiB;IACjB,kDAAuB;IACvB,8CAAmB;IACnB,gDAAqB;AACzB,CAAC,EALW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAKlC;AAiDD;;GAEG;AACH,IAAY,eAUX;AAVD,WAAY,eAAe;IACvB,sCAAmB;IACnB,0CAAuB;IACvB,sDAAmC;IACnC,wCAAqB;IACrB,6CAA0B;IAC1B,sCAAmB;IACnB,sCAAmB;IACnB,sCAAmB;IACnB,sCAAmB;AACvB,CAAC,EAVW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAU1B;;;;;;;;;;ACtVD;;GAEG;AACH,IAAY,cAOX;AAPD,WAAY,cAAc;IACtB,mCAAiB;IACjB,qDAAmC;IACnC,iCAAe;IACf,6BAAW;IACX,yCAAuB;IACvB,+BAAa;AACjB,CAAC,EAPW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAOzB;;;;;;;;;;ACrCD;;GAEG;AACH,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACjC,kDAAqB;IACrB,4CAAe;IACf,gDAAmB;IACnB,8CAAiB;AACrB,CAAC,EALW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAKpC;;;;;;;;;;ACwDD;;GAEG;AACH,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC3B,wCAAiB;IACjB,8CAAuB;IACvB,0DAAmC;IACnC,4CAAqB;IACrB,wCAAiB;IACjB,0CAAmB;IACnB,4CAAqB;AACzB,CAAC,EARW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAQ9B;;;;;;;;;;AC0FD;;GAEG;AACH,IAAY,qBAKX;AALD,WAAY,qBAAqB;IAC7B,0CAAiB;IACjB,wCAAe;IACf,4CAAmB;IACnB,4CAAmB;AACvB,CAAC,EALW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAKhC;;;;;;;;;;ACrBD;;GAEG;AACH,IAAY,cAKX;AALD,WAAY,cAAc;IACtB,mCAAiB;IACjB,iCAAe;IACf,qCAAmB;IACnB,qCAAmB;AACvB,CAAC,EALW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAKzB;;;;;;;;;;ACoID;;GAEG;AACH,IAAY,YAOX;AAPD,WAAY,YAAY;IACpB,6BAAa;IACb,2CAA2B;IAC3B,+CAA+B;IAC/B,iCAAiB;IACjB,+CAA+B;IAC/B,mDAAmC;AACvC,CAAC,EAPW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAOvB;AAED;;GAEG;AACH,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAC9B,2CAAiB;IACjB,yCAAe;IACf,6CAAmB;IACnB,6CAAmB;AACvB,CAAC,EALW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAKjC;AAED;;GAEG;AACH,IAAY,oBAIX;AAJD,WAAY,oBAAoB;IAC5B,iDAAyB;IACzB,mDAA2B;IAC3B,mDAA2B;AAC/B,CAAC,EAJW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAI/B;;;;;;;;;;ACjLD;;GAEG;AACH,IAAY,wBAGX;AAHD,WAAY,wBAAwB;IAChC,6CAAiB;IACjB,6CAAiB;AACrB,CAAC,EAHW,wBAAwB,GAAxB,gCAAwB,KAAxB,gCAAwB,QAGnC;AA+cD;;GAEG;AACH,IAAY,qBAKX;AALD,WAAY,qBAAqB;IAC7B,0CAAiB;IACjB,wCAAe;IACf,4CAAmB;IACnB,4CAAmB;AACvB,CAAC,EALW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAKhC;;;;;;;;;;AC+8BD;;GAEG;AACH,IAAY,mCAIX;AAJD,WAAY,mCAAmC;IAC3C,0DAAmB;IACnB,sDAAe;IACf,8DAAuB;AAC3B,CAAC,EAJW,mCAAmC,GAAnC,2CAAmC,KAAnC,2CAAmC,QAI9C;AAkDD;;GAEG;AACH,IAAY,0BAKX;AALD,WAAY,0BAA0B;IAClC,+CAAiB;IACjB,qDAAuB;IACvB,6CAAe;IACf,iEAAmC;AACvC,CAAC,EALW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAKrC;;;;;;;;;;ACn7CD;;;GAGG;AACH,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACjC,oDAAuB;IACvB,gEAAmC;IACnC,6DAAgC;IAChC,gDAAmB;AACvB,CAAC,EALW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAKpC;;;;;;;;;;ACxND;;GAEG;AACH,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,+BAAiB;IACjB,iDAAmC;IACnC,mCAAqB;AACzB,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;;;;;;;;;;AC+CD;;GAEG;AACH,IAAY,eAUX;AAVD,WAAY,eAAe;IACvB,wCAAqB;IACrB,oCAAiB;IACjB,0CAAuB;IACvB,0CAAuB;IACvB,sDAAmC;IACnC,qCAAkB;IAClB,sCAAmB;IACnB,wCAAqB;IACrB,wCAAqB;AACzB,CAAC,EAVW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAU1B;;;;;;;;;;ACmOD;;GAEG;AACH,IAAY,IAKX;AALD,WAAY,IAAI;IACZ,yBAAiB;IACjB,+BAAuB;IACvB,+BAAuB;IACvB,6BAAqB;AACzB,CAAC,EALW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAKf;AAED;;;GAGG;AACH,IAAY,6BAGX;AAHD,WAAY,6BAA6B;IACrC,wDAAuB;IACvB,4DAA2B;AAC/B,CAAC,EAHW,6BAA6B,GAA7B,qCAA6B,KAA7B,qCAA6B,QAGxC;AAED;;GAEG;AACH,IAAY,qBAKX;AALD,WAAY,qBAAqB;IAC7B,0CAAiB;IACjB,wCAAe;IACf,4CAAmB;IACnB,4CAAmB;AACvB,CAAC,EALW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAKhC;;;;;;;;;;ACnKD;;GAEG;AACH,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,8BAAiB;IACjB,8BAAiB;IACjB,sCAAyB;IACzB,8BAAiB;IACjB,0CAA6B;IAC7B,oCAAuB;AAC3B,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;;;;;;;;;;ACxGD;;;;;;;;GAQG;AACH,IAAY,sBAOX;AAPD,WAAY,sBAAsB;IAC9B,0DAAgC;IAChC,wDAA8B;IAC9B,6DAAmC;IACnC,6CAAmB;IACnB,oDAA0B;IAC1B,6CAAmB;AACvB,CAAC,EAPW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAOjC;;;;;;;;;;ACgFD,IAAY,UAQX;AARD,WAAY,UAAU;IAClB,yBAAW;IACX,yBAAW;IACX,yBAAW;IACX,yBAAW;IACX,yBAAW;IACX,yBAAW;IACX,yBAAW;AACf,CAAC,EARW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAQrB;;;;;;;;;;ACiID;;GAEG;AACH,IAAY,kBAMX;AAND,WAAY,kBAAkB;IAC1B,6CAAuB;IACvB,6CAAuB;IACvB,yDAAmC;IACnC,+CAAyB;IACzB,yCAAmB;AACvB,CAAC,EANW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAM7B;;;;;;;;;;ACCD;;GAEG;AACH,IAAY,UAKX;AALD,WAAY,UAAU;IAClB,qCAAuB;IACvB,2BAAa;IACb,mCAAqB;IACrB,yBAAW;AACf,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAuDD;;;GAGG;AACH,IAAY,gCAWX;AAXD,WAAY,gCAAgC;IACxC,mDAAe;IACf,8EAA0C;IAC1C,sEAAkC;IAClC,kEAA8B;IAC9B,gEAA4B;IAC5B,kEAA8B;IAC9B,4DAAwB;IACxB,kEAA8B;IAC9B,iEAA6B;IAC7B,yEAAqC;AACzC,CAAC,EAXW,gCAAgC,GAAhC,wCAAgC,KAAhC,wCAAgC,QAW3C;AA+FD,IAAY,8BAsBX;AAtBD,WAAY,8BAA8B;IACtC,iDAAe;IACf,iDAAe;IACf,iDAAe;IACf,oDAAkB;IAClB,oDAAkB;IAClB,oDAAkB;IAClB,iDAAe;IACf,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;IAChB,kDAAgB;AACpB,CAAC,EAtBW,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAsBzC;AAuKD;;;GAGG;AACH,IAAY,OA2VX;AA3VD,WAAY,OAAO;IACf,sBAAW;IACX,wBAAa;IACb,uCAA4B;IAC5B,8CAAmC;IACnC,uCAA4B;IAC5B,8CAAmC;IACnC,4BAAiB;IACjB,gCAAqB;IACrB,mCAAwB;IACxB,qCAA0B;IAC1B,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,gCAAqB;IACrB,8BAAmB;IACnB,8BAAmB;IACnB,sBAAW;IACX,0BAAe;IACf,+BAAoB;IACpB,kCAAuB;IACvB,kCAAuB;IACvB,kCAAuB;IACvB,4BAAiB;IACjB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,sCAA2B;IAC3B,6CAAkC;IAClC,+CAAoC;IACpC,sCAA2B;IAC3B,sCAA2B;IAC3B,sCAA2B;IAC3B,qDAA0C;IAC1C,mDAAwC;IACxC,mDAAwC;IACxC,sCAA2B;IAC3B,6DAAkD;IAClD,iDAAsC;IACtC,+CAAoC;IACpC,yEAA8D;IAC9D,kFAAuE;IACvE,2EAAgE;IAChE,sCAA2B;IAC3B,2CAAgC;IAChC,2CAAgC;IAChC,4CAAiC;IACjC,4BAAiB;IACjB,wBAAa;IACb,gCAAqB;IACrB,0CAA+B;IAC/B,0CAA+B;IAC/B,8BAAmB;IACnB,4BAAiB;IACjB,mCAAwB;IACxB,mCAAwB;IACxB,mDAAwC;IACxC,6CAAkC;IAClC,qCAA0B;IAC1B,qCAA0B;IAC1B,iEAAsD;IACtD,mCAAwB;IACxB,8BAAmB;IACnB,kCAAuB;IACvB,4BAAiB;IACjB,+BAAoB;IACpB,+BAAoB;IACpB,+BAAoB;IACpB,+BAAoB;IACpB,+BAAoB;IACpB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,yCAA8B;IAC9B,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,oCAAyB;IACzB,8BAAmB;IACnB,8BAAmB;IACnB,kCAAuB;IACvB,kCAAuB;IACvB,kCAAuB;IACvB,kCAAuB;IACvB,+BAAoB;IACpB,+BAAoB;IACpB,oCAAyB;IACzB,kCAAuB;IACvB,8BAAmB;IACnB,4BAAiB;IACjB,gCAAqB;IACrB,kCAAuB;IACvB,4CAAiC;IACjC,wBAAa;IACb,wBAAa;IACb,+BAAoB;IACpB,gCAAqB;IACrB,sBAAW;IACX,8BAAmB;IACnB,wBAAa;IACb,8BAAmB;IACnB,4BAAiB;IACjB,oCAAyB;IACzB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,8BAAmB;IACnB,4BAAiB;IACjB,4BAAiB;IACjB,gCAAqB;IACrB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,wBAAa;IACb,wCAA6B;IAC7B,kCAAuB;IACvB,0BAAe;IACf,0BAAe;IACf,8BAAmB;IACnB,sBAAW;IACX,uCAA4B;IAC5B,8CAAmC;IACnC,uCAA4B;IAC5B,8CAAmC;IACnC,uCAA4B;IAC5B,8CAAmC;IACnC,qCAA0B;IAC1B,4CAAiC;IACjC,qCAA0B;IAC1B,4CAAiC;IACjC,qCAA0B;IAC1B,4CAAiC;IACjC,kCAAuB;IACvB,gCAAqB;IACrB,0BAAe;IACf,0BAAe;IACf,4BAAiB;IACjB,8BAAmB;IACnB,0CAA+B;IAC/B,wBAAa;IACb,+BAAoB;IACpB,4BAAiB;IACjB,4BAAiB;IACjB,sBAAW;IACX,sBAAW;IACX,sBAAW;IACX,sCAA2B;IAC3B,4BAAiB;IACjB,+BAAoB;IACpB,0BAAe;IACf,mCAAwB;IACxB,wCAA6B;IAC7B,sBAAW;IACX,wBAAa;IACb,kCAAuB;IACvB,uCAA4B;IAC5B,8CAAmC;IACnC,uCAA4B;IAC5B,8CAAmC;IACnC,uCAA4B;IAC5B,8CAAmC;IACnC,gCAAqB;IACrB,gCAAqB;IACrB,4BAAiB;IACjB,4BAAiB;IACjB,8BAAmB;IACnB,kCAAuB;IACvB,4BAAiB;IACjB,mCAAwB;IACxB,mCAAwB;IACxB,2CAAgC;IAChC,4BAAiB;IACjB,8BAAmB;IACnB,uCAA4B;IAC5B,4BAAiB;IACjB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,8BAAmB;IACnB,sBAAW;IACX,yBAAc;IACd,6CAAkC;IAClC,6BAAkB;IAClB,+BAAoB;IACpB,6BAAkB;IAClB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,qEAA0D;IAC1D,yBAAc;IACd,yBAAc;IACd,kCAAuB;IACvB,0BAAe;IACf,4BAAiB;IACjB,gCAAqB;IACrB,4BAAiB;IACjB,wBAAa;IACb,8BAAmB;IACnB,sBAAW;IACX,wBAAa;IACb,4BAAiB;IACjB,4BAAiB;IACjB,sBAAW;IACX,8BAAmB;IACnB,4BAAiB;IACjB,8BAAmB;IACnB,4BAAiB;IACjB,+BAAoB;IACpB,gCAAqB;IACrB,wBAAa;IACb,8BAAmB;IACnB,wBAAa;IACb,0BAAe;IACf,wBAAa;IACb,4CAAiC;IACjC,0BAAe;IACf,gCAAqB;IACrB,sBAAW;IACX,8BAAmB;IACnB,6BAAkB;IAClB,8BAAmB;IACnB,4BAAiB;IACjB,4BAAiB;IACjB,0BAAe;IACf,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,mCAAwB;IACxB,gCAAqB;IACrB,gCAAqB;IACrB,mCAAwB;IACxB,mCAAwB;IACxB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,gCAAqB;IACrB,sBAAW;IACX,8BAAmB;IACnB,4BAAiB;IACjB,mCAAwB;IACxB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,8BAAmB;IACnB,8BAAmB;IACnB,4BAAiB;IACjB,oCAAyB;IACzB,4BAAiB;IACjB,8BAAmB;IACnB,kCAAuB;IACvB,0BAAe;IACf,4BAAiB;IACjB,kCAAuB;IACvB,2BAAgB;IAChB,0BAAe;IACf,4BAAiB;IACjB,4BAAiB;IACjB,8BAAmB;IACnB,0BAAe;IACf,wBAAa;IACb,2BAAgB;IAChB,+BAAoB;IACpB,+BAAoB;IACpB,+BAAoB;IACpB,8BAAmB;IACnB,wBAAa;IACb,gCAAqB;IACrB,gCAAqB;IACrB,0BAAe;IACf,gCAAqB;IACrB,kCAAuB;IACvB,0BAAe;IACf,0BAAe;IACf,wBAAa;IACb,mCAAwB;IACxB,mCAAwB;IACxB,mCAAwB;IACxB,4BAAiB;IACjB,yCAA8B;IAC9B,sBAAW;IACX,uCAA4B;IAC5B,0BAAe;IACf,sBAAW;IACX,2BAAgB;IAChB,kCAAuB;IACvB,wBAAa;IACb,8CAAmC;IACnC,8CAAmC;IACnC,qCAA0B;IAC1B,kCAAuB;IACvB,4BAAiB;IACjB,sBAAW;IACX,8BAAmB;IACnB,4BAAiB;IACjB,sBAAW;IACX,uCAA4B;IAC5B,uCAA4B;IAC5B,kCAAuB;IACvB,4BAAiB;IACjB,0BAAe;IACf,sBAAW;IACX,oCAAyB;IACzB,0BAAe;IACf,0BAAe;IACf,4BAAiB;IACjB,wBAAa;IACb,sBAAW;IACX,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,4BAAiB;IACjB,sBAAW;IACX,8BAAmB;IACnB,kCAAuB;IACvB,kCAAuB;IACvB,wBAAa;IACb,uDAA4C;AAChD,CAAC,EA3VW,OAAO,GAAP,eAAO,KAAP,eAAO,QA2VlB;AA0MD;;GAEG;AACH,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACjC,8CAAiB;IACjB,4CAAe;IACf,gDAAmB;IACnB,gDAAmB;AACvB,CAAC,EALW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAKpC;;;;;;;;;;ACnvBD;;GAEG;AACH,IAAY,mBAKX;AALD,WAAY,mBAAmB;IAC3B,wCAAiB;IACjB,sCAAe;IACf,0CAAmB;IACnB,0CAAmB;AACvB,CAAC,EALW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAK9B;;;;;;;;;;ACzTD;;GAEG;AACH,IAAY,yBAOX;AAPD,WAAY,yBAAyB;IACjC,0CAAa;IACb,oDAAuB;IACvB,kDAAqB;IACrB,4DAA+B;IAC/B,oDAAuB;IACvB,wCAAW;AACf,CAAC,EAPW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAOpC;AA8CD;;GAEG;AACH,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,sCAAqB;IACrB,wCAAuB;IACvB,gCAAe;IACf,oDAAmC;IACnC,kCAAiB;AACrB,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;;;;;;;;;;AC5CD;;GAEG;AACH,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,kCAAiB;IACjB,gCAAe;IACf,oCAAmB;IACnB,oCAAmB;AACvB,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB;;;;;;;;;;ACjLD;;;GAGG;AACH,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,0CAAuB;IACvB,4CAAyB;IACzB,oCAAiB;AACrB,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B;;;;;;;;;;AC2DD;;;;;GAKG;AACH,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,+BAAmB;IACnB,iCAAqB;IACrB,+BAAmB;AACvB,CAAC,EAJW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAInB;AAED;;GAEG;AACH,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,iCAAmB;IACnB,iDAAmC;IACnC,iCAAmB;AACvB,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;;;;;;;;;;ACqBD;;;GAGG;AACH,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,qCAAqB;IACrB,6BAAa;AACjB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAkED;;;;GAIG;AACH,IAAY,cAIX;AAJD,WAAY,cAAc;IACtB,mCAAiB;IACjB,uCAAqB;IACrB,yCAAuB;AAC3B,CAAC,EAJW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAIzB;;;;;;;;;;AC+QD;;GAEG;AACH,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,kCAAiB;IACjB,gCAAe;IACf,oCAAmB;IACnB,oCAAmB;AACvB,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB;;;;;;;;;;ACzKD;;;GAGG;AACH,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC3B,4CAAqB;IACrB,sCAAe;IACf,0CAAmB;AACvB,CAAC,EAJW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAI9B;AAED;;;;;;;GAOG;AACH,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,uDAAkC;IAClC,8CAAyB;IACzB,iDAA4B;IAC5B,wCAAmB;AACvB,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B;;;;;;;;;;AC3JD;;GAEG;AACH,IAAY,yBAIX;AAJD,WAAY,yBAAyB;IACjC,wDAA2B;IAC3B,kDAAqB;IACrB,0DAA6B;AACjC,CAAC,EAJW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAIpC;AAoED;;;GAGG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,qCAAiB;IACjB,mCAAe;IACf,wCAAoB;IACpB,4CAAwB;AAC5B,CAAC,EALW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAK3B;AAED;;GAEG;AACH,IAAY,uBAKX;AALD,WAAY,uBAAuB;IAC/B,4CAAiB;IACjB,0CAAe;IACf,8CAAmB;IACnB,8CAAmB;AACvB,CAAC,EALW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAKlC;;;;;;;;;;ACxID;;;GAGG;AACH,IAAY,yBAIX;AAJD,WAAY,yBAAyB;IACjC,uDAA0B;IAC1B,sCAAS;IACT,+DAAkC;AACtC,CAAC,EAJW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAIpC;;;;;;;;;;AC8ID;;GAEG;AACH,IAAY,4BAIX;AAJD,WAAY,4BAA4B;IACpC,+CAAe;IACf,2CAAW;IACX,mDAAmB;AACvB,CAAC,EAJW,4BAA4B,GAA5B,oCAA4B,KAA5B,oCAA4B,QAIvC;AA+GD;;;;GAIG;AACH,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,sCAAuB;IACvB,8BAAe;AACnB,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB;AAED;;;;GAIG;AACH,IAAY,MAGX;AAHD,WAAY,MAAM;IACd,yBAAe;IACf,2BAAiB;AACrB,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;AAsFD;;;GAGG;AACH,IAAY,+BAMX;AAND,WAAY,+BAA+B;IACvC,4DAAyB;IACzB,kDAAe;IACf,kDAAe;IACf,sDAAmB;IACnB,kDAAe;AACnB,CAAC,EANW,+BAA+B,GAA/B,uCAA+B,KAA/B,uCAA+B,QAM1C;AA2KD;;GAEG;AACH,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC7B,kCAAS;IACT,oCAAW;IACX,oCAAW;AACf,CAAC,EAJW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAIhC","file":"fhir_resources.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fhir_resources\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fhir_resources\"] = factory();\n\telse\n\t\troot[\"fhir_resources\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export * from './fhir._';\nexport * from './fhir.Account';\nexport * from './fhir.ActivityDefinition';\nexport * from './fhir.AdverseEvent';\nexport * from './fhir.AllergyIntolerance';\nexport * from './fhir.Appointment';\nexport * from './fhir.AppointmentResponse';\nexport * from './fhir.AuditEvent';\nexport * from './fhir.Basic';\nexport * from './fhir.Binary';\nexport * from './fhir.BiologicallyDerivedProduct';\nexport * from './fhir.BodyStructure';\nexport * from './fhir.Bundle';\nexport * from './fhir.CapabilityStatement';\nexport * from './fhir.CarePlan';\nexport * from './fhir.CareTeam';\nexport * from './fhir.CatalogEntry';\nexport * from './fhir.ChargeItem';\nexport * from './fhir.ChargeItemDefinition';\nexport * from './fhir.Claim';\nexport * from './fhir.ClaimResponse';\nexport * from './fhir.ClinicalImpression';\nexport * from './fhir.CodeSystem';\nexport * from './fhir.Communication';\nexport * from './fhir.CommunicationRequest';\nexport * from './fhir.CompartmentDefinition';\nexport * from './fhir.Composition';\nexport * from './fhir.ConceptMap';\nexport * from './fhir.Condition';\nexport * from './fhir.Consent';\nexport * from './fhir.Contract';\nexport * from './fhir.Coverage';\nexport * from './fhir.CoverageEligibilityRequest';\nexport * from './fhir.CoverageEligibilityResponse';\nexport * from './fhir.DetectedIssue';\nexport * from './fhir.Device';\nexport * from './fhir.DeviceDefinition';\nexport * from './fhir.DeviceMetric';\nexport * from './fhir.DeviceRequest';\nexport * from './fhir.DeviceUseStatement';\nexport * from './fhir.DiagnosticReport';\nexport * from './fhir.DocumentManifest';\nexport * from './fhir.DocumentReference';\nexport * from './fhir.EffectEvidenceSynthesis';\nexport * from './fhir.Encounter';\nexport * from './fhir.Endpoint';\nexport * from './fhir.EnrollmentRequest';\nexport * from './fhir.EnrollmentResponse';\nexport * from './fhir.EpisodeOfCare';\nexport * from './fhir.EventDefinition';\nexport * from './fhir.Evidence';\nexport * from './fhir.EvidenceVariable';\nexport * from './fhir.ExampleScenario';\nexport * from './fhir.ExplanationOfBenefit';\nexport * from './fhir.FamilyMemberHistory';\nexport * from './fhir.Flag';\nexport * from './fhir.Goal';\nexport * from './fhir.GraphDefinition';\nexport * from './fhir.Group';\nexport * from './fhir.GuidanceResponse';\nexport * from './fhir.HealthcareService';\nexport * from './fhir.ImagingStudy';\nexport * from './fhir.Immunization';\nexport * from './fhir.ImmunizationEvaluation';\nexport * from './fhir.ImmunizationRecommendation';\nexport * from './fhir.ImplementationGuide';\nexport * from './fhir.InsurancePlan';\nexport * from './fhir.Invoice';\nexport * from './fhir.Library';\nexport * from './fhir.Linkage';\nexport * from './fhir.List';\nexport * from './fhir.Location';\nexport * from './fhir.Measure';\nexport * from './fhir.MeasureReport';\nexport * from './fhir.Media';\nexport * from './fhir.Medication';\nexport * from './fhir.MedicationAdministration';\nexport * from './fhir.MedicationDispense';\nexport * from './fhir.MedicationKnowledge';\nexport * from './fhir.MedicationRequest';\nexport * from './fhir.MedicationStatement';\nexport * from './fhir.MedicinalProduct';\nexport * from './fhir.MedicinalProductAuthorization';\nexport * from './fhir.MedicinalProductContraindication';\nexport * from './fhir.MedicinalProductIndication';\nexport * from './fhir.MedicinalProductIngredient';\nexport * from './fhir.MedicinalProductInteraction';\nexport * from './fhir.MedicinalProductManufactured';\nexport * from './fhir.MedicinalProductPackaged';\nexport * from './fhir.MedicinalProductPharmaceutical';\nexport * from './fhir.MedicinalProductUndesirableEffect';\nexport * from './fhir.MessageDefinition';\nexport * from './fhir.MessageHeader';\nexport * from './fhir.MolecularSequence';\n\n","//https://hackernoon.com/import-json-into-typescript-8d465beded79\n//https://webpack.js.org/guides/typescript/\n//https://itnext.io/step-by-step-building-and-publishing-an-npm-typescript-package-44fe7164964c\n\n/**\n * EXPORTS OF I4MI Resources\n */\nexport { I4MIBundle, I4MIInterfaceToMapResource } from './resource/version4.0.0/bundle';\n\n/**\n * This function exports you the library for the given fhir version\n * The supported fhir versions are given in the SupportedFhirVersion enum type\n * If no version is given, it will always take the latest\n * @param version Version for fhir resources to export\n */\nexport function getResources(version?: SupportedFhirVersions) {\n    if (typeof version === 'undefined') {\n        console.log(`No version given. Exports latest (${SupportedFhirVersions.latest}) supported fhir version.`);\n        return import('./definition/version4.0.0');\n    }\n\n    switch (version) {\n        case SupportedFhirVersions.V4_0_0:\n            console.log('dynamic export R4');\n            return import('./definition/version4.0.0');\n        case SupportedFhirVersions.V3_0_1:\n            console.log('dynamic export STU3');\n            return 'NOT_IMPLEMENTED_YET';\n    }\n}\n\nexport enum SupportedFhirVersions {\n    latest = 'V4_0_0',\n    V4_0_0 = 'V4_0_0',\n    V3_0_1 = 'V3_0_1'\n}","import { BundleType, Bundle, Method, BundleEntry } from \"../../definition/version4.0.0/fhir.Bundle\";\nimport { Guid } from \"guid-typescript\";\n\nexport interface I4MIInterfaceToMapResource {\n    [key: string]: any;\n}\n\nexport class I4MIBundle implements Bundle {\n    resourceType = 'Bundle';\n\n    type!: BundleType;\n    entry!: Array<BundleEntry>;\n\n    constructor(type: BundleType) {\n        this.type = type;\n    }\n\n    /**\n     * Add resource to bundle as BundleEntry\n     * @param method Request method of bundle entry\n     * @param resourceType Resource type of bundle entry\n     * @param resource A fhir resource. Note that is has to be a valid resource!\n     * @returns the added bundle entry\n     */\n    addEntry(method: Method, resourceType: string, resource: any): BundleEntry {\n\n        let id: string;\n\n        // Generate id\n        id = this.generateId();\n\n        // create entry array if still undefined\n        if (typeof this.entry === 'undefined') {\n            this.entry = [];\n        }\n\n        // check if id of resource is already set\n        if (typeof resource.id !== 'undefined') {\n            // now using already given id\n            console.warn(`Entry id already given. Now using ${resource.id} as id`);\n            id = resource.id;\n\n            // check if there already is an entry with given id\n            if (this.idAlreadyExistsInBundle(id)) {\n                throw Error(`An entry with the id ${resource.id} already exists in bundle`);\n            }\n        }\n\n        // Set relative id to entry\n        resource.id = id;\n\n        // adding bundle entry of resource with method and resource type\n        let bundleEntry: BundleEntry = {\n            request: {\n                method: method,\n                url: resourceType\n            },\n            resource: resource\n        };\n        this.entry.push(bundleEntry);\n\n        return bundleEntry;\n    }\n\n    /**\n     * Removes an entry with the id x from the bundle\n     * @param id Id of entry to remove\n     * @returns the removed bundle entry or, if id not found, undefined\n     */\n    removeEntry(id: string): BundleEntry | undefined {\n        let removedItem: BundleEntry | undefined = undefined;\n        this.entry.forEach((e, index) => {\n            let resource = <I4MIInterfaceToMapResource>e.resource;\n            if (resource['id'] === id) {\n                removedItem = e;\n                this.entry.splice(index, 1);\n            }\n        });\n        if (typeof removedItem === 'undefined')\n            console.warn(`No Entry to remove with id ${id} found`)\n        \n        return removedItem;\n    }\n\n    /**\n     * Generates a id for\n     * @returns guid as string\n     */\n    private generateId(): string {\n        return Guid.create().toString();\n    }\n\n    /**\n     * Checks if the given id already exists in the bundle\n     * @param id id to check if exists in bundle\n     * @returns true, if id already exists\n     * @returns false, if id not exists\n     */\n    private idAlreadyExistsInBundle(id: string) {\n        for (let e of this.entry) {\n            let resource = <I4MIInterfaceToMapResource>e.resource;\n            if (resource['id'] === id)\n                return true;\n        }\n        return false;\n    }\n\n}","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","/**\n * The marketing status describes the date when a medicinal product is actually put on the\n * market or the date as of which it is no longer available.\n */\nexport interface MarketingStatus {\n    /**\n     * Extensions for restoreDate\n     */\n    _restoreDate?: Element;\n    /**\n     * The country in which the marketing authorisation has been granted shall be specified It\n     * should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.\n     */\n    country?: CodeableConcept;\n    /**\n     * The date when the Medicinal Product is placed on the market by the Marketing\n     * Authorisation Holder (or where applicable, the manufacturer/distributor) in a country\n     * and/or jurisdiction shall be provided A complete date consisting of day, month and year\n     * shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to\n     * the release of the Medicinal Product into the distribution chain.\n     */\n    dateRange?: Period;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Where a Medicines Regulatory Agency has granted a marketing authorisation for which\n     * specific provisions within a jurisdiction apply, the jurisdiction can be specified using\n     * an appropriate controlled terminology The controlled term and the controlled term\n     * identifier shall be specified.\n     */\n    jurisdiction?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The date when the Medicinal Product is placed on the market by the Marketing\n     * Authorisation Holder (or where applicable, the manufacturer/distributor) in a country\n     * and/or jurisdiction shall be provided A complete date consisting of day, month and year\n     * shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to\n     * the release of the Medicinal Product into the distribution chain.\n     */\n    restoreDate?: string;\n    /**\n     * This attribute provides information on the status of the marketing of the medicinal\n     * product See ISO/TS 20443 for more information and examples.\n     */\n    status?: CodeableConcept;\n}\n\n/**\n * The shelf-life and storage information for a medicinal product item or container can be\n * described using this class.\n */\nexport interface ProductShelfLife {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Unique identifier for the packaged Medicinal Product.\n     */\n    identifier?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The shelf life time period can be specified using a numerical value for the period of\n     * time and its unit of time measurement The unit of measurement shall be specified in\n     * accordance with ISO 11240 and the resulting terminology The symbol and the symbol\n     * identifier shall be used.\n     */\n    period?: Quantity;\n    /**\n     * Special precautions for storage, if any, can be specified using an appropriate controlled\n     * vocabulary The controlled term and the controlled term identifier shall be specified.\n     */\n    specialPrecautionsForStorage?: CodeableConcept[];\n    /**\n     * This describes the shelf life, taking into account various scenarios such as shelf life\n     * of the packaged Medicinal Product itself, shelf life after transformation where necessary\n     * and shelf life after the first opening of a bottle, etc. The shelf life type shall be\n     * specified using an appropriate controlled vocabulary The controlled term and the\n     * controlled term identifier shall be specified.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Dimensions, color etc.\n *\n * The marketing status describes the date when a medicinal product is actually put on the\n * market or the date as of which it is no longer available.\n */\nexport interface ProdCharacteristic {\n    /**\n     * Extensions for color\n     */\n    _color?: Element[];\n    /**\n     * Extensions for imprint\n     */\n    _imprint?: Element[];\n    /**\n     * Extensions for shape\n     */\n    _shape?: Element;\n    /**\n     * Where applicable, the color can be specified An appropriate controlled vocabulary shall\n     * be used The term and the term identifier shall be used.\n     */\n    color?: string[];\n    /**\n     * Where applicable, the depth can be specified using a numerical value and its unit of\n     * measurement The unit of measurement shall be specified in accordance with ISO 11240 and\n     * the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    depth?: Quantity;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Where applicable, the external diameter can be specified using a numerical value and its\n     * unit of measurement The unit of measurement shall be specified in accordance with ISO\n     * 11240 and the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    externalDiameter?: Quantity;\n    /**\n     * Where applicable, the height can be specified using a numerical value and its unit of\n     * measurement The unit of measurement shall be specified in accordance with ISO 11240 and\n     * the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    height?: Quantity;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Where applicable, the image can be provided The format of the image attachment shall be\n     * specified by regional implementations.\n     */\n    image?: Attachment[];\n    /**\n     * Where applicable, the imprint can be specified as text.\n     */\n    imprint?: string[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Where applicable, the nominal volume can be specified using a numerical value and its\n     * unit of measurement The unit of measurement shall be specified in accordance with ISO\n     * 11240 and the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    nominalVolume?: Quantity;\n    /**\n     * Where applicable, the scoring can be specified An appropriate controlled vocabulary shall\n     * be used The term and the term identifier shall be used.\n     */\n    scoring?: CodeableConcept;\n    /**\n     * Where applicable, the shape can be specified An appropriate controlled vocabulary shall\n     * be used The term and the term identifier shall be used.\n     */\n    shape?: string;\n    /**\n     * Where applicable, the weight can be specified using a numerical value and its unit of\n     * measurement The unit of measurement shall be specified in accordance with ISO 11240 and\n     * the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    weight?: Quantity;\n    /**\n     * Where applicable, the width can be specified using a numerical value and its unit of\n     * measurement The unit of measurement shall be specified in accordance with ISO 11240 and\n     * the resulting terminology The symbol and the symbol identifier shall be used.\n     */\n    width?: Quantity;\n}\n\n/**\n * A populatioof people with some set of grouping criteria.\n */\nexport interface Population {\n    /**\n     * The age of the specific population.\n     */\n    ageCodeableConcept?: CodeableConcept;\n    /**\n     * The age of the specific population.\n     */\n    ageRange?: Range;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The gender of the specific population.\n     */\n    gender?: CodeableConcept;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The existing physiological conditions of the specific population to which this applies.\n     */\n    physiologicalCondition?: CodeableConcept;\n    /**\n     * Race of the specific population.\n     */\n    race?: CodeableConcept;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or\n * categorize an artifact. This metadata can either be specific to the applicable population\n * (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting,\n * provider of care).\n */\nexport interface UsageContext {\n    /**\n     * A code that identifies the type of context being specified by this usage context.\n     */\n    code?: Coding;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A value that defines the context specified in this context of use. The interpretation of\n     * the value is defined by the code.\n     */\n    valueCodeableConcept?: CodeableConcept;\n    /**\n     * A value that defines the context specified in this context of use. The interpretation of\n     * the value is defined by the code.\n     */\n    valueQuantity?: Quantity;\n    /**\n     * A value that defines the context specified in this context of use. The interpretation of\n     * the value is defined by the code.\n     */\n    valueRange?: Range;\n    /**\n     * A value that defines the context specified in this context of use. The interpretation of\n     * the value is defined by the code.\n     */\n    valueReference?: Reference;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A description of a triggering event. Triggering events can be named events, data events,\n * or periodic, as determined by the type element.\n */\nexport interface TriggerDefinition {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for timingDate\n     */\n    _timingDate?: Element;\n    /**\n     * Extensions for timingDateTime\n     */\n    _timingDateTime?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * A boolean-valued expression that is evaluated in the context of the container of the\n     * trigger definition and returns whether or not the trigger fires.\n     */\n    condition?: Expression;\n    /**\n     * The triggering data of the event (if this is a data trigger). If more than one data is\n     * requirement is specified, then all the data requirements must be true.\n     */\n    data?: DataRequirement[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A formal name for the event. This may be an absolute URI that identifies the event\n     * formally (e.g. from a trigger registry), or a simple relative URI that identifies the\n     * event in a local context.\n     */\n    name?: string;\n    /**\n     * The timing of the event (if this is a periodic trigger).\n     */\n    timingDate?: string;\n    /**\n     * The timing of the event (if this is a periodic trigger).\n     */\n    timingDateTime?: string;\n    /**\n     * The timing of the event (if this is a periodic trigger).\n     */\n    timingReference?: Reference;\n    /**\n     * The timing of the event (if this is a periodic trigger).\n     */\n    timingTiming?: Timing;\n    /**\n     * The type of triggering event.\n     */\n    type?: TriggerDefinitionType;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A signature along with supporting context. The signature may be a digital signature that\n * is cryptographic in nature, or some other signature acceptable to the domain. This other\n * signature may be as simple as a graphical image representing a hand-written signature, or\n * a signature ceremony Different signature approaches have different utilities.\n */\nexport interface Signature {\n    /**\n     * Extensions for data\n     */\n    _data?: Element;\n    /**\n     * Extensions for sigFormat\n     */\n    _sigFormat?: Element;\n    /**\n     * Extensions for targetFormat\n     */\n    _targetFormat?: Element;\n    /**\n     * Extensions for when\n     */\n    _when?: Element;\n    /**\n     * The base64 encoding of the Signature content. When signature is not recorded\n     * electronically this element would be empty.\n     */\n    data?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A reference to an application-usable description of the identity that is represented by\n     * the signature.\n     */\n    onBehalfOf?: Reference;\n    /**\n     * A mime type that indicates the technical format of the signature. Important mime types\n     * are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for\n     * a graphical image of a signature, etc.\n     */\n    sigFormat?: string;\n    /**\n     * A mime type that indicates the technical format of the target resources signed by the\n     * signature.\n     */\n    targetFormat?: string;\n    /**\n     * An indication of the reason that the entity signed this document. This may be explicitly\n     * included as part of the signature information and can be used when determining\n     * accountability for various actions concerning the document.\n     */\n    type?: Coding[];\n    /**\n     * When the digital signature was signed.\n     */\n    when?: string;\n    /**\n     * A reference to an application-usable description of the identity that signed  (e.g. the\n     * signature used their private key).\n     */\n    who?: Reference;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A series of measurements taken by a device, with upper and lower limits. There may be\n * more than one dimension in the data.\n */\nexport interface SampledData {\n    /**\n     * Extensions for data\n     */\n    _data?: Element;\n    /**\n     * Extensions for dimensions\n     */\n    _dimensions?: Element;\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for lowerLimit\n     */\n    _lowerLimit?: Element;\n    /**\n     * Extensions for period\n     */\n    _period?: Element;\n    /**\n     * Extensions for upperLimit\n     */\n    _upperLimit?: Element;\n    /**\n     * A series of data points which are decimal values separated by a single space (character\n     * u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above\n     * detection limit) can also be used in place of a decimal value.\n     */\n    data?: string;\n    /**\n     * The number of sample points at each time point. If this value is greater than one, then\n     * the dimensions will be interlaced - all the sample points for a point in time will be\n     * recorded at once.\n     */\n    dimensions?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A correction factor that is applied to the sampled data points before they are added to\n     * the origin.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The lower limit of detection of the measured points. This is needed if any of the data\n     * points have the value \"L\" (lower than detection limit).\n     */\n    lowerLimit?: number;\n    /**\n     * The base quantity that a measured value of zero represents. In addition, this provides\n     * the units of the entire measurement series.\n     */\n    origin?: Quantity;\n    /**\n     * The length of time between sampling times, measured in milliseconds.\n     */\n    period?: number;\n    /**\n     * The upper limit of detection of the measured points. This is needed if any of the data\n     * points have the value \"U\" (higher than detection limit).\n     */\n    upperLimit?: number;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * Related artifacts such as additional documentation, justification, or bibliographic\n * references.\n */\nexport interface RelatedArtifact {\n    /**\n     * Extensions for citation\n     */\n    _citation?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for label\n     */\n    _label?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * A bibliographic citation for the related artifact. This text SHOULD be formatted\n     * according to an accepted citation format.\n     */\n    citation?: string;\n    /**\n     * A brief description of the document or knowledge resource being referenced, suitable for\n     * display to a consumer.\n     */\n    display?: string;\n    /**\n     * The document being referenced, represented as an attachment. This is exclusive with the\n     * resource element.\n     */\n    document?: Attachment;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A short label that can be used to reference the citation from elsewhere in the containing\n     * artifact, such as a footnote index.\n     */\n    label?: string;\n    /**\n     * The related resource, such as a library, value set, profile, or other knowledge resource.\n     */\n    resource?: string;\n    /**\n     * The type of relationship to the related artifact.\n     */\n    type?: RelatedArtifactType;\n    /**\n     * A url for the artifact that can be followed to access the actual content.\n     */\n    url?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * The parameters to the module. This collection specifies both the input and output\n * parameters. Input parameters are provided by the caller as part of the $evaluate\n * operation. Output parameters are included in the GuidanceResponse.\n */\nexport interface ParameterDefinition {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for max\n     */\n    _max?: Element;\n    /**\n     * Extensions for min\n     */\n    _min?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * A brief discussion of what the parameter is for and how it is used by the module.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The maximum number of times this element is permitted to appear in the request or\n     * response.\n     */\n    max?: string;\n    /**\n     * The minimum number of times this parameter SHALL appear in the request or response.\n     */\n    min?: number;\n    /**\n     * The name of the parameter used to allow access to the value of the parameter in\n     * evaluation contexts.\n     */\n    name?: string;\n    /**\n     * If specified, this indicates a profile that the input data must conform to, or that the\n     * output data will conform to.\n     */\n    profile?: string;\n    /**\n     * The type of the parameter.\n     */\n    type?: string;\n    /**\n     * Whether the parameter is input or output for the module.\n     */\n    use?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * An amount of economic utility in some recognized currency.\n */\nexport interface Money {\n    /**\n     * Extensions for currency\n     */\n    _currency?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * ISO 4217 Currency Code.\n     */\n    currency?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Numerical value (with implicit precision).\n     */\n    value?: number;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A human's name with the ability to identify parts and usage.\n */\nexport interface HumanName {\n    /**\n     * Extensions for family\n     */\n    _family?: Element;\n    /**\n     * Extensions for given\n     */\n    _given?: Element[];\n    /**\n     * Extensions for prefix\n     */\n    _prefix?: Element[];\n    /**\n     * Extensions for suffix\n     */\n    _suffix?: Element[];\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the\n     * family name of a son is the first name of his father.\n     */\n    family?: string;\n    /**\n     * Given name.\n     */\n    given?: string[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Indicates the period of time when this name was valid for the named person.\n     */\n    period?: Period;\n    /**\n     * Part of the name that is acquired as a title due to academic, legal, employment or\n     * nobility status, etc. and that appears at the start of the name.\n     */\n    prefix?: string[];\n    /**\n     * Part of the name that is acquired as a title due to academic, legal, employment or\n     * nobility status, etc. and that appears at the end of the name.\n     */\n    suffix?: string[];\n    /**\n     * Specifies the entire name as it should be displayed e.g. on an application UI. This may\n     * be provided instead of or as well as the specific parts.\n     */\n    text?: string;\n    /**\n     * Identifies the purpose for this name.\n     */\n    use?: HumanNameUse;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A expression that is evaluated in a specified context and returns a value. The context of\n * use of the expression must specify the context in which the expression is evaluated, and\n * how the result of the expression is used.\n *\n * A boolean-valued expression that is evaluated in the context of the container of the\n * trigger definition and returns whether or not the trigger fires.\n */\nexport interface Expression {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for expression\n     */\n    _expression?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for reference\n     */\n    _reference?: Element;\n    /**\n     * A brief, natural language description of the condition that effectively communicates the\n     * intended semantics.\n     */\n    description?: string;\n    /**\n     * An expression in the specified language that returns a value.\n     */\n    expression?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The media type of the language for the expression.\n     */\n    language?: Language;\n    /**\n     * A short name assigned to the expression to allow for multiple reuse of the expression in\n     * the context where it is defined.\n     */\n    name?: string;\n    /**\n     * A URI that defines where the expression is found.\n     */\n    reference?: string;\n}\n\n/**\n * A set of rules that describe when the event is scheduled.\n *\n * Specifies an event that may occur multiple times. Timing schedules are used to record\n * when things are planned, expected or requested to occur. The most common usage is in\n * dosage instructions for medications. They are also used when planning care of various\n * kinds, and may be used for reporting the schedule to which past regular activities were\n * carried out.\n */\nexport interface TimingRepeat {\n    /**\n     * Extensions for count\n     */\n    _count?: Element;\n    /**\n     * Extensions for countMax\n     */\n    _countMax?: Element;\n    /**\n     * Extensions for dayOfWeek\n     */\n    _dayOfWeek?: Element[];\n    /**\n     * Extensions for duration\n     */\n    _duration?: Element;\n    /**\n     * Extensions for durationMax\n     */\n    _durationMax?: Element;\n    /**\n     * Extensions for durationUnit\n     */\n    _durationUnit?: Element;\n    /**\n     * Extensions for frequency\n     */\n    _frequency?: Element;\n    /**\n     * Extensions for frequencyMax\n     */\n    _frequencyMax?: Element;\n    /**\n     * Extensions for offset\n     */\n    _offset?: Element;\n    /**\n     * Extensions for period\n     */\n    _period?: Element;\n    /**\n     * Extensions for periodMax\n     */\n    _periodMax?: Element;\n    /**\n     * Extensions for periodUnit\n     */\n    _periodUnit?: Element;\n    /**\n     * Extensions for timeOfDay\n     */\n    _timeOfDay?: Element[];\n    /**\n     * Extensions for when\n     */\n    _when?: Element[];\n    /**\n     * Either a duration for the length of the timing schedule, a range of possible length, or\n     * outer bounds for start and/or end limits of the timing schedule.\n     */\n    boundsDuration?: Duration;\n    /**\n     * Either a duration for the length of the timing schedule, a range of possible length, or\n     * outer bounds for start and/or end limits of the timing schedule.\n     */\n    boundsPeriod?: Period;\n    /**\n     * Either a duration for the length of the timing schedule, a range of possible length, or\n     * outer bounds for start and/or end limits of the timing schedule.\n     */\n    boundsRange?: Range;\n    /**\n     * A total count of the desired number of repetitions across the duration of the entire\n     * timing specification. If countMax is present, this element indicates the lower bound of\n     * the allowed range of count values.\n     */\n    count?: number;\n    /**\n     * If present, indicates that the count is a range - so to perform the action between\n     * [count] and [countMax] times.\n     */\n    countMax?: number;\n    /**\n     * If one or more days of week is provided, then the action happens only on the specified\n     * day(s).\n     */\n    dayOfWeek?: string[];\n    /**\n     * How long this thing happens for when it happens. If durationMax is present, this element\n     * indicates the lower bound of the allowed range of the duration.\n     */\n    duration?: number;\n    /**\n     * If present, indicates that the duration is a range - so to perform the action between\n     * [duration] and [durationMax] time length.\n     */\n    durationMax?: number;\n    /**\n     * The units of time for the duration, in UCUM units.\n     */\n    durationUnit?: Unit;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The number of times to repeat the action within the specified period. If frequencyMax is\n     * present, this element indicates the lower bound of the allowed range of the frequency.\n     */\n    frequency?: number;\n    /**\n     * If present, indicates that the frequency is a range - so to repeat between [frequency]\n     * and [frequencyMax] times within the period or period range.\n     */\n    frequencyMax?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The number of minutes from the event. If the event code does not indicate whether the\n     * minutes is before or after the event, then the offset is assumed to be after the event.\n     */\n    offset?: number;\n    /**\n     * Indicates the duration of time over which repetitions are to occur; e.g. to express \"3\n     * times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is\n     * present, this element indicates the lower bound of the allowed range of the period length.\n     */\n    period?: number;\n    /**\n     * If present, indicates that the period is a range from [period] to [periodMax], allowing\n     * expressing concepts such as \"do this once every 3-5 days.\n     */\n    periodMax?: number;\n    /**\n     * The units of time for the period in UCUM units.\n     */\n    periodUnit?: Unit;\n    /**\n     * Specified time of day for action to take place.\n     */\n    timeOfDay?: string[];\n    /**\n     * An approximate time period during the day, potentially linked to an event of daily living\n     * that indicates when the action should occur.\n     */\n    when?: When[];\n}\n\n/**\n * When medication should be administered.\n *\n * Specifies an event that may occur multiple times. Timing schedules are used to record\n * when things are planned, expected or requested to occur. The most common usage is in\n * dosage instructions for medications. They are also used when planning care of various\n * kinds, and may be used for reporting the schedule to which past regular activities were\n * carried out.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * The timing of the event (if this is a periodic trigger).\n */\nexport interface Timing {\n    /**\n     * Extensions for event\n     */\n    _event?: Element[];\n    /**\n     * A code for the timing schedule (or just text in code.text). Some codes such as BID are\n     * ubiquitous, but many institutions define their own additional codes. If a code is\n     * provided, the code is understood to be a complete statement of whatever is specified in\n     * the structured timing data, and either the code or the data may be used to interpret the\n     * Timing, with the exception that .repeat.bounds still applies over the code (and is not\n     * contained in the code).\n     */\n    code?: CodeableConcept;\n    /**\n     * Identifies specific times when the event occurs.\n     */\n    event?: string[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A set of rules that describe when the event is scheduled.\n     */\n    repeat?: TimingRepeat;\n}\n\n/**\n * Amount of medication per unit of time.\n *\n * A relationship of two Quantity values - expressed as a numerator and a denominator.\n *\n * Upper limit on medication per unit of time.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n */\nexport interface Ratio {\n    /**\n     * The value of the denominator.\n     */\n    denominator?: Quantity;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The value of the numerator.\n     */\n    numerator?: Quantity;\n}\n\n/**\n * Amount of medication per dose.\n *\n * A set of ordered Quantities defined by a low and high limit.\n *\n * Amount of medication per unit of time.\n *\n * Either a duration for the length of the timing schedule, a range of possible length, or\n * outer bounds for start and/or end limits of the timing schedule.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A value that defines the context specified in this context of use. The interpretation of\n * the value is defined by the code.\n */\nexport interface Range {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The high limit. The boundary is inclusive.\n     */\n    high?: Quantity;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The low limit. The boundary is inclusive.\n     */\n    low?: Quantity;\n}\n\n/**\n * Amount of medication per dose.\n *\n * A measured amount (or an amount that can potentially be measured). Note that measured\n * amounts include amounts that are not precisely quantified, including amounts involving\n * arbitrary units and floating currencies.\n *\n * The high limit. The boundary is inclusive.\n *\n * The low limit. The boundary is inclusive.\n *\n * Amount of medication per unit of time.\n *\n * The value of the denominator.\n *\n * The value of the numerator.\n *\n * Upper limit on medication per administration.\n *\n * Upper limit on medication per lifetime of the patient.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * The base quantity that a measured value of zero represents. In addition, this provides\n * the units of the entire measurement series.\n *\n * A value that defines the context specified in this context of use. The interpretation of\n * the value is defined by the code.\n */\nexport interface Quantity {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comparator\n     */\n    _comparator?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for unit\n     */\n    _unit?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A computer processable form of the unit in some unit representation system.\n     */\n    code?: string;\n    /**\n     * How the value should be understood and represented - whether the actual value is greater\n     * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n     * then the real value is < stated value.\n     */\n    comparator?: Comparator;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the system that provides the coded form of the unit.\n     */\n    system?: string;\n    /**\n     * A human-readable form of the unit.\n     */\n    unit?: string;\n    /**\n     * The value of the measured amount. The value includes an implicit precision in the\n     * presentation of the value.\n     */\n    value?: number;\n}\n\n/**\n * Indicates how the medication is/was taken or should be taken by the patient.\n */\nexport interface DosageDoseAndRate {\n    /**\n     * Amount of medication per dose.\n     */\n    doseQuantity?: Quantity;\n    /**\n     * Amount of medication per dose.\n     */\n    doseRange?: Range;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Amount of medication per unit of time.\n     */\n    rateQuantity?: Quantity;\n    /**\n     * Amount of medication per unit of time.\n     */\n    rateRange?: Range;\n    /**\n     * Amount of medication per unit of time.\n     */\n    rateRatio?: Ratio;\n    /**\n     * The kind of dose or rate specified, for example, ordered or calculated.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * Indicates how the medication is/was taken or should be taken by the patient.\n */\nexport interface Dosage {\n    /**\n     * Extensions for asNeededBoolean\n     */\n    _asNeededBoolean?: Element;\n    /**\n     * Extensions for patientInstruction\n     */\n    _patientInstruction?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Supplemental instructions to the patient on how to take the medication  (e.g. \"with\n     * meals\" or\"take half to one hour before food\") or warnings for the patient about the\n     * medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or\n     * sunlamps\").\n     */\n    additionalInstruction?: CodeableConcept[];\n    /**\n     * Indicates whether the Medication is only taken when needed within a specific dosing\n     * schedule (Boolean option), or it indicates the precondition for taking the Medication\n     * (CodeableConcept).\n     */\n    asNeededBoolean?: boolean;\n    /**\n     * Indicates whether the Medication is only taken when needed within a specific dosing\n     * schedule (Boolean option), or it indicates the precondition for taking the Medication\n     * (CodeableConcept).\n     */\n    asNeededCodeableConcept?: CodeableConcept;\n    /**\n     * The amount of medication administered.\n     */\n    doseAndRate?: DosageDoseAndRate[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Upper limit on medication per administration.\n     */\n    maxDosePerAdministration?: Quantity;\n    /**\n     * Upper limit on medication per lifetime of the patient.\n     */\n    maxDosePerLifetime?: Quantity;\n    /**\n     * Upper limit on medication per unit of time.\n     */\n    maxDosePerPeriod?: Ratio;\n    /**\n     * Technique for administering medication.\n     */\n    method?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Instructions in terms that are understood by the patient or consumer.\n     */\n    patientInstruction?: string;\n    /**\n     * How drug should enter body.\n     */\n    route?: CodeableConcept;\n    /**\n     * Indicates the order in which the dosage instructions should be applied or interpreted.\n     */\n    sequence?: number;\n    /**\n     * Body site to administer to.\n     */\n    site?: CodeableConcept;\n    /**\n     * Free text dosage instructions e.g. SIG.\n     */\n    text?: string;\n    /**\n     * When medication should be administered.\n     */\n    timing?: Timing;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A length - a value with a unit that is a physical distance.\n */\nexport interface Distance {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comparator\n     */\n    _comparator?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for unit\n     */\n    _unit?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A computer processable form of the unit in some unit representation system.\n     */\n    code?: string;\n    /**\n     * How the value should be understood and represented - whether the actual value is greater\n     * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n     * then the real value is < stated value.\n     */\n    comparator?: Comparator;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the system that provides the coded form of the unit.\n     */\n    system?: string;\n    /**\n     * A human-readable form of the unit.\n     */\n    unit?: string;\n    /**\n     * The value of the measured amount. The value includes an implicit precision in the\n     * presentation of the value.\n     */\n    value?: number;\n}\n\n/**\n * Describes a required data item for evaluation in terms of the type of data, and optional\n * code or date-based filters of the data.\n */\nexport interface DataRequirementSort {\n    /**\n     * Extensions for direction\n     */\n    _direction?: Element;\n    /**\n     * Extensions for path\n     */\n    _path?: Element;\n    /**\n     * The direction of the sort, ascending or descending.\n     */\n    direction?: Direction;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The attribute of the sort. The specified path must be resolvable from the type of the\n     * required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as\n     * well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index\n     * must be an integer constant.\n     */\n    path?: string;\n}\n\n/**\n * The value of the filter. If period is specified, the filter will return only those data\n * items that fall within the bounds determined by the Period, inclusive of the period\n * boundaries. If dateTime is specified, the filter will return only those data items that\n * are equal to the specified dateTime. If a Duration is specified, the filter will return\n * only those data items that fall within Duration before now.\n *\n * A length of time.\n *\n * Either a duration for the length of the timing schedule, a range of possible length, or\n * outer bounds for start and/or end limits of the timing schedule.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n */\nexport interface Duration {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comparator\n     */\n    _comparator?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for unit\n     */\n    _unit?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A computer processable form of the unit in some unit representation system.\n     */\n    code?: string;\n    /**\n     * How the value should be understood and represented - whether the actual value is greater\n     * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n     * then the real value is < stated value.\n     */\n    comparator?: Comparator;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the system that provides the coded form of the unit.\n     */\n    system?: string;\n    /**\n     * A human-readable form of the unit.\n     */\n    unit?: string;\n    /**\n     * The value of the measured amount. The value includes an implicit precision in the\n     * presentation of the value.\n     */\n    value?: number;\n}\n\n/**\n * Describes a required data item for evaluation in terms of the type of data, and optional\n * code or date-based filters of the data.\n */\nexport interface DataRequirementDateFilter {\n    /**\n     * Extensions for path\n     */\n    _path?: Element;\n    /**\n     * Extensions for searchParam\n     */\n    _searchParam?: Element;\n    /**\n     * Extensions for valueDateTime\n     */\n    _valueDateTime?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The date-valued attribute of the filter. The specified path SHALL be a FHIRPath\n     * resolveable on the specified type of the DataRequirement, and SHALL consist only of\n     * identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers\n     * (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality\n     * sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).\n     * Note that the index must be an integer constant. The path must resolve to an element of\n     * type date, dateTime, Period, Schedule, or Timing.\n     */\n    path?: string;\n    /**\n     * A date parameter that refers to a search parameter defined on the specified type of the\n     * DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule,\n     * or Timing.\n     */\n    searchParam?: string;\n    /**\n     * The value of the filter. If period is specified, the filter will return only those data\n     * items that fall within the bounds determined by the Period, inclusive of the period\n     * boundaries. If dateTime is specified, the filter will return only those data items that\n     * are equal to the specified dateTime. If a Duration is specified, the filter will return\n     * only those data items that fall within Duration before now.\n     */\n    valueDateTime?: string;\n    /**\n     * The value of the filter. If period is specified, the filter will return only those data\n     * items that fall within the bounds determined by the Period, inclusive of the period\n     * boundaries. If dateTime is specified, the filter will return only those data items that\n     * are equal to the specified dateTime. If a Duration is specified, the filter will return\n     * only those data items that fall within Duration before now.\n     */\n    valueDuration?: Duration;\n    /**\n     * The value of the filter. If period is specified, the filter will return only those data\n     * items that fall within the bounds determined by the Period, inclusive of the period\n     * boundaries. If dateTime is specified, the filter will return only those data items that\n     * are equal to the specified dateTime. If a Duration is specified, the filter will return\n     * only those data items that fall within Duration before now.\n     */\n    valuePeriod?: Period;\n}\n\n/**\n * Describes a required data item for evaluation in terms of the type of data, and optional\n * code or date-based filters of the data.\n */\nexport interface DataRequirementCodeFilter {\n    /**\n     * Extensions for path\n     */\n    _path?: Element;\n    /**\n     * Extensions for searchParam\n     */\n    _searchParam?: Element;\n    /**\n     * The codes for the code filter. If values are given, the filter will return only those\n     * data items for which the code-valued attribute specified by the path has a value that is\n     * one of the specified codes. If codes are specified in addition to a value set, the filter\n     * returns items matching a code in the value set or one of the specified codes.\n     */\n    code?: Coding[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The code-valued attribute of the filter. The specified path SHALL be a FHIRPath\n     * resolveable on the specified type of the DataRequirement, and SHALL consist only of\n     * identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers\n     * (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality\n     * sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).\n     * Note that the index must be an integer constant. The path must resolve to an element of\n     * type code, Coding, or CodeableConcept.\n     */\n    path?: string;\n    /**\n     * A token parameter that refers to a search parameter defined on the specified type of the\n     * DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.\n     */\n    searchParam?: string;\n    /**\n     * The valueset for the code filter. The valueSet and code elements are additive. If\n     * valueSet is specified, the filter will return only those data items for which the value\n     * of the code-valued element specified in the path is a member of the specified valueset.\n     */\n    valueSet?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * Describes a required data item for evaluation in terms of the type of data, and optional\n * code or date-based filters of the data.\n */\nexport interface DataRequirement {\n    /**\n     * Extensions for limit\n     */\n    _limit?: Element;\n    /**\n     * Extensions for mustSupport\n     */\n    _mustSupport?: Element[];\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Code filters specify additional constraints on the data, specifying the value set of\n     * interest for a particular element of the data. Each code filter defines an additional\n     * constraint on the data, i.e. code filters are AND'ed, not OR'ed.\n     */\n    codeFilter?: DataRequirementCodeFilter[];\n    /**\n     * Date filters specify additional constraints on the data in terms of the applicable date\n     * range for specific elements. Each date filter specifies an additional constraint on the\n     * data, i.e. date filters are AND'ed, not OR'ed.\n     */\n    dateFilter?: DataRequirementDateFilter[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Specifies a maximum number of results that are required (uses the _count search\n     * parameter).\n     */\n    limit?: number;\n    /**\n     * Indicates that specific elements of the type are referenced by the knowledge module and\n     * must be supported by the consumer in order to obtain an effective evaluation. This does\n     * not mean that a value is required for this element, only that the consuming system must\n     * understand the element and be able to provide values for it if they are available.\n     *\n     * The value of mustSupport SHALL be a FHIRPath resolveable on the type of the\n     * DataRequirement. The path SHALL consist only of identifiers, constant indexers, and\n     * .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).\n     */\n    mustSupport?: string[];\n    /**\n     * The profile of the required data, specified as the uri of the profile definition.\n     */\n    profile?: string[];\n    /**\n     * Specifies the order of the results to be returned.\n     */\n    sort?: DataRequirementSort[];\n    /**\n     * The intended subjects of the data requirement. If this element is not provided, a Patient\n     * subject is assumed.\n     */\n    subjectCodeableConcept?: CodeableConcept;\n    /**\n     * The intended subjects of the data requirement. If this element is not provided, a Patient\n     * subject is assumed.\n     */\n    subjectReference?: Reference;\n    /**\n     * The type of the required data, specified as the type name of a resource. For profiles,\n     * this value is set to the type of the base resource of the profile.\n     */\n    type?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A measured amount (or an amount that can potentially be measured). Note that measured\n * amounts include amounts that are not precisely quantified, including amounts involving\n * arbitrary units and floating currencies.\n */\nexport interface Count {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comparator\n     */\n    _comparator?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for unit\n     */\n    _unit?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A computer processable form of the unit in some unit representation system.\n     */\n    code?: string;\n    /**\n     * How the value should be understood and represented - whether the actual value is greater\n     * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n     * then the real value is < stated value.\n     */\n    comparator?: Comparator;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the system that provides the coded form of the unit.\n     */\n    system?: string;\n    /**\n     * A human-readable form of the unit.\n     */\n    unit?: string;\n    /**\n     * The value of the measured amount. The value includes an implicit precision in the\n     * presentation of the value.\n     */\n    value?: number;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A contributor to the content of a knowledge asset, including authors, editors, reviewers,\n * and endorsers.\n */\nexport interface Contributor {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Contact details to assist a user in finding and communicating with the contributor.\n     */\n    contact?: ContactDetail[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The name of the individual or organization responsible for the contribution.\n     */\n    name?: string;\n    /**\n     * The type of contributor.\n     */\n    type?: ContributorType;\n}\n\n/**\n * Details for all kinds of technology mediated contact points for a person or organization,\n * including telephone, email, etc.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n */\nexport interface ContactPoint {\n    /**\n     * Extensions for rank\n     */\n    _rank?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Time period when the contact point was/is in use.\n     */\n    period?: Period;\n    /**\n     * Specifies a preferred order in which to use a set of contacts. ContactPoints with lower\n     * rank values are more preferred than those with higher rank values.\n     */\n    rank?: number;\n    /**\n     * Telecommunications form for contact point - what communications system is required to\n     * make use of the contact.\n     */\n    system?: System;\n    /**\n     * Identifies the purpose for the contact point.\n     */\n    use?: ContactPointUse;\n    /**\n     * The actual contact point details, in a form that is meaningful to the designated\n     * communication system (i.e. phone number or email address).\n     */\n    value?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * Specifies contact information for a person or organization.\n */\nexport interface ContactDetail {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The name of an individual to contact.\n     */\n    name?: string;\n    /**\n     * The contact details for the individual (if a name was provided) or the organization.\n     */\n    telecom?: ContactPoint[];\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * For referring to data content defined in other formats.\n *\n * The document being referenced, represented as an attachment. This is exclusive with the\n * resource element.\n */\nexport interface Attachment {\n    /**\n     * Extensions for contentType\n     */\n    _contentType?: Element;\n    /**\n     * Extensions for creation\n     */\n    _creation?: Element;\n    /**\n     * Extensions for data\n     */\n    _data?: Element;\n    /**\n     * Extensions for hash\n     */\n    _hash?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for size\n     */\n    _size?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Identifies the type of the data in the attachment and allows a method to be chosen to\n     * interpret or render the data. Includes mime type parameters such as charset where\n     * appropriate.\n     */\n    contentType?: string;\n    /**\n     * The date that the attachment was first created.\n     */\n    creation?: string;\n    /**\n     * The actual data of the attachment - a sequence of bytes, base64 encoded.\n     */\n    data?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The calculated hash of the data using SHA-1. Represented using base64.\n     */\n    hash?: string;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The human language of the content. The value can be any valid value according to BCP 47.\n     */\n    language?: string;\n    /**\n     * The number of bytes of data that make up this attachment (before base64 encoding, if that\n     * is done).\n     */\n    size?: number;\n    /**\n     * A label or set of text to display in place of the data.\n     */\n    title?: string;\n    /**\n     * A location where the data can be accessed.\n     */\n    url?: string;\n}\n\n/**\n * A reference to a code defined by a terminology system.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A code that identifies the type of context being specified by this usage context.\n */\nexport interface Coding {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for userSelected\n     */\n    _userSelected?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * A symbol in syntax defined by the system. The symbol may be a predefined code or an\n     * expression in a syntax defined by the coding system (e.g. post-coordination).\n     */\n    code?: string;\n    /**\n     * A representation of the meaning of the code in the system, following the rules of the\n     * system.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the code system that defines the meaning of the symbol in the code.\n     */\n    system?: string;\n    /**\n     * Indicates that this coding was chosen by a user directly - e.g. off a pick list of\n     * available items (codes or displays).\n     */\n    userSelected?: boolean;\n    /**\n     * The version of the code system which was used when choosing this code. Note that a\n     * well-maintained code system does not need the version reported, because the meaning of\n     * codes is consistent across versions. However this cannot consistently be assured, and\n     * when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.\n     */\n    version?: string;\n}\n\n/**\n * A coded type for the identifier that can be used to determine which identifier to use for\n * a specific purpose.\n *\n * A concept that may be defined by a formal reference to a terminology or ontology or may\n * be provided by text.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * The intended subjects of the data requirement. If this element is not provided, a Patient\n * subject is assumed.\n *\n * Indicates whether the Medication is only taken when needed within a specific dosing\n * schedule (Boolean option), or it indicates the precondition for taking the Medication\n * (CodeableConcept).\n *\n * The kind of dose or rate specified, for example, ordered or calculated.\n *\n * Technique for administering medication.\n *\n * How drug should enter body.\n *\n * Body site to administer to.\n *\n * A code for the timing schedule (or just text in code.text). Some codes such as BID are\n * ubiquitous, but many institutions define their own additional codes. If a code is\n * provided, the code is understood to be a complete statement of whatever is specified in\n * the structured timing data, and either the code or the data may be used to interpret the\n * Timing, with the exception that .repeat.bounds still applies over the code (and is not\n * contained in the code).\n *\n * A value that defines the context specified in this context of use. The interpretation of\n * the value is defined by the code.\n *\n * Categorizes the account for reporting and searching purposes.\n */\nexport interface CodeableConcept {\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * A reference to a code defined by a terminology system.\n     */\n    coding?: Coding[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A human language representation of the concept as seen/selected/uttered by the user who\n     * entered the data and/or which represents the intended meaning of the user.\n     */\n    text?: string;\n}\n\n/**\n * An identifier for the target resource. This is used when there is no way to reference the\n * other resource directly, either because the entity it represents is not available through\n * a FHIR server, or because there is no way for the author of the resource to convert a\n * known identifier to an actual location. There is no requirement that a\n * Reference.identifier point to something that is actually exposed as a FHIR instance, but\n * it SHALL point to a business concept that would be expected to be exposed as a FHIR\n * instance, and that instance would need to be of a FHIR resource type allowed by the\n * reference.\n *\n * An identifier - identifies some entity uniquely and unambiguously. Typically this is used\n * for business identifiers.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n */\nexport interface Identifier {\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * Organization that issued/manages the identifier.\n     */\n    assigner?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Time period during which identifier is/was valid for use.\n     */\n    period?: Period;\n    /**\n     * Establishes the namespace for the value - that is, a URL that describes a set values that\n     * are unique.\n     */\n    system?: string;\n    /**\n     * A coded type for the identifier that can be used to determine which identifier to use for\n     * a specific purpose.\n     */\n    type?: CodeableConcept;\n    /**\n     * The purpose of this identifier.\n     */\n    use?: IdentifierUse;\n    /**\n     * The portion of the identifier typically relevant to the user and which is unique within\n     * the context of the system.\n     */\n    value?: string;\n}\n\n/**\n * The individual responsible for making the annotation.\n *\n * A reference from one resource to another.\n *\n * Organization that issued/manages the identifier.\n *\n * The intended subjects of the data requirement. If this element is not provided, a Patient\n * subject is assumed.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A reference to an application-usable description of the identity that is represented by\n * the signature.\n *\n * A reference to an application-usable description of the identity that signed  (e.g. the\n * signature used their private key).\n *\n * The timing of the event (if this is a periodic trigger).\n *\n * A value that defines the context specified in this context of use. The interpretation of\n * the value is defined by the code.\n *\n * The party(s) that contribute to payment (or part of) of the charges applied to this\n * account (including self-pay).\n *\n * A coverage may only be responsible for specific types of charges, and the sequence of the\n * coverages in the account could be important when processing billing.\n *\n * The entity who is responsible.\n *\n * Indicates the service area, hospital, department, etc. with responsibility for managing\n * the Account.\n *\n * Reference to a parent Account.\n */\nexport interface Reference {\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for reference\n     */\n    _reference?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Plain text narrative that identifies the resource in addition to the resource reference.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * An identifier for the target resource. This is used when there is no way to reference the\n     * other resource directly, either because the entity it represents is not available through\n     * a FHIR server, or because there is no way for the author of the resource to convert a\n     * known identifier to an actual location. There is no requirement that a\n     * Reference.identifier point to something that is actually exposed as a FHIR instance, but\n     * it SHALL point to a business concept that would be expected to be exposed as a FHIR\n     * instance, and that instance would need to be of a FHIR resource type allowed by the\n     * reference.\n     */\n    identifier?: Identifier;\n    /**\n     * A reference to a location at which the other resource is found. The reference may be a\n     * relative reference, in which case it is relative to the service base URL, or an absolute\n     * URL that resolves to the location where the resource is found. The reference may be\n     * version specific or not. If the reference is not to a FHIR RESTful server, then it should\n     * be assumed to be version specific. Internal fragment references (start with '#') refer to\n     * contained resources.\n     */\n    reference?: string;\n    /**\n     * The expected type of the target of the reference. If both Reference.type and\n     * Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be\n     * consistent.\n     *\n     * The type is the Canonical URL of Resource Definition that is the type this reference\n     * refers to. References are URLs that are relative to\n     * http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to\n     * http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for\n     * logical models (and can only be used in references in logical models, not resources).\n     */\n    type?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A  text note which also  contains information about who made the statement and when.\n */\nexport interface Annotation {\n    /**\n     * Extensions for authorString\n     */\n    _authorString?: Element;\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Extensions for time\n     */\n    _time?: Element;\n    /**\n     * The individual responsible for making the annotation.\n     */\n    authorReference?: Reference;\n    /**\n     * The individual responsible for making the annotation.\n     */\n    authorString?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The text of the annotation in markdown format.\n     */\n    text?: string;\n    /**\n     * Indicates when this particular annotation was made.\n     */\n    time?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * A duration of time during which an organism (or a process) has existed.\n */\nexport interface Age {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comparator\n     */\n    _comparator?: Element;\n    /**\n     * Extensions for system\n     */\n    _system?: Element;\n    /**\n     * Extensions for unit\n     */\n    _unit?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A computer processable form of the unit in some unit representation system.\n     */\n    code?: string;\n    /**\n     * How the value should be understood and represented - whether the actual value is greater\n     * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n     * then the real value is < stated value.\n     */\n    comparator?: Comparator;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The identification of the system that provides the coded form of the unit.\n     */\n    system?: string;\n    /**\n     * A human-readable form of the unit.\n     */\n    unit?: string;\n    /**\n     * The value of the measured amount. The value includes an implicit precision in the\n     * presentation of the value.\n     */\n    value?: number;\n}\n\n/**\n * Time period when address was/is in use.\n *\n * A time period defined by a start and end date and optionally time.\n *\n * Time period during which identifier is/was valid for use.\n *\n * Time period when the contact point was/is in use.\n *\n * The value of the filter. If period is specified, the filter will return only those data\n * items that fall within the bounds determined by the Period, inclusive of the period\n * boundaries. If dateTime is specified, the filter will return only those data items that\n * are equal to the specified dateTime. If a Duration is specified, the filter will return\n * only those data items that fall within Duration before now.\n *\n * Either a duration for the length of the timing schedule, a range of possible length, or\n * outer bounds for start and/or end limits of the timing schedule.\n *\n * Indicates the period of time when this name was valid for the named person.\n *\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * The timeframe during which the guarantor accepts responsibility for the account.\n *\n * The date range of services associated with this account.\n */\nexport interface Period {\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * The end of the period. If the end of the period is missing, it means no end was known or\n     * planned at the time the instance was created. The start may be in the past, and the end\n     * date in the future, which means that period is expected/planned to end at that time.\n     */\n    end?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The start of the period. The boundary is inclusive.\n     */\n    start?: string;\n}\n\n/**\n * Value of extension - must be one of a constrained set of the data types (see\n * [Extensibility](extensibility.html) for a list).\n *\n * An address expressed using postal conventions (as opposed to GPS or other location\n * definition formats).  This data type may be used to convey addresses for use in\n * delivering mail as well as for visiting locations which might not be valid for mail\n * delivery.  There are a variety of postal address formats defined around the world.\n */\nexport interface Address {\n    /**\n     * Extensions for city\n     */\n    _city?: Element;\n    /**\n     * Extensions for country\n     */\n    _country?: Element;\n    /**\n     * Extensions for district\n     */\n    _district?: Element;\n    /**\n     * Extensions for line\n     */\n    _line?: Element[];\n    /**\n     * Extensions for postalCode\n     */\n    _postalCode?: Element;\n    /**\n     * Extensions for state\n     */\n    _state?: Element;\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * The name of the city, town, suburb, village or other community or delivery center.\n     */\n    city?: string;\n    /**\n     * Country - a nation as commonly understood or generally accepted.\n     */\n    country?: string;\n    /**\n     * The name of the administrative area (county).\n     */\n    district?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * This component contains the house number, apartment number, street name, street\n     * direction,  P.O. Box number, delivery hints, and similar address information.\n     */\n    line?: string[];\n    /**\n     * Time period when address was/is in use.\n     */\n    period?: Period;\n    /**\n     * A postal code designating a region defined by the postal service.\n     */\n    postalCode?: string;\n    /**\n     * Sub-unit of a country with limited sovereignty in a federally organized country. A code\n     * may be used if codes are in common use (e.g. US 2 letter state codes).\n     */\n    state?: string;\n    /**\n     * Specifies the entire address as it should be displayed e.g. on a postal label. This may\n     * be provided instead of or as well as the specific parts.\n     */\n    text?: string;\n    /**\n     * Distinguishes between physical addresses (those you can visit) and mailing addresses\n     * (e.g. PO Boxes and care-of addresses). Most addresses are both.\n     */\n    type?: AddressType;\n    /**\n     * The purpose of this address.\n     */\n    use?: AddressUse;\n}\n\n/**\n * Optional Extension Element - found in all resources.\n */\nexport interface Extension {\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for valueBase64Binary\n     */\n    _valueBase64Binary?: Element;\n    /**\n     * Extensions for valueBoolean\n     */\n    _valueBoolean?: Element;\n    /**\n     * Extensions for valueCanonical\n     */\n    _valueCanonical?: Element;\n    /**\n     * Extensions for valueCode\n     */\n    _valueCode?: Element;\n    /**\n     * Extensions for valueDate\n     */\n    _valueDate?: Element;\n    /**\n     * Extensions for valueDateTime\n     */\n    _valueDateTime?: Element;\n    /**\n     * Extensions for valueDecimal\n     */\n    _valueDecimal?: Element;\n    /**\n     * Extensions for valueId\n     */\n    _valueId?: Element;\n    /**\n     * Extensions for valueInstant\n     */\n    _valueInstant?: Element;\n    /**\n     * Extensions for valueInteger\n     */\n    _valueInteger?: Element;\n    /**\n     * Extensions for valueMarkdown\n     */\n    _valueMarkdown?: Element;\n    /**\n     * Extensions for valueOid\n     */\n    _valueOid?: Element;\n    /**\n     * Extensions for valuePositiveInt\n     */\n    _valuePositiveInt?: Element;\n    /**\n     * Extensions for valueString\n     */\n    _valueString?: Element;\n    /**\n     * Extensions for valueTime\n     */\n    _valueTime?: Element;\n    /**\n     * Extensions for valueUnsignedInt\n     */\n    _valueUnsignedInt?: Element;\n    /**\n     * Extensions for valueUri\n     */\n    _valueUri?: Element;\n    /**\n     * Extensions for valueUrl\n     */\n    _valueUrl?: Element;\n    /**\n     * Extensions for valueUuid\n     */\n    _valueUuid?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Source of the definition for the extension code - a logical name or a URL.\n     */\n    url?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueAddress?: Address;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueAge?: Age;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueAnnotation?: Annotation;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueAttachment?: Attachment;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueBase64Binary?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueBoolean?: boolean;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueCanonical?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueCode?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueCodeableConcept?: CodeableConcept;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueCoding?: Coding;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueContactDetail?: ContactDetail;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueContactPoint?: ContactPoint;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueContributor?: Contributor;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueCount?: Count;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDataRequirement?: DataRequirement;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDate?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDateTime?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDecimal?: number;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDistance?: Distance;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDosage?: Dosage;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueDuration?: Duration;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueExpression?: Expression;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueHumanName?: HumanName;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueId?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueIdentifier?: Identifier;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueInstant?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueInteger?: number;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueMarkdown?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueMoney?: Money;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueOid?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueParameterDefinition?: ParameterDefinition;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valuePeriod?: Period;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valuePositiveInt?: number;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueQuantity?: Quantity;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueRange?: Range;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueRatio?: Ratio;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueReference?: Reference;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueRelatedArtifact?: RelatedArtifact;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueSampledData?: SampledData;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueSignature?: Signature;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueString?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueTime?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueTiming?: Timing;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueTriggerDefinition?: TriggerDefinition;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueUnsignedInt?: number;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueUri?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueUrl?: string;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueUsageContext?: UsageContext;\n    /**\n     * Value of extension - must be one of a constrained set of the data types (see\n     * [Extensibility](extensibility.html) for a list).\n     */\n    valueUuid?: string;\n}\n\n/**\n * Extensions for description\n *\n * Base definition for all elements in a resource.\n *\n * Extensions for url\n *\n * Extensions for valueBase64Binary\n *\n * Extensions for valueBoolean\n *\n * Extensions for valueCanonical\n *\n * Extensions for valueCode\n *\n * Extensions for valueDate\n *\n * Extensions for valueDateTime\n *\n * Extensions for valueDecimal\n *\n * Extensions for valueId\n *\n * Extensions for valueInstant\n *\n * Extensions for valueInteger\n *\n * Extensions for valueMarkdown\n *\n * Extensions for valueOid\n *\n * Extensions for valuePositiveInt\n *\n * Extensions for valueString\n *\n * Extensions for valueTime\n *\n * Extensions for valueUnsignedInt\n *\n * Extensions for valueUri\n *\n * Extensions for valueUrl\n *\n * Extensions for valueUuid\n *\n * Extensions for city\n *\n * Extensions for country\n *\n * Extensions for district\n *\n * Extensions for postalCode\n *\n * Extensions for state\n *\n * Extensions for text\n *\n * Extensions for type\n *\n * Extensions for use\n *\n * Extensions for end\n *\n * Extensions for start\n *\n * Extensions for code\n *\n * Extensions for comparator\n *\n * Extensions for system\n *\n * Extensions for unit\n *\n * Extensions for value\n *\n * Extensions for authorString\n *\n * Extensions for time\n *\n * Extensions for display\n *\n * Extensions for reference\n *\n * Extensions for userSelected\n *\n * Extensions for version\n *\n * Extensions for contentType\n *\n * Extensions for creation\n *\n * Extensions for data\n *\n * Extensions for hash\n *\n * Extensions for language\n *\n * Extensions for size\n *\n * Extensions for title\n *\n * Extensions for name\n *\n * Extensions for rank\n *\n * Extensions for limit\n *\n * Extensions for path\n *\n * Extensions for searchParam\n *\n * Extensions for direction\n *\n * Extensions for asNeededBoolean\n *\n * Extensions for patientInstruction\n *\n * Extensions for sequence\n *\n * Extensions for count\n *\n * Extensions for countMax\n *\n * Extensions for duration\n *\n * Extensions for durationMax\n *\n * Extensions for durationUnit\n *\n * Extensions for frequency\n *\n * Extensions for frequencyMax\n *\n * Extensions for offset\n *\n * Extensions for period\n *\n * Extensions for periodMax\n *\n * Extensions for periodUnit\n *\n * Extensions for expression\n *\n * Extensions for family\n *\n * Extensions for currency\n *\n * Extensions for documentation\n *\n * Extensions for max\n *\n * Extensions for min\n *\n * Extensions for citation\n *\n * Extensions for label\n *\n * Extensions for dimensions\n *\n * Extensions for factor\n *\n * Extensions for lowerLimit\n *\n * Extensions for upperLimit\n *\n * Extensions for sigFormat\n *\n * Extensions for targetFormat\n *\n * Extensions for when\n *\n * Extensions for timingDate\n *\n * Extensions for timingDateTime\n *\n * Extensions for implicitRules\n *\n * Extensions for status\n *\n * Extensions for priority\n *\n * Extensions for onHold\n *\n * Extensions for lastUpdated\n *\n * Extensions for source\n *\n * Extensions for versionId\n */\nexport interface Element {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n}\n\n/**\n * The type of triggering event.\n */\nexport enum TriggerDefinitionType {\n    DataAccessEnded = \"data-access-ended\",\n    DataAccessed = \"data-accessed\",\n    DataAdded = \"data-added\",\n    DataChanged = \"data-changed\",\n    DataModified = \"data-modified\",\n    DataRemoved = \"data-removed\",\n    NamedEvent = \"named-event\",\n    Periodic = \"periodic\",\n}\n\n/**\n * The type of relationship to the related artifact.\n */\nexport enum RelatedArtifactType {\n    Citation = \"citation\",\n    ComposedOf = \"composed-of\",\n    DependsOn = \"depends-on\",\n    DerivedFrom = \"derived-from\",\n    Documentation = \"documentation\",\n    Justification = \"justification\",\n    Predecessor = \"predecessor\",\n    Successor = \"successor\",\n}\n\n/**\n * Identifies the purpose for this name.\n */\nexport enum HumanNameUse {\n    Anonymous = \"anonymous\",\n    Maiden = \"maiden\",\n    Nickname = \"nickname\",\n    Official = \"official\",\n    Old = \"old\",\n    Temp = \"temp\",\n    Usual = \"usual\",\n}\n\n/**\n * The media type of the language for the expression.\n */\nexport enum Language {\n    ApplicationXFhirQuery = \"application/x-fhir-query\",\n    TextCql = \"text/cql\",\n    TextFhirpath = \"text/fhirpath\",\n}\n\n/**\n * The units of time for the duration, in UCUM units.\n *\n * The units of time for the period in UCUM units.\n */\nexport enum Unit {\n    A = \"a\",\n    D = \"d\",\n    H = \"h\",\n    Min = \"min\",\n    Mo = \"mo\",\n    S = \"s\",\n    Wk = \"wk\",\n}\n\nexport enum When {\n    AC = \"AC\",\n    ACD = \"ACD\",\n    ACM = \"ACM\",\n    AFTEarly = \"AFT.early\",\n    AFTLate = \"AFT.late\",\n    Acv = \"ACV\",\n    Aft = \"AFT\",\n    C = \"C\",\n    CD = \"CD\",\n    CM = \"CM\",\n    Cv = \"CV\",\n    EVEEarly = \"EVE.early\",\n    EVELate = \"EVE.late\",\n    Eve = \"EVE\",\n    Hs = \"HS\",\n    MORNEarly = \"MORN.early\",\n    MORNLate = \"MORN.late\",\n    Morn = \"MORN\",\n    Night = \"NIGHT\",\n    Noon = \"NOON\",\n    PC = \"PC\",\n    PCM = \"PCM\",\n    Pcd = \"PCD\",\n    Pcv = \"PCV\",\n    Phs = \"PHS\",\n    Wake = \"WAKE\",\n}\n\n/**\n * How the value should be understood and represented - whether the actual value is greater\n * or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" ,\n * then the real value is < stated value.\n */\nexport enum Comparator {\n    Comparator = \"<=\",\n    Empty = \"<\",\n    Fluffy = \">\",\n    Purple = \">=\",\n}\n\n/**\n * The direction of the sort, ascending or descending.\n */\nexport enum Direction {\n    Ascending = \"ascending\",\n    Descending = \"descending\",\n}\n\n/**\n * The type of contributor.\n */\nexport enum ContributorType {\n    Author = \"author\",\n    Editor = \"editor\",\n    Endorser = \"endorser\",\n    Reviewer = \"reviewer\",\n}\n\n/**\n * Telecommunications form for contact point - what communications system is required to\n * make use of the contact.\n */\nexport enum System {\n    Email = \"email\",\n    Fax = \"fax\",\n    Other = \"other\",\n    Pager = \"pager\",\n    Phone = \"phone\",\n    Sms = \"sms\",\n    Url = \"url\",\n}\n\n/**\n * Identifies the purpose for the contact point.\n */\nexport enum ContactPointUse {\n    Home = \"home\",\n    Mobile = \"mobile\",\n    Old = \"old\",\n    Temp = \"temp\",\n    Work = \"work\",\n}\n\n/**\n * The purpose of this identifier.\n */\nexport enum IdentifierUse {\n    Official = \"official\",\n    Old = \"old\",\n    Secondary = \"secondary\",\n    Temp = \"temp\",\n    Usual = \"usual\",\n}\n\n/**\n * Distinguishes between physical addresses (those you can visit) and mailing addresses\n * (e.g. PO Boxes and care-of addresses). Most addresses are both.\n */\nexport enum AddressType {\n    Both = \"both\",\n    Physical = \"physical\",\n    Postal = \"postal\",\n}\n\n/**\n * The purpose of this address.\n */\nexport enum AddressUse {\n    Billing = \"billing\",\n    Home = \"home\",\n    Old = \"old\",\n    Temp = \"temp\",\n    Work = \"work\",\n}\n\n/**\n * The metadata about the resource. This is content that is maintained by the\n * infrastructure. Changes to the content might not always be associated with version\n * changes to the resource.\n *\n * The metadata about a resource. This is content in the resource that is maintained by the\n * infrastructure. Changes to the content might not always be associated with version\n * changes to the resource.\n */\nexport interface Meta {\n    /**\n     * Extensions for lastUpdated\n     */\n    _lastUpdated?: Element;\n    /**\n     * Extensions for source\n     */\n    _source?: Element;\n    /**\n     * Extensions for versionId\n     */\n    _versionId?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * When the resource last changed - e.g. when the version changed.\n     */\n    lastUpdated?: string;\n    /**\n     * A list of profiles (references to [[[StructureDefinition]]] resources) that this resource\n     * claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].\n     */\n    profile?: string[];\n    /**\n     * Security labels applied to this resource. These tags connect specific resources to the\n     * overall security policy and infrastructure.\n     */\n    security?: Coding[];\n    /**\n     * A uri that identifies the source system of the resource. This provides a minimal amount\n     * of [[[Provenance]]] information that can be used to track or differentiate the source of\n     * information in the resource. The source may identify another FHIR server, document,\n     * message, database, etc.\n     */\n    source?: string;\n    /**\n     * Tags applied to this resource. Tags are intended to be used to identify and relate\n     * resources to process and workflow, and applications are not required to consider the tags\n     * when interpreting the meaning of a resource.\n     */\n    tag?: Coding[];\n    /**\n     * The version specific identifier, as it appears in the version portion of the URL. This\n     * value changes when the resource is created, updated, or deleted.\n     */\n    versionId?: string;\n}\n\n\n/**\n * A human-readable narrative that contains a summary of the resource and can be used to\n * represent the content of the resource to a human. The narrative need not encode all the\n * structured data, but is required to contain sufficient detail to make it \"clinically\n * safe\" for a human to just read the narrative. Resource definitions may define what\n * content should be represented in the narrative to ensure clinical safety.\n *\n * A human-readable summary of the resource conveying the essential clinical and business\n * information for the resource.\n */\nexport interface Narrative {\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The actual narrative content, a stripped down version of XHTML.\n     */\n    div?: any;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The status of the narrative - whether it's entirely generated (from just the defined data\n     * or the extensions too), or whether a human authored it and it may contain additional data.\n     */\n    status?: Status;\n}\n\n/**\n * The status of the narrative - whether it's entirely generated (from just the defined data\n * or the extensions too), or whether a human authored it and it may contain additional data.\n */\nexport enum Status {\n    Additional = \"additional\",\n    Empty = \"empty\",\n    Extensions = \"extensions\",\n    Generated = \"generated\",\n}","import {\n    Element,\n    Extension,\n    Identifier,\n    Meta,\n    Reference,\n    Period,\n    Narrative,\n    CodeableConcept\n} from './fhir._';\n\nexport interface Account {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Account[];\n    /**\n     * The party(s) that are responsible for covering the payment of this account, and what\n     * order should they be applied to the account.\n     */\n    coverage?: AccountCoverage[];\n    /**\n     * Provides additional information about what the account tracks and how it is used.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The parties responsible for balancing the account if other payment options fall short.\n     */\n    guarantor?: AccountGuarantor[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique identifier used to reference the account.  Might or might not be intended for\n     * human use (e.g. credit card number).\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Name used for the account when displaying it to humans in reports, etc.\n     */\n    name?: string;\n    /**\n     * Indicates the service area, hospital, department, etc. with responsibility for managing\n     * the Account.\n     */\n    owner?: Reference;\n    /**\n     * Reference to a parent Account.\n     */\n    partOf?: Reference;\n    /**\n     * This is a Account resource\n     */\n    resourceType?: any;\n    /**\n     * The date range of services associated with this account.\n     */\n    servicePeriod?: Period;\n    /**\n     * Indicates whether the account is presently used/usable or not.\n     */\n    status?: AccountStatus;\n    /**\n     * Identifies the entity which incurs the expenses. While the immediate recipients of\n     * services or goods might be entities related to the subject, the expenses were ultimately\n     * incurred by the subject of the Account.\n     */\n    subject?: Reference[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Categorizes the account for reporting and searching purposes.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A financial tool for tracking value accrued for a particular purpose.  In the healthcare\n * field, used to track charges for a patient, cost centers, etc.\n */\nexport interface AccountCoverage {\n    /**\n     * Extensions for priority\n     */\n    _priority?: Element;\n    /**\n     * The party(s) that contribute to payment (or part of) of the charges applied to this\n     * account (including self-pay).\n     *\n     * A coverage may only be responsible for specific types of charges, and the sequence of the\n     * coverages in the account could be important when processing billing.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The priority of the coverage in the context of this account.\n     */\n    priority?: number;\n}\n\n/**\n * A financial tool for tracking value accrued for a particular purpose.  In the healthcare\n * field, used to track charges for a patient, cost centers, etc.\n */\nexport interface AccountGuarantor {\n    /**\n     * Extensions for onHold\n     */\n    _onHold?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A guarantor may be placed on credit hold or otherwise have their role temporarily\n     * suspended.\n     */\n    onHold?: boolean;\n    /**\n     * The entity who is responsible.\n     */\n    party?: Reference;\n    /**\n     * The timeframe during which the guarantor accepts responsibility for the account.\n     */\n    period?: Period;\n}\n\n\n/**\n * Indicates whether the account is presently used/usable or not.\n */\nexport enum AccountStatus {\n    Active = \"active\",\n    EnteredInError = \"entered-in-error\",\n    Inactive = \"inactive\",\n    OnHold = \"on-hold\",\n    Unknown = \"unknown\",\n}\n","import {\n    Element,\n    ContactDetail,\n    CodeableConcept,\n    Dosage,\n    Period,\n    Extension,\n    Reference,\n    Meta,\n    Identifier,\n    Quantity,\n    RelatedArtifact,\n    Narrative,\n    Age,\n    Duration,\n    Range,\n    Timing,\n    UsageContext,\n    Expression\n} from './fhir._';\n\nexport interface ActivityDefinition {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for doNotPerform\n     */\n    _doNotPerform?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for intent\n     */\n    _intent?: Element;\n    /**\n     * Extensions for kind\n     */\n    _kind?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for priority\n     */\n    _priority?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for timingDateTime\n     */\n    _timingDateTime?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for usage\n     */\n    _usage?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * Indicates the sites on the subject's body where the procedure should be performed (I.e.\n     * the target sites).\n     */\n    bodySite?: CodeableConcept[];\n    /**\n     * Detailed description of the type of activity; e.g. What lab test, what procedure, what\n     * kind of encounter.\n     */\n    code?: CodeableConcept;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ActivityDefinition[];\n    /**\n     * A copyright statement relating to the activity definition and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the activity\n     * definition.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the activity definition was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the activity definition\n     * changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the activity definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * Set this to true if the definition is to indicate that a particular activity should NOT\n     * be performed. If true, this element should be interpreted to reinforce a negative coding.\n     * For example NPO as a code with a doNotPerform of true would still indicate to NOT perform\n     * the action.\n     */\n    doNotPerform?: boolean;\n    /**\n     * Provides detailed dosage instructions in the same way that they are described for\n     * MedicationRequest resources.\n     */\n    dosage?: Dosage[];\n    /**\n     * Dynamic values that will be evaluated to produce values for elements of the resulting\n     * resource. For example, if the dosage of a medication must be computed based on the\n     * patient's weight, a dynamic value would be used to specify an expression that calculated\n     * the weight, and the path on the request resource that would contain the result.\n     */\n    dynamicValue?: ActivityDefinitionDynamicValue[];\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the activity definition content was or is planned to be in active\n     * use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A Boolean value to indicate that this activity definition is authored for testing\n     * purposes (or education/evaluation/marketing) and is not intended to be used for genuine\n     * usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this activity definition when it is\n     * represented in other formats, or referenced in a specification, model, design or an\n     * instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Indicates the level of authority/intentionality associated with the activity and where\n     * the request should fit into the workflow chain.\n     */\n    intent?: string;\n    /**\n     * A legal or geographic region in which the activity definition is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * A description of the kind of resource the activity definition is representing. For\n     * example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but\n     * not always, this is a Request resource.\n     */\n    kind?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * A reference to a Library resource containing any formal logic used by the activity\n     * definition.\n     */\n    library?: string[];\n    /**\n     * Identifies the facility where the activity will occur; e.g. home, hospital, specific\n     * clinic, etc.\n     */\n    location?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the activity definition. This name should be usable\n     * as an identifier for the module by machine processing applications such as code\n     * generation.\n     */\n    name?: string;\n    /**\n     * Defines observation requirements for the action to be performed, such as body weight or\n     * surface area.\n     */\n    observationRequirement?: Reference[];\n    /**\n     * Defines the observations that are expected to be produced by the action.\n     */\n    observationResultRequirement?: Reference[];\n    /**\n     * Indicates who should participate in performing the action described.\n     */\n    participant?: ActivityDefinitionParticipant[];\n    /**\n     * Indicates how quickly the activity  should be addressed with respect to other requests.\n     */\n    priority?: string;\n    /**\n     * Identifies the food, drug or other product being consumed or supplied in the activity.\n     */\n    productCodeableConcept?: CodeableConcept;\n    /**\n     * Identifies the food, drug or other product being consumed or supplied in the activity.\n     */\n    productReference?: Reference;\n    /**\n     * A profile to which the target of the activity definition is expected to conform.\n     */\n    profile?: string;\n    /**\n     * The name of the organization or individual that published the activity definition.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this activity definition is needed and why it has been designed as it\n     * has.\n     */\n    purpose?: string;\n    /**\n     * Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).\n     */\n    quantity?: Quantity;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a ActivityDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * Defines specimen requirements for the action to be performed, such as required specimens\n     * for a lab test.\n     */\n    specimenRequirement?: Reference[];\n    /**\n     * The status of this activity definition. Enables tracking the life-cycle of the content.\n     */\n    status?: ActivityDefinitionStatus;\n    /**\n     * A code or group definition that describes the intended subject of the activity being\n     * defined.\n     */\n    subjectCodeableConcept?: CodeableConcept;\n    /**\n     * A code or group definition that describes the intended subject of the activity being\n     * defined.\n     */\n    subjectReference?: Reference;\n    /**\n     * An explanatory or alternate title for the activity definition giving additional\n     * information about its content.\n     */\n    subtitle?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingAge?: Age;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingDateTime?: string;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingDuration?: Duration;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingPeriod?: Period;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingRange?: Range;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    timingTiming?: Timing;\n    /**\n     * A short, descriptive, user-friendly title for the activity definition.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the activity. Topics provide a high-level\n     * categorization of the activity that can be useful for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * A reference to a StructureMap resource that defines a transform that can be executed to\n     * produce the intent resource using the ActivityDefinition instance as the input.\n     */\n    transform?: string;\n    /**\n     * An absolute URI that is used to identify this activity definition when it is referenced\n     * in a specification, model, design or an instance; also called its canonical identifier.\n     * This SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this activity definition is (or will be) published. This URL\n     * can be the target of a canonical reference. It SHALL remain the same when the activity\n     * definition is stored on different servers.\n     */\n    url?: string;\n    /**\n     * A detailed description of how the activity definition is used from a clinical perspective.\n     */\n    usage?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate activity definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the activity definition when it\n     * is referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the activity definition author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     * To provide a version consistent with the Decision Support Service specification, use the\n     * format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge\n     * assets, refer to the Decision Support Service specification. Note that a version is\n     * required for non-experimental active assets.\n     */\n    version?: string;\n}\n\n/**\n * This resource allows for the definition of some activity to be performed, independent of\n * a particular patient, practitioner, or other performance context.\n */\nexport interface ActivityDefinitionDynamicValue {\n    /**\n     * Extensions for path\n     */\n    _path?: Element;\n    /**\n     * An expression specifying the value of the customized element.\n     */\n    expression?: Expression;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The path to the element to be customized. This is the path on the resource that will hold\n     * the result of the calculation defined by the expression. The specified path SHALL be a\n     * FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL\n     * consist only of identifiers, constant indexers, and a restricted subset of functions. The\n     * path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers\n     * ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath\n     * Profile](fhirpath.html#simple) for full details).\n     */\n    path?: string;\n}\n\n/**\n * This resource allows for the definition of some activity to be performed, independent of\n * a particular patient, practitioner, or other performance context.\n */\nexport interface ActivityDefinitionParticipant {\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The role the participant should play in performing the described action.\n     */\n    role?: CodeableConcept;\n    /**\n     * The type of participant in the action.\n     */\n    type?: string;\n}\n\n/**\n * The status of this activity definition. Enables tracking the life-cycle of the content.\n */\nexport enum ActivityDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}\n","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Narrative\n} from './fhir._';\n\nexport interface AdverseEvent {\n    /**\n     * Extensions for actuality\n     */\n    _actuality?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for detected\n     */\n    _detected?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for recordedDate\n     */\n    _recordedDate?: Element;\n    /**\n     * Whether the event actually happened, or just had the potential to. Note that this is\n     * independent of whether anyone was affected or harmed or how severely.\n     */\n    actuality?: Actuality;\n    /**\n     * The overall type of event, intended for search and filtering purposes.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: AdverseEvent[];\n    /**\n     * Parties that may or should contribute or have contributed information to the adverse\n     * event, which can consist of one or more activities.  Such information includes\n     * information leading to the decision to perform the activity and how to perform the\n     * activity (e.g. consultant), information that the activity itself seeks to reveal (e.g.\n     * informant of clinical history), or information about what activity was performed (e.g.\n     * informant witness).\n     */\n    contributor?: Reference[];\n    /**\n     * The date (and perhaps time) when the adverse event occurred.\n     */\n    date?: string;\n    /**\n     * Estimated or actual date the AdverseEvent began, in the opinion of the reporter.\n     */\n    detected?: string;\n    /**\n     * The Encounter during which AdverseEvent was created or to which the creation of this\n     * record is tightly associated.\n     */\n    encounter?: Reference;\n    /**\n     * This element defines the specific type of event that occurred or that was prevented from\n     * occurring.\n     */\n    event?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this adverse event by the performer or other systems\n     * which remain constant as the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The information about where the adverse event occurred.\n     */\n    location?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Describes the type of outcome from the adverse event.\n     */\n    outcome?: CodeableConcept;\n    /**\n     * The date on which the existence of the AdverseEvent was first recorded.\n     */\n    recordedDate?: string;\n    /**\n     * Information on who recorded the adverse event.  May be the patient or a practitioner.\n     */\n    recorder?: Reference;\n    /**\n     * AdverseEvent.referenceDocument.\n     */\n    referenceDocument?: Reference[];\n    /**\n     * This is a AdverseEvent resource\n     */\n    resourceType?: any;\n    /**\n     * Includes information about the reaction that occurred as a result of exposure to a\n     * substance (for example, a drug or a chemical).\n     */\n    resultingCondition?: Reference[];\n    /**\n     * Assessment whether this event was of real importance.\n     */\n    seriousness?: CodeableConcept;\n    /**\n     * Describes the severity of the adverse event, in relation to the subject. Contrast to\n     * AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem\n     * is.\n     */\n    severity?: CodeableConcept;\n    /**\n     * AdverseEvent.study.\n     */\n    study?: Reference[];\n    /**\n     * This subject or group impacted by the event.\n     */\n    subject?: Reference;\n    /**\n     * AdverseEvent.subjectMedicalHistory.\n     */\n    subjectMedicalHistory?: Reference[];\n    /**\n     * Describes the entity that is suspected to have caused the adverse event.\n     */\n    suspectEntity?: AdverseEventSuspectEntity[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Whether the event actually happened, or just had the potential to. Note that this is\n * independent of whether anyone was affected or harmed or how severely.\n */\nexport enum Actuality {\n    Actual = \"actual\",\n    Potential = \"potential\",\n}\n\n/**\n * Actual or  potential/avoided event causing unintended physical injury resulting from or\n * contributed to by medical care, a research study or other healthcare setting factors that\n * requires additional monitoring, treatment, or hospitalization, or that results in death.\n */\nexport interface AdverseEventSuspectEntity {\n    /**\n     * Information on the possible cause of the event.\n     */\n    causality?: AdverseEventCausality[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Identifies the actual instance of what caused the adverse event.  May be a substance,\n     * medication, medication administration, medication statement or a device.\n     */\n    instance?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Actual or  potential/avoided event causing unintended physical injury resulting from or\n * contributed to by medical care, a research study or other healthcare setting factors that\n * requires additional monitoring, treatment, or hospitalization, or that results in death.\n */\nexport interface AdverseEventCausality {\n    /**\n     * Extensions for productRelatedness\n     */\n    _productRelatedness?: Element;\n    /**\n     * Assessment of if the entity caused the event.\n     */\n    assessment?: CodeableConcept;\n    /**\n     * AdverseEvent.suspectEntity.causalityAuthor.\n     */\n    author?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * ProbabilityScale | Bayesian | Checklist.\n     */\n    method?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * AdverseEvent.suspectEntity.causalityProductRelatedness.\n     */\n    productRelatedness?: string;\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Age,\n    Period,\n    Range,\n    Narrative\n} from './fhir._';\n\nexport interface AllergyIntolerance {\n    /**\n     * Extensions for category\n     */\n    _category?: Element[];\n    /**\n     * Extensions for criticality\n     */\n    _criticality?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastOccurrence\n     */\n    _lastOccurrence?: Element;\n    /**\n     * Extensions for onsetDateTime\n     */\n    _onsetDateTime?: Element;\n    /**\n     * Extensions for onsetString\n     */\n    _onsetString?: Element;\n    /**\n     * Extensions for recordedDate\n     */\n    _recordedDate?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * The source of the information about the allergy that is recorded.\n     */\n    asserter?: Reference;\n    /**\n     * Category of the identified substance.\n     */\n    category?: AllergyIntoleranceCategory[];\n    /**\n     * The clinical status of the allergy or intolerance.\n     */\n    clinicalStatus?: CodeableConcept;\n    /**\n     * Code for an allergy or intolerance statement (either a positive or a negated/excluded\n     * statement).  This may be a code for a substance or pharmaceutical product that is\n     * considered to be responsible for the adverse reaction risk (e.g., \"Latex\"), an allergy or\n     * intolerance condition (e.g., \"Latex allergy\"), or a negated/excluded code for a specific\n     * substance or class (e.g., \"No latex allergy\") or a general or categorical negated\n     * statement (e.g.,  \"No known allergy\", \"No known drug allergies\").  Note: the substance\n     * for a specific reaction may be different from the substance identified as the cause of\n     * the risk, but it must be consistent with it. For instance, it may be a more specific\n     * substance (e.g. a brand medication) or a composite product that includes the identified\n     * substance. It must be clinically safe to only process the 'code' and ignore the\n     * 'reaction.substance'.  If a receiving system is unable to confirm that\n     * AllergyIntolerance.reaction.substance falls within the semantic scope of\n     * AllergyIntolerance.code, then the receiving system should ignore\n     * AllergyIntolerance.reaction.substance.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: AllergyIntolerance[];\n    /**\n     * Estimate of the potential clinical harm, or seriousness, of the reaction to the\n     * identified substance.\n     */\n    criticality?: Criticality;\n    /**\n     * The encounter when the allergy or intolerance was asserted.\n     */\n    encounter?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this AllergyIntolerance by the performer or other\n     * systems which remain constant as the resource is updated and propagates from server to\n     * server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Represents the date and/or time of the last known occurrence of a reaction event.\n     */\n    lastOccurrence?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Additional narrative about the propensity for the Adverse Reaction, not captured in other\n     * fields.\n     */\n    note?: Annotation[];\n    /**\n     * Estimated or actual date,  date-time, or age when allergy or intolerance was identified.\n     */\n    onsetAge?: Age;\n    /**\n     * Estimated or actual date,  date-time, or age when allergy or intolerance was identified.\n     */\n    onsetDateTime?: string;\n    /**\n     * Estimated or actual date,  date-time, or age when allergy or intolerance was identified.\n     */\n    onsetPeriod?: Period;\n    /**\n     * Estimated or actual date,  date-time, or age when allergy or intolerance was identified.\n     */\n    onsetRange?: Range;\n    /**\n     * Estimated or actual date,  date-time, or age when allergy or intolerance was identified.\n     */\n    onsetString?: string;\n    /**\n     * The patient who has the allergy or intolerance.\n     */\n    patient?: Reference;\n    /**\n     * Details about each adverse reaction event linked to exposure to the identified substance.\n     */\n    reaction?: AllergyIntoleranceReaction[];\n    /**\n     * The recordedDate represents when this particular AllergyIntolerance record was created in\n     * the system, which is often a system-generated date.\n     */\n    recordedDate?: string;\n    /**\n     * Individual who recorded the record and takes responsibility for its content.\n     */\n    recorder?: Reference;\n    /**\n     * This is a AllergyIntolerance resource\n     */\n    resourceType?: any;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Identification of the underlying physiological mechanism for the reaction risk.\n     */\n    type?: AllergyIntoleranceType;\n    /**\n     * Assertion about certainty associated with the propensity, or potential risk, of a\n     * reaction to the identified substance (including pharmaceutical product).\n     */\n    verificationStatus?: CodeableConcept;\n}\n\nexport enum AllergyIntoleranceCategory {\n    Biologic = \"biologic\",\n    Environment = \"environment\",\n    Food = \"food\",\n    Medication = \"medication\",\n}\n\n/**\n * Estimate of the potential clinical harm, or seriousness, of the reaction to the\n * identified substance.\n */\nexport enum Criticality {\n    High = \"high\",\n    Low = \"low\",\n    UnableToAssess = \"unable-to-assess\",\n}\n\n/**\n * Risk of harmful or undesirable, physiological response which is unique to an individual\n * and associated with exposure to a substance.\n */\nexport interface AllergyIntoleranceReaction {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for onset\n     */\n    _onset?: Element;\n    /**\n     * Extensions for severity\n     */\n    _severity?: Element;\n    /**\n     * Text description about the reaction as a whole, including details of the manifestation if\n     * required.\n     */\n    description?: string;\n    /**\n     * Identification of the route by which the subject was exposed to the substance.\n     */\n    exposureRoute?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Clinical symptoms and/or signs that are observed or associated with the adverse reaction\n     * event.\n     */\n    manifestation?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Additional text about the adverse reaction event not captured in other fields.\n     */\n    note?: Annotation[];\n    /**\n     * Record of the date and/or time of the onset of the Reaction.\n     */\n    onset?: string;\n    /**\n     * Clinical assessment of the severity of the reaction event as a whole, potentially\n     * considering multiple different manifestations.\n     */\n    severity?: AllergyIntoleranceSeverity;\n    /**\n     * Identification of the specific substance (or pharmaceutical product) considered to be\n     * responsible for the Adverse Reaction event. Note: the substance for a specific reaction\n     * may be different from the substance identified as the cause of the risk, but it must be\n     * consistent with it. For instance, it may be a more specific substance (e.g. a brand\n     * medication) or a composite product that includes the identified substance. It must be\n     * clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a\n     * receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls\n     * within the semantic scope of AllergyIntolerance.code, then the receiving system should\n     * ignore AllergyIntolerance.reaction.substance.\n     */\n    substance?: CodeableConcept;\n}\n\n/**\n * Clinical assessment of the severity of the reaction event as a whole, potentially\n * considering multiple different manifestations.\n */\nexport enum AllergyIntoleranceSeverity {\n    Mild = \"mild\",\n    Moderate = \"moderate\",\n    Severe = \"severe\",\n}\n\n/**\n * Identification of the underlying physiological mechanism for the reaction risk.\n */\nexport enum AllergyIntoleranceType {\n    Allergy = \"allergy\",\n    Intolerance = \"intolerance\",\n}\n","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Period,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Appointment {\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for minutesDuration\n     */\n    _minutesDuration?: Element;\n    /**\n     * Extensions for patientInstruction\n     */\n    _patientInstruction?: Element;\n    /**\n     * Extensions for priority\n     */\n    _priority?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The style of appointment or patient that has been booked in the slot (not service type).\n     */\n    appointmentType?: CodeableConcept;\n    /**\n     * The service request this appointment is allocated to assess (e.g. incoming referral or\n     * procedure request).\n     */\n    basedOn?: Reference[];\n    /**\n     * The coded reason for the appointment being cancelled. This is often used in\n     * reporting/billing/futher processing to determine if further actions are required, or\n     * specific fees apply.\n     */\n    cancelationReason?: CodeableConcept;\n    /**\n     * Additional comments about the appointment.\n     */\n    comment?: string;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Appointment[];\n    /**\n     * The date that this appointment was initially created. This could be different to the\n     * meta.lastModified value on the initial entry, as this could have been before the resource\n     * was created on the FHIR server, and should remain unchanged over the lifespan of the\n     * appointment.\n     */\n    created?: string;\n    /**\n     * The brief description of the appointment as would be shown on a subject line in a meeting\n     * request, or appointment list. Detailed or expanded information should be put in the\n     * comment field.\n     */\n    description?: string;\n    /**\n     * Date/Time that the appointment is to conclude.\n     */\n    end?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * This records identifiers associated with this appointment concern that are defined by\n     * business processes and/or used to refer to it when a direct URL reference to the resource\n     * itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * Number of minutes that the appointment is to take. This can be less than the duration\n     * between the start and end times.  For example, where the actual time of appointment is\n     * only an estimate or if a 30 minute appointment is being requested, but any time would\n     * work.  Also, if there is, for example, a planned 15 minute break in the middle of a long\n     * appointment, the duration may be 15 minutes less than the difference between the start\n     * and end.\n     */\n    minutesDuration?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * List of participants involved in the appointment.\n     */\n    participant?: AppointmentParticipant[];\n    /**\n     * While Appointment.comment contains information for internal use,\n     * Appointment.patientInstructions is used to capture patient facing information about the\n     * Appointment (e.g. please bring your referral or fast from 8pm night before).\n     */\n    patientInstruction?: string;\n    /**\n     * The priority of the appointment. Can be used to make informed decisions if needing to\n     * re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9\n     * as lowest priority).\n     */\n    priority?: number;\n    /**\n     * The coded reason that this appointment is being scheduled. This is more clinical than\n     * administrative.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Reason the appointment has been scheduled to take place, as specified using information\n     * from another resource. When the patient arrives and the encounter begins it may be used\n     * as the admission diagnosis. The indication will typically be a Condition (with other\n     * resources referenced in the evidence.detail), or a Procedure.\n     */\n    reasonReference?: Reference[];\n    /**\n     * A set of date ranges (potentially including times) that the appointment is preferred to\n     * be scheduled within.\n     *\n     * The duration (usually in minutes) could also be provided to indicate the length of the\n     * appointment to fill and populate the start/end times for the actual allocated time.\n     * However, in other situations the duration may be calculated by the scheduling system.\n     */\n    requestedPeriod?: Period[];\n    /**\n     * This is a Appointment resource\n     */\n    resourceType?: any;\n    /**\n     * A broad categorization of the service that is to be performed during this appointment.\n     */\n    serviceCategory?: CodeableConcept[];\n    /**\n     * The specific service that is to be performed during this appointment.\n     */\n    serviceType?: CodeableConcept[];\n    /**\n     * The slots from the participants' schedules that will be filled by the appointment.\n     */\n    slot?: Reference[];\n    /**\n     * The specialty of a practitioner that would be required to perform the service requested\n     * in this appointment.\n     */\n    specialty?: CodeableConcept[];\n    /**\n     * Date/Time that the appointment is to take place.\n     */\n    start?: string;\n    /**\n     * The overall status of the Appointment. Each of the participants has their own\n     * participation status which indicates their involvement in the process, however this\n     * status indicates the shared status.\n     */\n    status?: AppointmentStatus;\n    /**\n     * Additional information to support the appointment provided when making the appointment.\n     */\n    supportingInformation?: Reference[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * A booking of a healthcare event among patient(s), practitioner(s), related person(s)\n * and/or device(s) for a specific date/time. This may result in one or more Encounter(s).\n */\nexport interface AppointmentParticipant {\n    /**\n     * Extensions for required\n     */\n    _required?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * A Person, Location/HealthcareService or Device that is participating in the appointment.\n     */\n    actor?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Participation period of the actor.\n     */\n    period?: Period;\n    /**\n     * Whether this participant is required to be present at the meeting. This covers a use-case\n     * where two doctors need to meet to discuss the results for a specific patient, and the\n     * patient is not required to be present.\n     */\n    required?: Required;\n    /**\n     * Participation status of the actor.\n     */\n    status?: AppointmentParticipantStatus;\n    /**\n     * Role of participant in the appointment.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * Whether this participant is required to be present at the meeting. This covers a use-case\n * where two doctors need to meet to discuss the results for a specific patient, and the\n * patient is not required to be present.\n */\nexport enum Required {\n    InformationOnly = \"information-only\",\n    Optional = \"optional\",\n    Required = \"required\",\n}\n\n/**\n * Participation status of the actor.\n */\nexport enum AppointmentParticipantStatus {\n    Accepted = \"accepted\",\n    Declined = \"declined\",\n    NeedsAction = \"needs-action\",\n    Tentative = \"tentative\",\n}\n\n/**\n * The overall status of the Appointment. Each of the participants has their own\n * participation status which indicates their involvement in the process, however this\n * status indicates the shared status.\n */\nexport enum AppointmentStatus {\n    Arrived = \"arrived\",\n    Booked = \"booked\",\n    Cancelled = \"cancelled\",\n    CheckedIn = \"checked-in\",\n    EnteredInError = \"entered-in-error\",\n    Fulfilled = \"fulfilled\",\n    Noshow = \"noshow\",\n    Pending = \"pending\",\n    Proposed = \"proposed\",\n    Waitlist = \"waitlist\",\n}\n\n","import {\n    Element,\n    Extension,\n    Meta,\n    CodeableConcept,\n    Period,\n    Coding,\n    Narrative,\n    Reference\n} from \"./fhir._\";\n\nexport interface AuditEvent {\n    /**\n     * Extensions for action\n     */\n    _action?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for outcome\n     */\n    _outcome?: Element;\n    /**\n     * Extensions for outcomeDesc\n     */\n    _outcomeDesc?: Element;\n    /**\n     * Extensions for recorded\n     */\n    _recorded?: Element;\n    /**\n     * Indicator for type of action performed during the event that generated the audit.\n     */\n    action?: Action;\n    /**\n     * An actor taking an active role in the event or activity that is logged.\n     */\n    agent?: AuditEventAgent[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: AuditEvent[];\n    /**\n     * Specific instances of data or objects that have been accessed.\n     */\n    entity?: AuditEventEntity[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indicates whether the event succeeded or failed.\n     */\n    outcome?: AuditEventOutcome;\n    /**\n     * A free text description of the outcome of the event.\n     */\n    outcomeDesc?: string;\n    /**\n     * The period during which the activity occurred.\n     */\n    period?: Period;\n    /**\n     * The purposeOfUse (reason) that was used during the event being recorded.\n     */\n    purposeOfEvent?: CodeableConcept[];\n    /**\n     * The time when the event was recorded.\n     */\n    recorded?: string;\n    /**\n     * This is a AuditEvent resource\n     */\n    resourceType?: any;\n    /**\n     * The system that is reporting the event.\n     */\n    source?: AuditEventSource;\n    /**\n     * Identifier for the category of event.\n     */\n    subtype?: Coding[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Identifier for a family of the event.  For example, a menu item, program, rule, policy,\n     * function code, application name or URL. It identifies the performed function.\n     */\n    type?: Coding;\n}\n\n/**\n * Indicator for type of action performed during the event that generated the audit.\n */\nexport enum Action {\n    C = \"C\",\n    D = \"D\",\n    E = \"E\",\n    R = \"R\",\n    U = \"U\",\n}\n\n/**\n * A record of an event made for purposes of maintaining a security log. Typical uses\n * include detection of intrusion attempts and monitoring for inappropriate usage.\n */\nexport interface AuditEventAgent {\n    /**\n     * Extensions for altId\n     */\n    _altId?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for policy\n     */\n    _policy?: Element[];\n    /**\n     * Extensions for requestor\n     */\n    _requestor?: Element;\n    /**\n     * Alternative agent Identifier. For a human, this should be a user identifier text string\n     * from authentication system. This identifier would be one known to a common authentication\n     * system (e.g. single sign-on), if available.\n     */\n    altId?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Where the event occurred.\n     */\n    location?: Reference;\n    /**\n     * Type of media involved. Used when the event is about exporting/importing onto media.\n     */\n    media?: Coding;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Human-meaningful name for the agent.\n     */\n    name?: string;\n    /**\n     * Logical network location for application activity, if the activity has a network location.\n     */\n    network?: AuditEventNetwork;\n    /**\n     * The policy or plan that authorized the activity being recorded. Typically, a single\n     * activity may have multiple applicable policies, such as patient consent, guarantor\n     * funding, etc. The policy would also indicate the security token used.\n     */\n    policy?: string[];\n    /**\n     * The reason (purpose of use), specific to this agent, that was used during the event being\n     * recorded.\n     */\n    purposeOfUse?: CodeableConcept[];\n    /**\n     * Indicator that the user is or is not the requestor, or initiator, for the event being\n     * audited.\n     */\n    requestor?: boolean;\n    /**\n     * The security role that the user was acting under, that come from local codes defined by\n     * the access control security system (e.g. RBAC, ABAC) used in the local context.\n     */\n    role?: CodeableConcept[];\n    /**\n     * Specification of the participation type the user plays when performing the event.\n     */\n    type?: CodeableConcept;\n    /**\n     * Reference to who this agent is that was involved in the event.\n     */\n    who?: Reference;\n}\n\n/**\n * Logical network location for application activity, if the activity has a network\n * location.\n *\n * A record of an event made for purposes of maintaining a security log. Typical uses\n * include detection of intrusion attempts and monitoring for inappropriate usage.\n */\nexport interface AuditEventNetwork {\n    /**\n     * Extensions for address\n     */\n    _address?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * An identifier for the network access point of the user device for the audit event.\n     */\n    address?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An identifier for the type of network access point that originated the audit event.\n     */\n    type?: AuditEventNetworkType;\n}\n\n/**\n * An identifier for the type of network access point that originated the audit event.\n */\nexport enum AuditEventNetworkType {\n    The1 = \"1\",\n    The2 = \"2\",\n    The3 = \"3\",\n    The4 = \"4\",\n    The5 = \"5\",\n}\n\n/**\n * A record of an event made for purposes of maintaining a security log. Typical uses\n * include detection of intrusion attempts and monitoring for inappropriate usage.\n */\nexport interface AuditEventEntity {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for query\n     */\n    _query?: Element;\n    /**\n     * Text that describes the entity in more detail.\n     */\n    description?: string;\n    /**\n     * Tagged value pairs for conveying additional information about the entity.\n     */\n    detail?: AuditEventDetail[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Identifier for the data life-cycle stage for the entity.\n     */\n    lifecycle?: Coding;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A name of the entity in the audit event.\n     */\n    name?: string;\n    /**\n     * The query parameters for a query-type entities.\n     */\n    query?: string;\n    /**\n     * Code representing the role the entity played in the event being audited.\n     */\n    role?: Coding;\n    /**\n     * Security labels for the identified entity.\n     */\n    securityLabel?: Coding[];\n    /**\n     * The type of the object that was involved in this audit event.\n     */\n    type?: Coding;\n    /**\n     * Identifies a specific instance of the entity. The reference should be version specific.\n     */\n    what?: Reference;\n}\n\n/**\n * A record of an event made for purposes of maintaining a security log. Typical uses\n * include detection of intrusion attempts and monitoring for inappropriate usage.\n */\nexport interface AuditEventDetail {\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for valueBase64Binary\n     */\n    _valueBase64Binary?: Element;\n    /**\n     * Extensions for valueString\n     */\n    _valueString?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type of extra detail provided in the value.\n     */\n    type?: string;\n    /**\n     * The  value of the extra detail.\n     */\n    valueBase64Binary?: string;\n    /**\n     * The  value of the extra detail.\n     */\n    valueString?: string;\n}\n\n/**\n * Indicates whether the event succeeded or failed.\n */\nexport enum AuditEventOutcome {\n    The0 = \"0\",\n    The12 = \"12\",\n    The4 = \"4\",\n    The8 = \"8\",\n}\n\n/**\n * The system that is reporting the event.\n *\n * A record of an event made for purposes of maintaining a security log. Typical uses\n * include detection of intrusion attempts and monitoring for inappropriate usage.\n */\nexport interface AuditEventSource {\n    /**\n     * Extensions for site\n     */\n    _site?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Identifier of the source where the event was detected.\n     */\n    observer?: Reference;\n    /**\n     * Logical source location within the healthcare enterprise network.  For example, a\n     * hospital or other provider location within a multi-entity provider group.\n     */\n    site?: string;\n    /**\n     * Code specifying the type of source where event originated.\n     */\n    type?: Coding[];\n}","import {\n    Element,\n    Extension,\n    Identifier,\n    Meta,\n    Reference,\n    CodeableConcept,\n    Narrative,\n    Period\n} from \"./fhir._\";\n\nexport interface BiologicallyDerivedProduct {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for productCategory\n     */\n    _productCategory?: Element;\n    /**\n     * Extensions for quantity\n     */\n    _quantity?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * How this product was collected.\n     */\n    collection?: BiologicallyDerivedProductCollection;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: BiologicallyDerivedProduct[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * This records identifiers associated with this biologically derived product instance that\n     * are defined by business processes and/or used to refer to it when a direct URL reference\n     * to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed\n     * documentation).\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Any manipulation of product post-collection that is intended to alter the product.  For\n     * example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make\n     * it more suitable for infusion.\n     */\n    manipulation?: BiologicallyDerivedProductManipulation;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Parent product (if any).\n     */\n    parent?: Reference[];\n    /**\n     * Any processing of the product during collection that does not change the fundamental\n     * nature of the product. For example adding anti-coagulants during the collection of\n     * Peripheral Blood Stem Cells.\n     */\n    processing?: BiologicallyDerivedProductProcessing[];\n    /**\n     * Broad category of this product.\n     */\n    productCategory?: ProductCategory;\n    /**\n     * A code that identifies the kind of this biologically derived product (SNOMED Ctcode).\n     */\n    productCode?: CodeableConcept;\n    /**\n     * Number of discrete units within this product.\n     */\n    quantity?: number;\n    /**\n     * Procedure request to obtain this biologically derived product.\n     */\n    request?: Reference[];\n    /**\n     * This is a BiologicallyDerivedProduct resource\n     */\n    resourceType?: any;\n    /**\n     * Whether the product is currently available.\n     */\n    status?: BiologicallyDerivedProductStatus;\n    /**\n     * Product storage.\n     */\n    storage?: BiologicallyDerivedProductStorage[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * How this product was collected.\n *\n * A material substance originating from a biological entity intended to be transplanted or\n * infused\n * into another (possibly the same) biological entity.\n */\nexport interface BiologicallyDerivedProductCollection {\n    /**\n     * Extensions for collectedDateTime\n     */\n    _collectedDateTime?: Element;\n    /**\n     * Time of product collection.\n     */\n    collectedDateTime?: string;\n    /**\n     * Time of product collection.\n     */\n    collectedPeriod?: Period;\n    /**\n     * Healthcare professional who is performing the collection.\n     */\n    collector?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The patient or entity, such as a hospital or vendor in the case of a\n     * processed/manipulated/manufactured product, providing the product.\n     */\n    source?: Reference;\n}\n\n/**\n * Any manipulation of product post-collection that is intended to alter the product.  For\n * example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make\n * it more suitable for infusion.\n *\n * A material substance originating from a biological entity intended to be transplanted or\n * infused\n * into another (possibly the same) biological entity.\n */\nexport interface BiologicallyDerivedProductManipulation {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for timeDateTime\n     */\n    _timeDateTime?: Element;\n    /**\n     * Description of manipulation.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Time of manipulation.\n     */\n    timeDateTime?: string;\n    /**\n     * Time of manipulation.\n     */\n    timePeriod?: Period;\n}\n\n/**\n * A material substance originating from a biological entity intended to be transplanted or\n * infused\n * into another (possibly the same) biological entity.\n */\nexport interface BiologicallyDerivedProductProcessing {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for timeDateTime\n     */\n    _timeDateTime?: Element;\n    /**\n     * Substance added during processing.\n     */\n    additive?: Reference;\n    /**\n     * Description of of processing.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Procesing code.\n     */\n    procedure?: CodeableConcept;\n    /**\n     * Time of processing.\n     */\n    timeDateTime?: string;\n    /**\n     * Time of processing.\n     */\n    timePeriod?: Period;\n}\n\n/**\n * Broad category of this product.\n */\nexport enum ProductCategory {\n    BiologicalAgent = \"biologicalAgent\",\n    Cells = \"cells\",\n    Fluid = \"fluid\",\n    Organ = \"organ\",\n    Tissue = \"tissue\",\n}\n\n/**\n * Whether the product is currently available.\n */\nexport enum BiologicallyDerivedProductStatus {\n    Available = \"available\",\n    Unavailable = \"unavailable\",\n}\n\n/**\n * A material substance originating from a biological entity intended to be transplanted or\n * infused\n * into another (possibly the same) biological entity.\n */\nexport interface BiologicallyDerivedProductStorage {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for scale\n     */\n    _scale?: Element;\n    /**\n     * Extensions for temperature\n     */\n    _temperature?: Element;\n    /**\n     * Description of storage.\n     */\n    description?: string;\n    /**\n     * Storage timeperiod.\n     */\n    duration?: Period;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Temperature scale used.\n     */\n    scale?: Scale;\n    /**\n     * Storage temperature.\n     */\n    temperature?: number;\n}\n\n/**\n * Temperature scale used.\n */\nexport enum Scale {\n    Celsius = \"celsius\",\n    Farenheit = \"farenheit\",\n    Kelvin = \"kelvin\",\n}","import {\n    Element,\n    Extension,\n    Identifier,\n    Meta,\n    Signature\n} from \"./fhir._\";\n\n\nexport interface Bundle {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for timestamp\n     */\n    _timestamp?: Element;\n    /**\n     * Extensions for total\n     */\n    _total?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * An entry in a bundle resource - will either contain a resource or information about a\n     * resource (transactions and history only).\n     */\n    entry?: BundleEntry[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A persistent identifier for the bundle that won't change as a bundle is copied from\n     * server to server.\n     */\n    identifier?: Identifier;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * A series of links that provide context to this bundle.\n     */\n    link?: BundleLink[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * This is a Bundle resource\n     */\n    resourceType?: any;\n    /**\n     * Digital Signature - base64 encoded. XML-DSig or a JWT.\n     */\n    signature?: Signature;\n    /**\n     * The date/time that the bundle was assembled - i.e. when the resources were placed in the\n     * bundle.\n     */\n    timestamp?: string;\n    /**\n     * If a set of search matches, this is the total number of entries of type 'match' across\n     * all pages in the search.  It does not include search.mode = 'include' or 'outcome'\n     * entries and it does not provide a count of the number of entries in the Bundle.\n     */\n    total?: number;\n    /**\n     * Indicates the purpose of this bundle - how it is intended to be used.\n     */\n    type?: BundleType;\n}\n\n/**\n * Indicates the results of processing the corresponding 'request' entry in the batch or\n * transaction being responded to or what the results of an operation where when returning\n * history.\n *\n * A container for a collection of resources.\n */\nexport interface BundleResponse {\n    /**\n     * Extensions for etag\n     */\n    _etag?: Element;\n    /**\n     * Extensions for lastModified\n     */\n    _lastModified?: Element;\n    /**\n     * Extensions for location\n     */\n    _location?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The Etag for the resource, if the operation for the entry produced a versioned resource\n     * (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource\n     * Contention](http.html#concurrency)).\n     */\n    etag?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The date/time that the resource was modified on the server.\n     */\n    lastModified?: string;\n    /**\n     * The location header created by processing this operation, populated if the operation\n     * returns a location.\n     */\n    location?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An OperationOutcome containing hints and warnings produced as part of processing this\n     * entry in a batch or transaction.\n     */\n    outcome?: Bundle;\n    /**\n     * The status code returned by processing this entry. The status SHALL start with a 3 digit\n     * HTTP code (e.g. 404) and may contain the standard HTTP description associated with the\n     * status code.\n     */\n    status?: string;\n}\n\n/**\n * A container for a collection of resources.\n */\nexport interface BundleEntry {\n    /**\n     * Extensions for fullUrl\n     */\n    _fullUrl?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the\n     * resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent\n     * URL consistent with the Resource.id. The fullUrl is a version independent reference to\n     * the resource. The fullUrl element SHALL have a value except that:\n     * * fullUrl can be empty on a POST (although it does not need to when specifying a\n     * temporary id for reference in the bundle)\n     * * Results from operations might involve resources that are not identified.\n     */\n    fullUrl?: string;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A series of links that provide context to this entry.\n     */\n    link?: BundleLink[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Additional information about how this entry should be processed as part of a transaction\n     * or batch.  For history, it shows how the entry was processed to create the version\n     * contained in the entry.\n     */\n    request?: BundleRequest;\n    /**\n     * The Resource for the entry. The purpose/meaning of the resource is determined by the\n     * Bundle.type.\n     */\n    resource?: Bundle;\n    /**\n     * Indicates the results of processing the corresponding 'request' entry in the batch or\n     * transaction being responded to or what the results of an operation where when returning\n     * history.\n     */\n    response?: BundleResponse;\n    /**\n     * Information about the search process that lead to the creation of this entry.\n     */\n    search?: BundleSearch;\n}\n\n/**\n * A container for a collection of resources.\n */\nexport interface BundleLink {\n    /**\n     * Extensions for relation\n     */\n    _relation?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A name which details the functional use for this link - see\n     * [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).\n     */\n    relation?: string;\n    /**\n     * The reference details for the link.\n     */\n    url?: string;\n}\n\n/**\n * Additional information about how this entry should be processed as part of a transaction\n * or batch.  For history, it shows how the entry was processed to create the version\n * contained in the entry.\n *\n * A container for a collection of resources.\n */\nexport interface BundleRequest {\n    /**\n     * Extensions for ifMatch\n     */\n    _ifMatch?: Element;\n    /**\n     * Extensions for ifModifiedSince\n     */\n    _ifModifiedSince?: Element;\n    /**\n     * Extensions for ifNoneExist\n     */\n    _ifNoneExist?: Element;\n    /**\n     * Extensions for ifNoneMatch\n     */\n    _ifNoneMatch?: Element;\n    /**\n     * Extensions for method\n     */\n    _method?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Only perform the operation if the Etag value matches. For more information, see the API\n     * section [\"Managing Resource Contention\"](http.html#concurrency).\n     */\n    ifMatch?: string;\n    /**\n     * Only perform the operation if the last updated date matches. See the API documentation\n     * for [\"Conditional Read\"](http.html#cread).\n     */\n    ifModifiedSince?: string;\n    /**\n     * Instruct the server not to perform the create if a specified resource already exists. For\n     * further information, see the API documentation for [\"Conditional\n     * Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the\n     * \"?\" (not including the \"?\").\n     */\n    ifNoneExist?: string;\n    /**\n     * If the ETag values match, return a 304 Not Modified status. See the API documentation for\n     * [\"Conditional Read\"](http.html#cread).\n     */\n    ifNoneMatch?: string;\n    /**\n     * In a transaction or batch, this is the HTTP action to be executed for this entry. In a\n     * history bundle, this indicates the HTTP action that occurred.\n     */\n    method?: Method;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The URL for this entry, relative to the root (the address to which the request is posted).\n     */\n    url?: string;\n}\n\n/**\n * In a transaction or batch, this is the HTTP action to be executed for this entry. In a\n * history bundle, this indicates the HTTP action that occurred.\n */\nexport enum Method {\n    Delete = \"DELETE\",\n    Get = \"GET\",\n    Head = \"HEAD\",\n    Patch = \"PATCH\",\n    Post = \"POST\",\n    Put = \"PUT\",\n}\n\n/**\n * Information about the search process that lead to the creation of this entry.\n *\n * A container for a collection of resources.\n */\nexport interface BundleSearch {\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Extensions for score\n     */\n    _score?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Why this entry is in the result set - whether it's included as a match or because of an\n     * _include requirement, or to convey information or warning information about the search\n     * process.\n     */\n    mode?: BundleSearchMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * When searching, the server's search ranking score for the entry.\n     */\n    score?: number;\n}\n\n/**\n * Why this entry is in the result set - whether it's included as a match or because of an\n * _include requirement, or to convey information or warning information about the search\n * process.\n */\nexport enum BundleSearchMode {\n    Include = \"include\",\n    Match = \"match\",\n    Outcome = \"outcome\",\n}\n\n/**\n * Indicates the purpose of this bundle - how it is intended to be used.\n */\nexport enum BundleType {\n    Batch = \"batch\",\n    BatchResponse = \"batch-response\",\n    Collection = \"collection\",\n    Document = \"document\",\n    History = \"history\",\n    Message = \"message\",\n    Searchset = \"searchset\",\n    Transaction = \"transaction\",\n    TransactionResponse = \"transaction-response\",\n}\n","import {\n    Element,\n    ContactDetail,\n    Extension,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext,\n    Reference,\n    Coding\n} from \"./fhir._\";\n\nexport interface CapabilityStatement {\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for fhirVersion\n     */\n    _fhirVersion?: Element;\n    /**\n     * Extensions for format\n     */\n    _format?: Element[];\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for kind\n     */\n    _kind?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for patchFormat\n     */\n    _patchFormat?: Element[];\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CapabilityStatement[];\n    /**\n     * A copyright statement relating to the capability statement and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the capability\n     * statement.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the capability statement was published. The date\n     * must change when the business version changes and it must change if the status code\n     * changes. In addition, it should change when the substantive content of the capability\n     * statement changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the capability statement from a consumer's\n     * perspective. Typically, this is used when the capability statement describes a desired\n     * rather than an actual solution, for example as a formal expression of requirements as\n     * part of an RFP.\n     */\n    description?: string;\n    /**\n     * A document definition.\n     */\n    document?: CapabilityStatementDocument[];\n    /**\n     * A Boolean value to indicate that this capability statement is authored for testing\n     * purposes (or education/evaluation/marketing) and is not intended to be used for genuine\n     * usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The version of the FHIR specification that this CapabilityStatement describes (which\n     * SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no\n     * default value.\n     */\n    fhirVersion?: CapabilityStatementFhirVersion;\n    /**\n     * A list of the formats supported by this implementation using their content types.\n     */\n    format?: string[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifies a specific implementation instance that is described by the capability\n     * statement - i.e. a particular installation, rather than the capabilities of a software\n     * program.\n     */\n    implementation?: CapabilityStatementImplementation;\n    /**\n     * A list of implementation guides that the server does (or should) support in their\n     * entirety.\n     */\n    implementationGuide?: string[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Reference to a canonical URL of another CapabilityStatement that this software adds to.\n     * The capability statement automatically includes everything in the other statement, and it\n     * is not duplicated, though the server may repeat the same resources, interactions and\n     * operations to add additional details to them.\n     */\n    imports?: string[];\n    /**\n     * Reference to a canonical URL of another CapabilityStatement that this software\n     * implements. This capability statement is a published API description that corresponds to\n     * a business service. The server may actually implement a subset of the capability\n     * statement it claims to implement, so the capability statement must specify the full\n     * capability details.\n     */\n    instantiates?: string[];\n    /**\n     * A legal or geographic region in which the capability statement is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The way that this statement is intended to be used, to describe an actual running\n     * instance of software, a particular product (kind, not instance of software) or a class of\n     * implementation (e.g. a desired purchase).\n     */\n    kind?: Kind;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * A description of the messaging capabilities of the solution.\n     */\n    messaging?: CapabilityStatementMessaging[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the capability statement. This name should be usable\n     * as an identifier for the module by machine processing applications such as code\n     * generation.\n     */\n    name?: string;\n    /**\n     * A list of the patch formats supported by this implementation using their content types.\n     */\n    patchFormat?: string[];\n    /**\n     * The name of the organization or individual that published the capability statement.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this capability statement is needed and why it has been designed as it\n     * has.\n     */\n    purpose?: string;\n    /**\n     * This is a CapabilityStatement resource\n     */\n    resourceType?: any;\n    /**\n     * A definition of the restful capabilities of the solution, if any.\n     */\n    rest?: CapabilityStatementRest[];\n    /**\n     * Software that is covered by this capability statement.  It is used when the capability\n     * statement describes the capabilities of a particular software version, independent of an\n     * installation.\n     */\n    software?: CapabilityStatementSoftware;\n    /**\n     * The status of this capability statement. Enables tracking the life-cycle of the content.\n     */\n    status?: CapabilityStatementStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the capability statement.\n     */\n    title?: string;\n    /**\n     * An absolute URI that is used to identify this capability statement when it is referenced\n     * in a specification, model, design or an instance; also called its canonical identifier.\n     * This SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this capability statement is (or will be) published. This URL\n     * can be the target of a canonical reference. It SHALL remain the same when the capability\n     * statement is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate capability statement instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the capability statement when it\n     * is referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the capability statement author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementDocument {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * A description of how the application supports or uses the specified document profile.\n     * For example, when documents are created, what action is taken with consumed documents,\n     * etc.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Mode of this document declaration - whether an application is a producer or consumer.\n     */\n    mode?: CapabilityStatementDocumentMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A profile on the document Bundle that constrains which resources are present, and their\n     * contents.\n     */\n    profile?: string;\n}\n\n/**\n * Mode of this document declaration - whether an application is a producer or consumer.\n */\nexport enum CapabilityStatementDocumentMode {\n    Consumer = \"consumer\",\n    Producer = \"producer\",\n}\n\n/**\n * The version of the FHIR specification that this CapabilityStatement describes (which\n * SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no\n * default value.\n */\nexport enum CapabilityStatementFhirVersion {\n    The001 = \"0.01\",\n    The005 = \"0.05\",\n    The006 = \"0.06\",\n    The0080 = \"0.0.80\",\n    The0081 = \"0.0.81\",\n    The0082 = \"0.0.82\",\n    The011 = \"0.11\",\n    The040 = \"0.4.0\",\n    The050 = \"0.5.0\",\n    The100 = \"1.0.0\",\n    The101 = \"1.0.1\",\n    The102 = \"1.0.2\",\n    The110 = \"1.1.0\",\n    The140 = \"1.4.0\",\n    The160 = \"1.6.0\",\n    The180 = \"1.8.0\",\n    The300 = \"3.0.0\",\n    The301 = \"3.0.1\",\n    The330 = \"3.3.0\",\n    The350 = \"3.5.0\",\n    The400 = \"4.0.0\",\n}\n\n/**\n * Identifies a specific implementation instance that is described by the capability\n * statement - i.e. a particular installation, rather than the capabilities of a software\n * program.\n *\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementImplementation {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * The organization responsible for the management of the instance and oversight of the data\n     * on the server at the specified URL.\n     */\n    custodian?: Reference;\n    /**\n     * Information about the specific installation that this capability statement relates to.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An absolute base URL for the implementation.  This forms the base for REST interfaces as\n     * well as the mailbox and document interfaces.\n     */\n    url?: string;\n}\n\n/**\n * The way that this statement is intended to be used, to describe an actual running\n * instance of software, a particular product (kind, not instance of software) or a class of\n * implementation (e.g. a desired purchase).\n */\nexport enum Kind {\n    Capability = \"capability\",\n    Instance = \"instance\",\n    Requirements = \"requirements\",\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementMessaging {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for reliableCache\n     */\n    _reliableCache?: Element;\n    /**\n     * Documentation about the system's messaging capabilities for this endpoint not otherwise\n     * documented by the capability statement.  For example, the process for becoming an\n     * authorized messaging exchange partner.\n     */\n    documentation?: string;\n    /**\n     * An endpoint (network accessible address) to which messages and/or replies are to be sent.\n     */\n    endpoint?: CapabilityStatementEndpoint[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long\n     * the cache length on the receiver should be (if a sender).\n     */\n    reliableCache?: number;\n    /**\n     * References to message definitions for messages this system can send or receive.\n     */\n    supportedMessage?: CapabilityStatementSupportedMessage[];\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementEndpoint {\n    /**\n     * Extensions for address\n     */\n    _address?: Element;\n    /**\n     * The network address of the endpoint. For solutions that do not use network addresses for\n     * routing, it can be just an identifier.\n     */\n    address?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A list of the messaging transport protocol(s) identifiers, supported by this endpoint.\n     */\n    protocol?: Coding;\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementSupportedMessage {\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Points to a message definition that identifies the messaging event, message structure,\n     * allowed responses, etc.\n     */\n    definition?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The mode of this event declaration - whether application is sender or receiver.\n     */\n    mode?: CapabilityStatementSupportedMessageMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The mode of this event declaration - whether application is sender or receiver.\n */\nexport enum CapabilityStatementSupportedMessageMode {\n    Receiver = \"receiver\",\n    Sender = \"sender\",\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementRest {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * An absolute URI which is a reference to the definition of a compartment that the system\n     * supports. The reference is to a CompartmentDefinition resource by its canonical URL .\n     */\n    compartment?: string[];\n    /**\n     * Information about the system's restful capabilities that apply across all applications,\n     * such as security.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A specification of restful operations supported by the system.\n     */\n    interaction?: CapabilityStatementInteraction1[];\n    /**\n     * Identifies whether this portion of the statement is describing the ability to initiate or\n     * receive restful operations.\n     */\n    mode?: CapabilityStatementRestMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Definition of an operation or a named query together with its parameters and their\n     * meaning and type.\n     */\n    operation?: CapabilityStatementOperation[];\n    /**\n     * A specification of the restful capabilities of the solution for a specific resource type.\n     */\n    resource?: CapabilityStatementResource[];\n    /**\n     * Search parameters that are supported for searching all resources for implementations to\n     * support and/or make use of - either references to ones defined in the specification, or\n     * additional ones defined for/by the implementation.\n     */\n    searchParam?: CapabilityStatementSearchParam[];\n    /**\n     * Information about security implementation from an interface perspective - what a client\n     * needs to know.\n     */\n    security?: CapabilityStatementSecurity;\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementInteraction1 {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * A coded identifier of the operation, supported by the system.\n     */\n    code?: CapabilityStatementInteraction1Code;\n    /**\n     * Guidance specific to the implementation of this operation, such as limitations on the\n     * kind of transactions allowed, or information about system wide search is implemented.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * A coded identifier of the operation, supported by the system.\n */\nexport enum CapabilityStatementInteraction1Code {\n    Batch = \"batch\",\n    HistorySystem = \"history-system\",\n    SearchSystem = \"search-system\",\n    Transaction = \"transaction\",\n}\n\n/**\n * Identifies whether this portion of the statement is describing the ability to initiate or\n * receive restful operations.\n */\nexport enum CapabilityStatementRestMode {\n    Client = \"client\",\n    Server = \"server\",\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementOperation {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Where the formal definition can be found. If a server references the base definition of\n     * an Operation (i.e. from the specification itself such as\n     * ```http://hl7.org/fhir/OperationDefinition/ValueSet-expand```), that means it supports\n     * the full capabilities of the operation - e.g. both GET and POST invocation.  If it only\n     * supports a subset, it must define its own custom [[[OperationDefinition]]] with a 'base'\n     * of the original OperationDefinition.  The custom definition would describe the specific\n     * subset of functionality supported.\n     */\n    definition?: string;\n    /**\n     * Documentation that describes anything special about the operation behavior, possibly\n     * detailing different behavior for system, type and instance-level invocation of the\n     * operation.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of the operation or query. For an operation, this is the name  prefixed with $\n     * and used in the URL. For a query, this is the name used in the _query parameter when the\n     * query is called.\n     */\n    name?: string;\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementResource {\n    /**\n     * Extensions for conditionalCreate\n     */\n    _conditionalCreate?: Element;\n    /**\n     * Extensions for conditionalDelete\n     */\n    _conditionalDelete?: Element;\n    /**\n     * Extensions for conditionalRead\n     */\n    _conditionalRead?: Element;\n    /**\n     * Extensions for conditionalUpdate\n     */\n    _conditionalUpdate?: Element;\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for readHistory\n     */\n    _readHistory?: Element;\n    /**\n     * Extensions for referencePolicy\n     */\n    _referencePolicy?: Element[];\n    /**\n     * Extensions for searchInclude\n     */\n    _searchInclude?: Element[];\n    /**\n     * Extensions for searchRevInclude\n     */\n    _searchRevInclude?: Element[];\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for updateCreate\n     */\n    _updateCreate?: Element;\n    /**\n     * Extensions for versioning\n     */\n    _versioning?: Element;\n    /**\n     * A flag that indicates that the server supports conditional create.\n     */\n    conditionalCreate?: boolean;\n    /**\n     * A code that indicates how the server supports conditional delete.\n     */\n    conditionalDelete?: ConditionalDelete;\n    /**\n     * A code that indicates how the server supports conditional read.\n     */\n    conditionalRead?: ConditionalRead;\n    /**\n     * A flag that indicates that the server supports conditional update.\n     */\n    conditionalUpdate?: boolean;\n    /**\n     * Additional information about the resource type used by the system.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Identifies a restful operation supported by the solution.\n     */\n    interaction?: CapabilityStatementInteraction[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Definition of an operation or a named query together with its parameters and their\n     * meaning and type. Consult the definition of the operation for details about how to invoke\n     * the operation, and the parameters.\n     */\n    operation?: CapabilityStatementOperation[];\n    /**\n     * A specification of the profile that describes the solution's overall support for the\n     * resource, including any constraints on cardinality, bindings, lengths or other\n     * limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).\n     */\n    profile?: string;\n    /**\n     * A flag for whether the server is able to return past versions as part of the vRead\n     * operation.\n     */\n    readHistory?: boolean;\n    /**\n     * A set of flags that defines how references are supported.\n     */\n    referencePolicy?: ReferencePolicy[];\n    /**\n     * A list of _include values supported by the server.\n     */\n    searchInclude?: string[];\n    /**\n     * Search parameters for implementations to support and/or make use of - either references\n     * to ones defined in the specification, or additional ones defined for/by the\n     * implementation.\n     */\n    searchParam?: CapabilityStatementSearchParam[];\n    /**\n     * A list of _revinclude (reverse include) values supported by the server.\n     */\n    searchRevInclude?: string[];\n    /**\n     * A list of profiles that represent different use cases supported by the system. For a\n     * server, \"supported by the system\" means the system hosts/produces a set of resources that\n     * are conformant to a particular profile, and allows clients that use its services to\n     * search using this profile and to find appropriate data. For a client, it means the system\n     * will search by this profile and process data according to the guidance implicit in the\n     * profile. See further discussion in [Using Profiles](profiling.html#profile-uses).\n     */\n    supportedProfile?: string[];\n    /**\n     * A type of resource exposed via the restful interface.\n     */\n    type?: string;\n    /**\n     * A flag to indicate that the server allows or needs to allow the client to create new\n     * identities on the server (that is, the client PUTs to a location where there is no\n     * existing resource). Allowing this operation means that the server allows the client to\n     * create new identities on the server.\n     */\n    updateCreate?: boolean;\n    /**\n     * This field is set to no-version to specify that the system does not support (server) or\n     * use (client) versioning for this resource type. If this has some other value, the server\n     * must at least correctly track and populate the versionId meta-property on resources. If\n     * the value is 'versioned-update', then the server supports all the versioning features,\n     * including using e-tags for version integrity in the API.\n     */\n    versioning?: Versioning;\n}\n\n/**\n * A code that indicates how the server supports conditional delete.\n */\nexport enum ConditionalDelete {\n    Multiple = \"multiple\",\n    NotSupported = \"not-supported\",\n    Single = \"single\",\n}\n\n/**\n * A code that indicates how the server supports conditional read.\n */\nexport enum ConditionalRead {\n    FullSupport = \"full-support\",\n    ModifiedSince = \"modified-since\",\n    NotMatch = \"not-match\",\n    NotSupported = \"not-supported\",\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementInteraction {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Coded identifier of the operation, supported by the system resource.\n     */\n    code?: CapabilityStatementInteractionCode;\n    /**\n     * Guidance specific to the implementation of this operation, such as 'delete is a logical\n     * delete' or 'updates are only allowed with version id' or 'creates permitted from\n     * pre-authorized certificates only'.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Coded identifier of the operation, supported by the system resource.\n */\nexport enum CapabilityStatementInteractionCode {\n    Create = \"create\",\n    Delete = \"delete\",\n    HistoryInstance = \"history-instance\",\n    HistoryType = \"history-type\",\n    Patch = \"patch\",\n    Read = \"read\",\n    SearchType = \"search-type\",\n    Update = \"update\",\n    Vread = \"vread\",\n}\n\nexport enum ReferencePolicy {\n    Enforced = \"enforced\",\n    Literal = \"literal\",\n    Local = \"local\",\n    Logical = \"logical\",\n    Resolves = \"resolves\",\n}\n\n/**\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementSearchParam {\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * An absolute URI that is a formal reference to where this parameter was first defined, so\n     * that a client can be confident of the meaning of the search parameter (a reference to\n     * [[[SearchParameter.url]]]). This element SHALL be populated if the search parameter\n     * refers to a SearchParameter defined by the FHIR core specification or externally defined\n     * IGs.\n     */\n    definition?: string;\n    /**\n     * This allows documentation of any distinct behaviors about how the search parameter is\n     * used.  For example, text matching algorithms.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of the search parameter used in the interface.\n     */\n    name?: string;\n    /**\n     * The type of value a search parameter refers to, and how the content is interpreted.\n     */\n    type?: CapabilityStatementSearchParamType;\n}\n\n/**\n * The type of value a search parameter refers to, and how the content is interpreted.\n */\nexport enum CapabilityStatementSearchParamType {\n    Composite = \"composite\",\n    Date = \"date\",\n    Number = \"number\",\n    Quantity = \"quantity\",\n    Reference = \"reference\",\n    Special = \"special\",\n    String = \"string\",\n    Token = \"token\",\n    Uri = \"uri\",\n}\n\n/**\n * This field is set to no-version to specify that the system does not support (server) or\n * use (client) versioning for this resource type. If this has some other value, the server\n * must at least correctly track and populate the versionId meta-property on resources. If\n * the value is 'versioned-update', then the server supports all the versioning features,\n * including using e-tags for version integrity in the API.\n */\nexport enum Versioning {\n    NoVersion = \"no-version\",\n    Versioned = \"versioned\",\n    VersionedUpdate = \"versioned-update\",\n}\n\n/**\n * Information about security implementation from an interface perspective - what a client\n * needs to know.\n *\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementSecurity {\n    /**\n     * Extensions for cors\n     */\n    _cors?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Server adds CORS headers when responding to requests - this enables Javascript\n     * applications to use the server.\n     */\n    cors?: boolean;\n    /**\n     * General description of how security works.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Types of security services that are supported/required by the system.\n     */\n    service?: CodeableConcept[];\n}\n\n/**\n * Software that is covered by this capability statement.  It is used when the capability\n * statement describes the capabilities of a particular software version, independent of an\n * installation.\n *\n * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a\n * particular version of FHIR that may be used as a statement of actual server functionality\n * or a statement of required or desired server implementation.\n */\nexport interface CapabilityStatementSoftware {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for releaseDate\n     */\n    _releaseDate?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Name the software is known by.\n     */\n    name?: string;\n    /**\n     * Date this version of the software was released.\n     */\n    releaseDate?: string;\n    /**\n     * The version identifier for the software covered by this statement.\n     */\n    version?: string;\n}\n\n/**\n * The status of this capability statement. Enables tracking the life-cycle of the content.\n */\nexport enum CapabilityStatementStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}\n\n","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Period,\n    Narrative,\n    Quantity,\n    Timing\n} from \"./fhir._\";\n\nexport interface CarePlan {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for instantiatesUri\n     */\n    _instantiatesUri?: Element[];\n    /**\n     * Extensions for intent\n     */\n    _intent?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Identifies a planned action to occur as part of the plan.  For example, a medication to\n     * be used, lab tests to perform, self-monitoring, education, etc.\n     */\n    activity?: CarePlanActivity[];\n    /**\n     * Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or\n     * mitigation are handled by this plan.\n     */\n    addresses?: Reference[];\n    /**\n     * When populated, the author is responsible for the care plan.  The care plan is attributed\n     * to the author.\n     */\n    author?: Reference;\n    /**\n     * A care plan that is fulfilled in whole or in part by this care plan.\n     */\n    basedOn?: Reference[];\n    /**\n     * Identifies all people and organizations who are expected to be involved in the care\n     * envisioned by this plan.\n     */\n    careTeam?: Reference[];\n    /**\n     * Identifies what \"kind\" of plan this is to support differentiation between multiple\n     * co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\",\n     * \"wellness plan\", etc.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CarePlan[];\n    /**\n     * Identifies the individual(s) or organization who provided the contents of the care plan.\n     */\n    contributor?: Reference[];\n    /**\n     * Represents when this particular CarePlan record was created in the system, which is often\n     * a system-generated date.\n     */\n    created?: string;\n    /**\n     * A description of the scope and nature of the plan.\n     */\n    description?: string;\n    /**\n     * The Encounter during which this CarePlan was created or to which the creation of this\n     * record is tightly associated.\n     */\n    encounter?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Describes the intended objective(s) of carrying out the care plan.\n     */\n    goal?: Reference[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this care plan by the performer or other systems which\n     * remain constant as the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition\n     * that is adhered to in whole or in part by this CarePlan.\n     */\n    instantiatesCanonical?: string[];\n    /**\n     * The URL pointing to an externally maintained protocol, guideline, questionnaire or other\n     * definition that is adhered to in whole or in part by this CarePlan.\n     */\n    instantiatesUri?: string[];\n    /**\n     * Indicates the level of authority/intentionality associated with the care plan and where\n     * the care plan fits into the workflow chain.\n     */\n    intent?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * General notes about the care plan not covered elsewhere.\n     */\n    note?: Annotation[];\n    /**\n     * A larger care plan of which this particular care plan is a component or step.\n     */\n    partOf?: Reference[];\n    /**\n     * Indicates when the plan did (or is intended to) come into effect and end.\n     */\n    period?: Period;\n    /**\n     * Completed or terminated care plan whose function is taken by this new care plan.\n     */\n    replaces?: Reference[];\n    /**\n     * This is a CarePlan resource\n     */\n    resourceType?: any;\n    /**\n     * Indicates whether the plan is currently being acted upon, represents future intentions or\n     * is now a historical record.\n     */\n    status?: string;\n    /**\n     * Identifies the patient or group whose intended care is described by the plan.\n     */\n    subject?: Reference;\n    /**\n     * Identifies portions of the patient's record that specifically influenced the formation of\n     * the plan.  These might include comorbidities, recent procedures, limitations, recent\n     * assessments, etc.\n     */\n    supportingInfo?: Reference[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Human-friendly name for the care plan.\n     */\n    title?: string;\n}\n\n/**\n * Describes the intention of how one or more practitioners intend to deliver care for a\n * particular patient, group or community for a period of time, possibly limited to care for\n * a specific condition or set of conditions.\n */\nexport interface CarePlanActivity {\n    /**\n     * A simple summary of a planned activity suitable for a general care plan system (e.g. form\n     * driven) that doesn't know about specific resources such as procedure etc.\n     */\n    detail?: CarePlanDetail;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Identifies the outcome at the point when the status of the activity is assessed.  For\n     * example, the outcome of an education activity could be patient understands (or not).\n     */\n    outcomeCodeableConcept?: CodeableConcept[];\n    /**\n     * Details of the outcome or action resulting from the activity.  The reference to an\n     * \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of\n     * the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR\n     * using the CarePlan.activity.reference (a reference to a “request” resource).\n     */\n    outcomeReference?: Reference[];\n    /**\n     * Notes about the adherence/status/progress of the activity.\n     */\n    progress?: Annotation[];\n    /**\n     * The details of the proposed activity represented in a specific resource.\n     */\n    reference?: Reference;\n}\n\n/**\n * A simple summary of a planned activity suitable for a general care plan system (e.g. form\n * driven) that doesn't know about specific resources such as procedure etc.\n *\n * Describes the intention of how one or more practitioners intend to deliver care for a\n * particular patient, group or community for a period of time, possibly limited to care for\n * a specific condition or set of conditions.\n */\nexport interface CarePlanDetail {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for doNotPerform\n     */\n    _doNotPerform?: Element;\n    /**\n     * Extensions for instantiatesUri\n     */\n    _instantiatesUri?: Element[];\n    /**\n     * Extensions for kind\n     */\n    _kind?: Element;\n    /**\n     * Extensions for scheduledString\n     */\n    _scheduledString?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Detailed description of the type of planned activity; e.g. what lab test, what procedure,\n     * what kind of encounter.\n     */\n    code?: CodeableConcept;\n    /**\n     * Identifies the quantity expected to be consumed in a given day.\n     */\n    dailyAmount?: Quantity;\n    /**\n     * This provides a textual description of constraints on the intended activity occurrence,\n     * including relation to other activities.  It may also include objectives, pre-conditions\n     * and end-conditions.  Finally, it may convey specifics about the activity such as body\n     * site, method, route, etc.\n     */\n    description?: string;\n    /**\n     * If true, indicates that the described activity is one that must NOT be engaged in when\n     * following the plan.  If false, or missing, indicates that the described activity is one\n     * that should be engaged in when following the plan.\n     */\n    doNotPerform?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Internal reference that identifies the goals that this activity is intended to contribute\n     * towards meeting.\n     */\n    goal?: Reference[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition\n     * that is adhered to in whole or in part by this CarePlan activity.\n     */\n    instantiatesCanonical?: string[];\n    /**\n     * The URL pointing to an externally maintained protocol, guideline, questionnaire or other\n     * definition that is adhered to in whole or in part by this CarePlan activity.\n     */\n    instantiatesUri?: string[];\n    /**\n     * A description of the kind of resource the in-line definition of a care plan activity is\n     * representing.  The CarePlan.activity.detail is an in-line definition when a resource is\n     * not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a\n     * ServiceRequest, or a CommunicationRequest.\n     */\n    kind?: string;\n    /**\n     * Identifies the facility where the activity will occur; e.g. home, hospital, specific\n     * clinic, etc.\n     */\n    location?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Identifies who's expected to be involved in the activity.\n     */\n    performer?: Reference[];\n    /**\n     * Identifies the food, drug or other product to be consumed or supplied in the activity.\n     */\n    productCodeableConcept?: CodeableConcept;\n    /**\n     * Identifies the food, drug or other product to be consumed or supplied in the activity.\n     */\n    productReference?: Reference;\n    /**\n     * Identifies the quantity expected to be supplied, administered or consumed by the subject.\n     */\n    quantity?: Quantity;\n    /**\n     * Provides the rationale that drove the inclusion of this particular activity as part of\n     * the plan or the reason why the activity was prohibited.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Indicates another resource, such as the health condition(s), whose existence justifies\n     * this request and drove the inclusion of this particular activity as part of the plan.\n     */\n    reasonReference?: Reference[];\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    scheduledPeriod?: Period;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    scheduledString?: string;\n    /**\n     * The period, timing or frequency upon which the described activity is to occur.\n     */\n    scheduledTiming?: Timing;\n    /**\n     * Identifies what progress is being made for the specific activity.\n     */\n    status?: CarePlanDetailStatus;\n    /**\n     * Provides reason why the activity isn't yet started, is on hold, was cancelled, etc.\n     */\n    statusReason?: CodeableConcept;\n}\n\n/**\n * Identifies what progress is being made for the specific activity.\n */\nexport enum CarePlanDetailStatus {\n    Cancelled = \"cancelled\",\n    Completed = \"completed\",\n    EnteredInError = \"entered-in-error\",\n    InProgress = \"in-progress\",\n    NotStarted = \"not-started\",\n    OnHold = \"on-hold\",\n    Scheduled = \"scheduled\",\n    Stopped = \"stopped\",\n    Unknown = \"unknown\",\n}\n","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Period,\n    ContactPoint,\n    Narrative\n} from \"./fhir._\";\n\nexport interface CareTeam {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Identifies what kind of team.  This is to support differentiation between multiple\n     * co-existing teams, such as care plan team, episode of care team, longitudinal care team.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CareTeam[];\n    /**\n     * The Encounter during which this CareTeam was created or to which the creation of this\n     * record is tightly associated.\n     */\n    encounter?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this care team by the performer or other systems which\n     * remain constant as the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The organization responsible for the care team.\n     */\n    managingOrganization?: Reference[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A label for human use intended to distinguish like teams.  E.g. the \"red\" vs. \"green\"\n     * trauma teams.\n     */\n    name?: string;\n    /**\n     * Comments made about the CareTeam.\n     */\n    note?: Annotation[];\n    /**\n     * Identifies all people and organizations who are expected to be involved in the care team.\n     */\n    participant?: CareTeamParticipant[];\n    /**\n     * Indicates when the team did (or is intended to) come into effect and end.\n     */\n    period?: Period;\n    /**\n     * Describes why the care team exists.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Condition(s) that this care team addresses.\n     */\n    reasonReference?: Reference[];\n    /**\n     * This is a CareTeam resource\n     */\n    resourceType?: any;\n    /**\n     * Indicates the current state of the care team.\n     */\n    status?: CareTeamStatus;\n    /**\n     * Identifies the patient or group whose intended care is handled by the team.\n     */\n    subject?: Reference;\n    /**\n     * A central contact detail for the care team (that applies to all members).\n     */\n    telecom?: ContactPoint[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The Care Team includes all the people and organizations who plan to participate in the\n * coordination and delivery of care for a patient.\n */\nexport interface CareTeamParticipant {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The specific person or organization who is participating/expected to participate in the\n     * care team.\n     */\n    member?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The organization of the practitioner.\n     */\n    onBehalfOf?: Reference;\n    /**\n     * Indicates when the specific member or organization did (or is intended to) come into\n     * effect and end.\n     */\n    period?: Period;\n    /**\n     * Indicates specific responsibility of an individual within the care team, such as \"Primary\n     * care physician\", \"Trained social worker counselor\", \"Caregiver\", etc.\n     */\n    role?: CodeableConcept[];\n}\n\n/**\n * Indicates the current state of the care team.\n */\nexport enum CareTeamStatus {\n    Active = \"active\",\n    EnteredInError = \"entered-in-error\",\n    Inactive = \"inactive\",\n    Proposed = \"proposed\",\n    Suspended = \"suspended\",\n}","import {\n    Element,\n    CodeableConcept,\n    Identifier,\n    Extension,\n    Meta,\n    Reference,\n    Narrative,\n    Period\n} from \"./fhir._\";\n\nexport interface CatalogEntry {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastUpdated\n     */\n    _lastUpdated?: Element;\n    /**\n     * Extensions for orderable\n     */\n    _orderable?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for validTo\n     */\n    _validTo?: Element;\n    /**\n     * Used for examplefor Out of Formulary, or any specifics.\n     */\n    additionalCharacteristic?: CodeableConcept[];\n    /**\n     * User for example for ATC classification, or.\n     */\n    additionalClassification?: CodeableConcept[];\n    /**\n     * Used in supporting related concepts, e.g. NDC to RxNorm.\n     */\n    additionalIdentifier?: Identifier[];\n    /**\n     * Classes of devices, or ATC for medication.\n     */\n    classification?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CatalogEntry[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Used in supporting different identifiers for the same product, e.g. manufacturer code and\n     * retailer code.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Typically date of issue is different from the beginning of the validity. This can be used\n     * to see when an item was last updated.\n     */\n    lastUpdated?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Whether the entry represents an orderable item.\n     */\n    orderable?: boolean;\n    /**\n     * The item in a catalog or definition.\n     */\n    referencedItem?: Reference;\n    /**\n     * Used for example, to point to a substance, or to a device used to administer a medication.\n     */\n    relatedEntry?: CatalogEntryRelatedEntry[];\n    /**\n     * This is a CatalogEntry resource\n     */\n    resourceType?: any;\n    /**\n     * Used to support catalog exchange even for unsupported products, e.g. getting list of\n     * medications even if not prescribable.\n     */\n    status?: CatalogEntryStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The type of item - medication, device, service, protocol or other.\n     */\n    type?: CodeableConcept;\n    /**\n     * The time period in which this catalog entry is expected to be active.\n     */\n    validityPeriod?: Period;\n    /**\n     * The date until which this catalog entry is expected to be active.\n     */\n    validTo?: string;\n}\n\n/**\n * Catalog entries are wrappers that contextualize items included in a catalog.\n */\nexport interface CatalogEntryRelatedEntry {\n    /**\n     * Extensions for relationtype\n     */\n    _relationtype?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The reference to the related item.\n     */\n    item?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type of relation to the related item: child, parent, packageContent,\n     * containerPackage, usedIn, uses, requires, etc.\n     */\n    relationtype?: Relationtype;\n}\n\n/**\n * The type of relation to the related item: child, parent, packageContent,\n * containerPackage, usedIn, uses, requires, etc.\n */\nexport enum Relationtype {\n    IsReplacedBy = \"is-replaced-by\",\n    Triggers = \"triggers\",\n}\n\n/**\n * Used to support catalog exchange even for unsupported products, e.g. getting list of\n * medications even if not prescribable.\n */\nexport enum CatalogEntryStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Period,\n    Timing,\n    Money,\n    Quantity,\n    Narrative\n} from \"./fhir._\";\n\nexport interface ChargeItem {\n    /**\n     * Extensions for definitionUri\n     */\n    _definitionUri?: Element[];\n    /**\n     * Extensions for enteredDate\n     */\n    _enteredDate?: Element;\n    /**\n     * Extensions for factorOverride\n     */\n    _factorOverride?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for occurrenceDateTime\n     */\n    _occurrenceDateTime?: Element;\n    /**\n     * Extensions for overrideReason\n     */\n    _overrideReason?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Account into which this ChargeItems belongs.\n     */\n    account?: Reference[];\n    /**\n     * The anatomical location where the related service has been applied.\n     */\n    bodysite?: CodeableConcept[];\n    /**\n     * A code that identifies the charge, like a billing code.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ChargeItem[];\n    /**\n     * The encounter or episode of care that establishes the context for this event.\n     */\n    context?: Reference;\n    /**\n     * The financial cost center permits the tracking of charge attribution.\n     */\n    costCenter?: Reference;\n    /**\n     * References the source of pricing information, rules of application for the code this\n     * ChargeItem uses.\n     */\n    definitionCanonical?: string[];\n    /**\n     * References the (external) source of pricing information, rules of application for the\n     * code this ChargeItem uses.\n     */\n    definitionUri?: string[];\n    /**\n     * Date the charge item was entered.\n     */\n    enteredDate?: string;\n    /**\n     * The device, practitioner, etc. who entered the charge item.\n     */\n    enterer?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Factor overriding the factor determined by the rules associated with the code.\n     */\n    factorOverride?: number;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifiers assigned to this event performer or other systems.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Comments made about the event by the performer, subject or other participants.\n     */\n    note?: Annotation[];\n    /**\n     * Date/time(s) or duration when the charged service was applied.\n     */\n    occurrenceDateTime?: string;\n    /**\n     * Date/time(s) or duration when the charged service was applied.\n     */\n    occurrencePeriod?: Period;\n    /**\n     * Date/time(s) or duration when the charged service was applied.\n     */\n    occurrenceTiming?: Timing;\n    /**\n     * If the list price or the rule-based factor associated with the code is overridden, this\n     * attribute can capture a text to indicate the  reason for this action.\n     */\n    overrideReason?: string;\n    /**\n     * ChargeItems can be grouped to larger ChargeItems covering the whole set.\n     */\n    partOf?: Reference[];\n    /**\n     * Indicates who or what performed or participated in the charged service.\n     */\n    performer?: ChargeItemPerformer[];\n    /**\n     * The organization requesting the service.\n     */\n    performingOrganization?: Reference;\n    /**\n     * Total price of the charge overriding the list price associated with the code.\n     */\n    priceOverride?: Money;\n    /**\n     * Identifies the device, food, drug or other product being charged either by type code or\n     * reference to an instance.\n     */\n    productCodeableConcept?: CodeableConcept;\n    /**\n     * Identifies the device, food, drug or other product being charged either by type code or\n     * reference to an instance.\n     */\n    productReference?: Reference;\n    /**\n     * Quantity of which the charge item has been serviced.\n     */\n    quantity?: Quantity;\n    /**\n     * Describes why the event occurred in coded or textual form.\n     */\n    reason?: CodeableConcept[];\n    /**\n     * The organization performing the service.\n     */\n    requestingOrganization?: Reference;\n    /**\n     * This is a ChargeItem resource\n     */\n    resourceType?: any;\n    /**\n     * Indicated the rendered service that caused this charge.\n     */\n    service?: Reference[];\n    /**\n     * The current state of the ChargeItem.\n     */\n    status?: ChargeItemStatus;\n    /**\n     * The individual or set of individuals the action is being or was performed on.\n     */\n    subject?: Reference;\n    /**\n     * Further information supporting this charge.\n     */\n    supportingInformation?: Reference[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n\n/**\n * The resource ChargeItem describes the provision of healthcare provider products for a\n * certain patient, therefore referring not only to the product, but containing in addition\n * details of the provision, like date, time, amounts and participating organizations and\n * persons. Main Usage of the ChargeItem is to enable the billing process and internal cost\n * allocation.\n */\nexport interface ChargeItemPerformer {\n    /**\n     * The device, practitioner, etc. who performed or participated in the service.\n     */\n    actor?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Describes the type of performance or participation(e.g. primary surgeon,\n     * anesthesiologiest, etc.).\n     */\n    function?: CodeableConcept;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The current state of the ChargeItem.\n */\nexport enum ChargeItemStatus {\n    Aborted = \"aborted\",\n    Billable = \"billable\",\n    Billed = \"billed\",\n    EnteredInError = \"entered-in-error\",\n    NotBillable = \"not-billable\",\n    Planned = \"planned\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    CodeableConcept,\n    ContactDetail,\n    Period,\n    Extension,\n    Identifier,\n    Reference,\n    Meta,\n    Narrative,\n    UsageContext,\n    Money\n} from \"./fhir._\";\n\nexport interface ChargeItemDefinition {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for derivedFromUri\n     */\n    _derivedFromUri?: Element[];\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Expressions that describe applicability criteria for the billing code.\n     */\n    applicability?: ChargeItemDefinitionApplicability[];\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * The defined billing details in this resource pertain to the given billing code.\n     */\n    code?: CodeableConcept;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ChargeItemDefinition[];\n    /**\n     * A copyright statement relating to the charge item definition and/or its contents.\n     * Copyright statements are generally legal restrictions on the use and publishing of the\n     * charge item definition.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the charge item definition was published. The date\n     * must change when the business version changes and it must change if the status code\n     * changes. In addition, it should change when the substantive content of the charge item\n     * definition changes.\n     */\n    date?: string;\n    /**\n     * The URL pointing to an externally-defined charge item definition that is adhered to in\n     * whole or in part by this definition.\n     */\n    derivedFromUri?: string[];\n    /**\n     * A free text natural language description of the charge item definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * The period during which the charge item definition content was or is planned to be in\n     * active use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * A Boolean value to indicate that this charge item definition is authored for testing\n     * purposes (or education/evaluation/marketing) and is not intended to be used for genuine\n     * usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this charge item definition when it is\n     * represented in other formats, or referenced in a specification, model, design or an\n     * instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The defined billing details in this resource pertain to the given product instance(s).\n     */\n    instance?: Reference[];\n    /**\n     * A legal or geographic region in which the charge item definition is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A larger definition of which this particular definition is a component or step.\n     */\n    partOf?: string[];\n    /**\n     * Group of properties which are applicable under the same conditions. If no applicability\n     * rules are established for the group, then all properties always apply.\n     */\n    propertyGroup?: ChargeItemDefinitionPropertyGroup[];\n    /**\n     * The name of the organization or individual that published the charge item definition.\n     */\n    publisher?: string;\n    /**\n     * As new versions of a protocol or guideline are defined, allows identification of what\n     * versions are replaced by a new instance.\n     */\n    replaces?: string[];\n    /**\n     * This is a ChargeItemDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * The current state of the ChargeItemDefinition.\n     */\n    status?: ChargeItemDefinitionStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the charge item definition.\n     */\n    title?: string;\n    /**\n     * An absolute URI that is used to identify this charge item definition when it is\n     * referenced in a specification, model, design or an instance; also called its canonical\n     * identifier. This SHOULD be globally unique and SHOULD be a literal address at which at\n     * which an authoritative instance of this charge item definition is (or will be) published.\n     * This URL can be the target of a canonical reference. It SHALL remain the same when the\n     * charge item definition is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate charge item definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the charge item definition when\n     * it is referenced in a specification, model, design or instance. This is an arbitrary\n     * value managed by the charge item definition author and is not expected to be globally\n     * unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not\n     * available. There is also no expectation that versions can be placed in a lexicographical\n     * sequence. To provide a version consistent with the Decision Support Service\n     * specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on\n     * versioning knowledge assets, refer to the Decision Support Service specification. Note\n     * that a version is required for non-experimental active assets.\n     */\n    version?: string;\n}\n\n/**\n * The ChargeItemDefinition resource provides the properties that apply to the (billing)\n * codes necessary to calculate costs and prices. The properties may differ largely\n * depending on type and realm, therefore this resource gives only a rough structure and\n * requires profiling for each type of billing code system.\n */\nexport interface ChargeItemDefinitionApplicability {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for expression\n     */\n    _expression?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * A brief, natural language description of the condition that effectively communicates the\n     * intended semantics.\n     */\n    description?: string;\n    /**\n     * An expression that returns true or false, indicating whether the condition is satisfied.\n     * When using FHIRPath expressions, the %context environment variable must be replaced at\n     * runtime with the ChargeItem resource to which this definition is applied.\n     */\n    expression?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The media type of the language for the expression, e.g. \"text/cql\" for Clinical Query\n     * Language expressions or \"text/fhirpath\" for FHIRPath expressions.\n     */\n    language?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The ChargeItemDefinition resource provides the properties that apply to the (billing)\n * codes necessary to calculate costs and prices. The properties may differ largely\n * depending on type and realm, therefore this resource gives only a rough structure and\n * requires profiling for each type of billing code system.\n */\nexport interface ChargeItemDefinitionPropertyGroup {\n    /**\n     * Expressions that describe applicability criteria for the priceComponent.\n     */\n    applicability?: ChargeItemDefinitionApplicability[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The price for a ChargeItem may be calculated as a base price with surcharges/deductions\n     * that apply in certain conditions. A ChargeItemDefinition resource that defines the\n     * prices, factors and conditions that apply to a billing code is currently under\n     * development. The priceComponent element can be used to offer transparency to the\n     * recipient of the Invoice of how the prices have been calculated.\n     */\n    priceComponent?: ChargeItemDefinitionPriceComponent[];\n}\n\n/**\n * The ChargeItemDefinition resource provides the properties that apply to the (billing)\n * codes necessary to calculate costs and prices. The properties may differ largely\n * depending on type and realm, therefore this resource gives only a rough structure and\n * requires profiling for each type of billing code system.\n */\nexport interface ChargeItemDefinitionPriceComponent {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * The amount calculated for this component.\n     */\n    amount?: Money;\n    /**\n     * A code that identifies the component. Codes may be used to differentiate between kinds of\n     * taxes, surcharges, discounts etc.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The factor that has been applied on the base price for calculating this component.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This code identifies the type of the component.\n     */\n    type?: string;\n}\n\n/**\n * The current state of the ChargeItemDefinition.\n */\nexport enum ChargeItemDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Period,\n    Reference,\n    Extension,\n    CodeableConcept,\n    Identifier,\n    Meta,\n    Narrative,\n    Money,\n    Address,\n    Quantity,\n    Attachment\n} from \"./fhir._\";\n\nexport interface Claim {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * Details of an accident which resulted in injuries which required the products and\n     * services listed in the claim.\n     */\n    accident?: ClaimAccident;\n    /**\n     * The period for which charges are being submitted.\n     */\n    billablePeriod?: Period;\n    /**\n     * The members of the team who provided the products and services.\n     */\n    careTeam?: ClaimCareTeam[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Claim[];\n    /**\n     * The date this resource was created.\n     */\n    created?: string;\n    /**\n     * Information about diagnoses relevant to the claim items.\n     */\n    diagnosis?: ClaimDiagnosis[];\n    /**\n     * Individual who created the claim, predetermination or preauthorization.\n     */\n    enterer?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Facility where the services were provided.\n     */\n    facility?: Reference;\n    /**\n     * A code to indicate whether and for whom funds are to be reserved for future claims.\n     */\n    fundsReserve?: CodeableConcept;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier assigned to this claim.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Financial instruments for reimbursement for the health care products and services\n     * specified on the claim.\n     */\n    insurance?: ClaimInsurance[];\n    /**\n     * The Insurer who is target of the request.\n     */\n    insurer?: Reference;\n    /**\n     * A claim line. Either a simple  product or service or a 'group' of details which can each\n     * be a simple items or groups of sub-details.\n     */\n    item?: ClaimItem[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Original prescription which has been superseded by this prescription to support the\n     * dispensing of pharmacy services, medications or products.\n     */\n    originalPrescription?: Reference;\n    /**\n     * The party to whom the professional services and/or products have been supplied or are\n     * being considered and for whom actual or forecast reimbursement is sought.\n     */\n    patient?: Reference;\n    /**\n     * The party to be reimbursed for cost of the products and services according to the terms\n     * of the policy.\n     */\n    payee?: ClaimPayee;\n    /**\n     * Prescription to support the dispensing of pharmacy, device or vision products.\n     */\n    prescription?: Reference;\n    /**\n     * The provider-required urgency of processing the request. Typical values include: stat,\n     * routine deferred.\n     */\n    priority?: CodeableConcept;\n    /**\n     * Procedures performed on the patient relevant to the billing items with the claim.\n     */\n    procedure?: ClaimProcedure[];\n    /**\n     * The provider which is responsible for the claim, predetermination or preauthorization.\n     */\n    provider?: Reference;\n    /**\n     * A reference to a referral resource.\n     */\n    referral?: Reference;\n    /**\n     * Other claims which are related to this claim such as prior submissions or claims for\n     * related services or for the same event.\n     */\n    related?: ClaimRelated[];\n    /**\n     * This is a Claim resource\n     */\n    resourceType?: any;\n    /**\n     * The status of the resource instance.\n     */\n    status?: string;\n    /**\n     * A finer grained suite of claim type codes which may convey additional information such as\n     * Inpatient vs Outpatient and/or a specialty service.\n     */\n    subType?: CodeableConcept;\n    /**\n     * Additional information codes regarding exceptions, special considerations, the condition,\n     * situation, prior or concurrent issues.\n     */\n    supportingInfo?: ClaimSupportingInfo[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The total value of the all the items in the claim.\n     */\n    total?: Money;\n    /**\n     * The category of claim, e.g. oral, pharmacy, vision, institutional, professional.\n     */\n    type?: CodeableConcept;\n    /**\n     * A code to indicate whether the nature of the request is: to request adjudication of\n     * products and services previously rendered; or requesting authorization and adjudication\n     * for provision in the future; or requesting the non-binding adjudication of the listed\n     * products and services which could be provided in the future.\n     */\n    use?: ClaimUse;\n}\n\n/**\n * Details of an accident which resulted in injuries which required the products and\n * services listed in the claim.\n *\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimAccident {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Date of an accident event  related to the products and services contained in the claim.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The physical location of the accident event.\n     */\n    locationAddress?: Address;\n    /**\n     * The physical location of the accident event.\n     */\n    locationReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type or context of the accident event for the purposes of selection of potential\n     * insurance coverages and determination of coordination between insurers.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimCareTeam {\n    /**\n     * Extensions for responsible\n     */\n    _responsible?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Member of the team who provided the product or service.\n     */\n    provider?: Reference;\n    /**\n     * The qualification of the practitioner which is applicable for this service.\n     */\n    qualification?: CodeableConcept;\n    /**\n     * The party who is billing and/or responsible for the claimed products or services.\n     */\n    responsible?: boolean;\n    /**\n     * The lead, assisting or supervising practitioner and their discipline if a\n     * multidisciplinary team.\n     */\n    role?: CodeableConcept;\n    /**\n     * A number to uniquely identify care team entries.\n     */\n    sequence?: number;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimDiagnosis {\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisCodeableConcept?: CodeableConcept;\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indication of whether the diagnosis was present on admission to a facility.\n     */\n    onAdmission?: CodeableConcept;\n    /**\n     * A package billing code or bundle code used to group products and services to a particular\n     * health condition (such as heart attack) which is based on a predetermined grouping code\n     * system.\n     */\n    packageCode?: CodeableConcept;\n    /**\n     * A number to uniquely identify diagnosis entries.\n     */\n    sequence?: number;\n    /**\n     * When the condition was observed or the relative ranking.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimInsurance {\n    /**\n     * Extensions for businessArrangement\n     */\n    _businessArrangement?: Element;\n    /**\n     * Extensions for focal\n     */\n    _focal?: Element;\n    /**\n     * Extensions for preAuthRef\n     */\n    _preAuthRef?: Element[];\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * A business agreement number established between the provider and the insurer for special\n     * business processing purposes.\n     */\n    businessArrangement?: string;\n    /**\n     * The result of the adjudication of the line items for the Coverage specified in this\n     * insurance.\n     */\n    claimResponse?: Reference;\n    /**\n     * Reference to the insurance card level information contained in the Coverage resource. The\n     * coverage issuing insurer will use these details to locate the patient's actual coverage\n     * within the insurer's information system.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A flag to indicate that this Coverage is to be used for adjudication of this claim when\n     * set to true.\n     */\n    focal?: boolean;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The business identifier to be used when the claim is sent for adjudication against this\n     * insurance policy.\n     */\n    identifier?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference numbers previously provided by the insurer to the provider to be quoted on\n     * subsequent claims containing services or products related to the prior authorization.\n     */\n    preAuthRef?: string[];\n    /**\n     * A number to uniquely identify insurance entries and provide a sequence of coverages to\n     * convey coordination of benefit order.\n     */\n    sequence?: number;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimItem {\n    /**\n     * Extensions for careTeamSequence\n     */\n    _careTeamSequence?: Element[];\n    /**\n     * Extensions for diagnosisSequence\n     */\n    _diagnosisSequence?: Element[];\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for informationSequence\n     */\n    _informationSequence?: Element[];\n    /**\n     * Extensions for procedureSequence\n     */\n    _procedureSequence?: Element[];\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * Physical service site on the patient (limb, tooth, etc.).\n     */\n    bodySite?: CodeableConcept;\n    /**\n     * CareTeam members related to this service or product.\n     */\n    careTeamSequence?: number[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * A claim detail line. Either a simple (a product or service) or a 'group' of sub-details\n     * which are simple items.\n     */\n    detail?: ClaimDetail[];\n    /**\n     * Diagnosis applicable for this service or product.\n     */\n    diagnosisSequence?: number[];\n    /**\n     * The Encounters during which this Claim was created or to which the creation of this\n     * record is tightly associated.\n     */\n    encounter?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Exceptions, special conditions and supporting information applicable for this service or\n     * product.\n     */\n    informationSequence?: number[];\n    /**\n     * Where the product or service was provided.\n     */\n    locationAddress?: Address;\n    /**\n     * Where the product or service was provided.\n     */\n    locationCodeableConcept?: CodeableConcept;\n    /**\n     * Where the product or service was provided.\n     */\n    locationReference?: Reference;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * Procedures applicable for this service or product.\n     */\n    procedureSequence?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A number to uniquely identify item entries.\n     */\n    sequence?: number;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * A region or surface of the bodySite, e.g. limb region or tooth surface(s).\n     */\n    subSite?: CodeableConcept[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimDetail {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A number to uniquely identify item entries.\n     */\n    sequence?: number;\n    /**\n     * A claim detail line. Either a simple (a product or service) or a 'group' of sub-details\n     * which are simple items.\n     */\n    subDetail?: ClaimSubDetail[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimSubDetail {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A number to uniquely identify item entries.\n     */\n    sequence?: number;\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * The party to be reimbursed for cost of the products and services according to the terms\n * of the policy.\n *\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimPayee {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference to the individual or organization to whom any payment will be made.\n     */\n    party?: Reference;\n    /**\n     * Type of Party to be reimbursed: subscriber, provider, other.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimProcedure {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Date and optionally time the procedure was performed.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The code or reference to a Procedure resource which identifies the clinical intervention\n     * performed.\n     */\n    procedureCodeableConcept?: CodeableConcept;\n    /**\n     * The code or reference to a Procedure resource which identifies the clinical intervention\n     * performed.\n     */\n    procedureReference?: Reference;\n    /**\n     * A number to uniquely identify procedure entries.\n     */\n    sequence?: number;\n    /**\n     * When the condition was observed or the relative ranking.\n     */\n    type?: CodeableConcept[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimRelated {\n    /**\n     * Reference to a related claim.\n     */\n    claim?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An alternate organizational reference to the case or file to which this particular claim\n     * pertains.\n     */\n    reference?: Identifier;\n    /**\n     * A code to convey how the claims are related.\n     */\n    relationship?: CodeableConcept;\n}\n\n/**\n * A provider issued list of professional services and products which have been provided, or\n * are to be provided, to a patient which is sent to an insurer for reimbursement.\n */\nexport interface ClaimSupportingInfo {\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Extensions for timingDate\n     */\n    _timingDate?: Element;\n    /**\n     * Extensions for valueBoolean\n     */\n    _valueBoolean?: Element;\n    /**\n     * Extensions for valueString\n     */\n    _valueString?: Element;\n    /**\n     * The general class of the information supplied: information; exception; accident,\n     * employment; onset, etc.\n     */\n    category?: CodeableConcept;\n    /**\n     * System and code pertaining to the specific information regarding special conditions\n     * relating to the setting, treatment or patient  for which care is sought.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Provides the reason in the situation where a reason code is required in addition to the\n     * content.\n     */\n    reason?: CodeableConcept;\n    /**\n     * A number to uniquely identify supporting information entries.\n     */\n    sequence?: number;\n    /**\n     * The date when or period to which this information refers.\n     */\n    timingDate?: string;\n    /**\n     * The date when or period to which this information refers.\n     */\n    timingPeriod?: Period;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueAttachment?: Attachment;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueBoolean?: boolean;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueQuantity?: Quantity;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueReference?: Reference;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueString?: string;\n}\n\n/**\n * A code to indicate whether the nature of the request is: to request adjudication of\n * products and services previously rendered; or requesting authorization and adjudication\n * for provision in the future; or requesting the non-binding adjudication of the listed\n * products and services which could be provided in the future.\n */\nexport enum ClaimUse {\n    Claim = \"claim\",\n    Preauthorization = \"preauthorization\",\n    Predetermination = \"predetermination\",\n}\n","import {\n    Element,\n    Extension,\n    Reference,\n    Attachment,\n    CodeableConcept,\n    Identifier,\n    Meta,\n    Period,\n    Narrative,\n    Address,\n    Money,\n    Quantity\n} from \"./fhir._\";\n\nexport interface ClaimResponse {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for disposition\n     */\n    _disposition?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for outcome\n     */\n    _outcome?: Element;\n    /**\n     * Extensions for preAuthRef\n     */\n    _preAuthRef?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * The first-tier service adjudications for payor added product or service lines.\n     */\n    addItem?: ClaimResponseAddItem[];\n    /**\n     * The adjudication results which are presented at the header level rather than at the\n     * line-item or add-item levels.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * Request for additional supporting or authorizing information.\n     */\n    communicationRequest?: Reference[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ClaimResponse[];\n    /**\n     * The date this resource was created.\n     */\n    created?: string;\n    /**\n     * A human readable description of the status of the adjudication.\n     */\n    disposition?: string;\n    /**\n     * Errors encountered during the processing of the adjudication.\n     */\n    error?: ClaimResponseError[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The actual form, by reference or inclusion, for printing the content or an EOB.\n     */\n    form?: Attachment;\n    /**\n     * A code for the form to be used for printing the content.\n     */\n    formCode?: CodeableConcept;\n    /**\n     * A code, used only on a response to a preauthorization, to indicate whether the benefits\n     * payable have been reserved and for whom.\n     */\n    fundsReserve?: CodeableConcept;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier assigned to this claim response.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Financial instruments for reimbursement for the health care products and services\n     * specified on the claim.\n     */\n    insurance?: ClaimResponseInsurance[];\n    /**\n     * The party responsible for authorization, adjudication and reimbursement.\n     */\n    insurer?: Reference;\n    /**\n     * A claim line. Either a simple (a product or service) or a 'group' of details which can\n     * also be a simple items or groups of sub-details.\n     */\n    item?: ClaimResponseItem[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The outcome of the claim, predetermination, or preauthorization processing.\n     */\n    outcome?: string;\n    /**\n     * The party to whom the professional services and/or products have been supplied or are\n     * being considered and for whom actual for facast reimbursement is sought.\n     */\n    patient?: Reference;\n    /**\n     * Type of Party to be reimbursed: subscriber, provider, other.\n     */\n    payeeType?: CodeableConcept;\n    /**\n     * Payment details for the adjudication of the claim.\n     */\n    payment?: ClaimResponsePayment;\n    /**\n     * The time frame during which this authorization is effective.\n     */\n    preAuthPeriod?: Period;\n    /**\n     * Reference from the Insurer which is used in later communications which refers to this\n     * adjudication.\n     */\n    preAuthRef?: string;\n    /**\n     * A note that describes or explains adjudication results in a human readable form.\n     */\n    processNote?: ClaimResponseProcessNote[];\n    /**\n     * Original request resource reference.\n     */\n    request?: Reference;\n    /**\n     * The provider which is responsible for the claim, predetermination or preauthorization.\n     */\n    requestor?: Reference;\n    /**\n     * This is a ClaimResponse resource\n     */\n    resourceType?: any;\n    /**\n     * The status of the resource instance.\n     */\n    status?: string;\n    /**\n     * A finer grained suite of claim type codes which may convey additional information such as\n     * Inpatient vs Outpatient and/or a specialty service.\n     */\n    subType?: CodeableConcept;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Categorized monetary totals for the adjudication.\n     */\n    total?: ClaimResponseTotal[];\n    /**\n     * A finer grained suite of claim type codes which may convey additional information such as\n     * Inpatient vs Outpatient and/or a specialty service.\n     */\n    type?: CodeableConcept;\n    /**\n     * A code to indicate whether the nature of the request is: to request adjudication of\n     * products and services previously rendered; or requesting authorization and adjudication\n     * for provision in the future; or requesting the non-binding adjudication of the listed\n     * products and services which could be provided in the future.\n     */\n    use?: string;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseAddItem {\n    /**\n     * Extensions for detailSequence\n     */\n    _detailSequence?: Element[];\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for itemSequence\n     */\n    _itemSequence?: Element[];\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * Extensions for subdetailSequence\n     */\n    _subdetailSequence?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * Physical service site on the patient (limb, tooth, etc.).\n     */\n    bodySite?: CodeableConcept;\n    /**\n     * The second-tier service adjudications for payor added services.\n     */\n    detail?: ClaimResponseDetail1[];\n    /**\n     * The sequence number of the details within the claim item which this line is intended to\n     * replace.\n     */\n    detailSequence?: number[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Claim items which this service line is intended to replace.\n     */\n    itemSequence?: number[];\n    /**\n     * Where the product or service was provided.\n     */\n    locationAddress?: Address;\n    /**\n     * Where the product or service was provided.\n     */\n    locationCodeableConcept?: CodeableConcept;\n    /**\n     * Where the product or service was provided.\n     */\n    locationReference?: Reference;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The providers who are authorized for the services rendered to the patient.\n     */\n    provider?: Reference[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * The sequence number of the sub-details within the details within the claim item which\n     * this line is intended to replace.\n     */\n    subdetailSequence?: number[];\n    /**\n     * A region or surface of the bodySite, e.g. limb region or tooth surface(s).\n     */\n    subSite?: CodeableConcept[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseAdjudication {\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * Monetary amount associated with the category.\n     */\n    amount?: Money;\n    /**\n     * A code to indicate the information type of this adjudication record. Information types\n     * may include the value submitted, maximum values or percentages allowed or payable under\n     * the plan, amounts that: the patient is responsible for in aggregate or pertaining to this\n     * item; amounts paid by other coverages; and, the benefit payable for this item.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A code supporting the understanding of the adjudication result and explaining variance\n     * from expected amount.\n     */\n    reason?: CodeableConcept;\n    /**\n     * A non-monetary value associated with the category. Mutually exclusive to the amount\n     * element above.\n     */\n    value?: number;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseDetail1 {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The third-tier service adjudications for payor added services.\n     */\n    subDetail?: ClaimResponseSubDetail1[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseSubDetail1 {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseError {\n    /**\n     * Extensions for detailSequence\n     */\n    _detailSequence?: Element;\n    /**\n     * Extensions for itemSequence\n     */\n    _itemSequence?: Element;\n    /**\n     * Extensions for subDetailSequence\n     */\n    _subDetailSequence?: Element;\n    /**\n     * An error code, from a specified code system, which details why the claim could not be\n     * adjudicated.\n     */\n    code?: CodeableConcept;\n    /**\n     * The sequence number of the detail within the line item submitted which contains the\n     * error. This value is omitted when the error occurs outside of the item structure.\n     */\n    detailSequence?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The sequence number of the line item submitted which contains the error. This value is\n     * omitted when the error occurs outside of the item structure.\n     */\n    itemSequence?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The sequence number of the sub-detail within the detail within the line item submitted\n     * which contains the error. This value is omitted when the error occurs outside of the item\n     * structure.\n     */\n    subDetailSequence?: number;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseInsurance {\n    /**\n     * Extensions for businessArrangement\n     */\n    _businessArrangement?: Element;\n    /**\n     * Extensions for focal\n     */\n    _focal?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * A business agreement number established between the provider and the insurer for special\n     * business processing purposes.\n     */\n    businessArrangement?: string;\n    /**\n     * The result of the adjudication of the line items for the Coverage specified in this\n     * insurance.\n     */\n    claimResponse?: Reference;\n    /**\n     * Reference to the insurance card level information contained in the Coverage resource. The\n     * coverage issuing insurer will use these details to locate the patient's actual coverage\n     * within the insurer's information system.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A flag to indicate that this Coverage is to be used for adjudication of this claim when\n     * set to true.\n     */\n    focal?: boolean;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A number to uniquely identify insurance entries and provide a sequence of coverages to\n     * convey coordination of benefit order.\n     */\n    sequence?: number;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseItem {\n    /**\n     * Extensions for itemSequence\n     */\n    _itemSequence?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * If this item is a group then the values here are a summary of the adjudication of the\n     * detail items. If this item is a simple product or service then this is the result of the\n     * adjudication of this item.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * A claim detail. Either a simple (a product or service) or a 'group' of sub-details which\n     * are simple items.\n     */\n    detail?: ClaimResponseDetail[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A number to uniquely reference the claim item entries.\n     */\n    itemSequence?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseDetail {\n    /**\n     * Extensions for detailSequence\n     */\n    _detailSequence?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * A number to uniquely reference the claim detail entry.\n     */\n    detailSequence?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * A sub-detail adjudication of a simple product or service.\n     */\n    subDetail?: ClaimResponseSubDetail[];\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseSubDetail {\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for subDetailSequence\n     */\n    _subDetailSequence?: Element;\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ClaimResponseAdjudication[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * A number to uniquely reference the claim sub-detail entry.\n     */\n    subDetailSequence?: number;\n}\n\n/**\n * Payment details for the adjudication of the claim.\n *\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponsePayment {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Total amount of all adjustments to this payment included in this transaction which are\n     * not related to this claim's adjudication.\n     */\n    adjustment?: Money;\n    /**\n     * Reason for the payment adjustment.\n     */\n    adjustmentReason?: CodeableConcept;\n    /**\n     * Benefits payable less any payment adjustment.\n     */\n    amount?: Money;\n    /**\n     * Estimated date the payment will be issued or the actual issue date of payment.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Issuer's unique identifier for the payment instrument.\n     */\n    identifier?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Whether this represents partial or complete payment of the benefits payable.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseProcessNote {\n    /**\n     * Extensions for number\n     */\n    _number?: Element;\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A code to define the language used in the text of the note.\n     */\n    language?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A number to uniquely identify a note entry.\n     */\n    number?: number;\n    /**\n     * The explanation or description associated with the processing.\n     */\n    text?: string;\n    /**\n     * The business purpose of the note text.\n     */\n    type?: ClaimResponseProcessNoteType;\n}\n\n/**\n * The business purpose of the note text.\n */\nexport enum ClaimResponseProcessNoteType {\n    Display = \"display\",\n    Print = \"print\",\n    Printoper = \"printoper\",\n}\n\n/**\n * This resource provides the adjudication details from the processing of a Claim resource.\n */\nexport interface ClaimResponseTotal {\n    /**\n     * Monetary total amount associated with the category.\n     */\n    amount?: Money;\n    /**\n     * A code to indicate the information type of this adjudication record. Information types\n     * may include: the value submitted, maximum values or percentages allowed or payable under\n     * the plan, amounts that the patient is responsible for in aggregate or pertaining to this\n     * item, amounts paid by other coverages, and the benefit payable for this item.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n","import {\n    Element,\n    ContactDetail,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext,\n    Coding\n} from \"./fhir._\";\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystem {\n    /**\n     * Extensions for caseSensitive\n     */\n    _caseSensitive?: Element;\n    /**\n     * Extensions for compositional\n     */\n    _compositional?: Element;\n    /**\n     * Extensions for content\n     */\n    _content?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for count\n     */\n    _count?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for hierarchyMeaning\n     */\n    _hierarchyMeaning?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Extensions for versionNeeded\n     */\n    _versionNeeded?: Element;\n    /**\n     * If code comparison is case sensitive when codes within this system are compared to each\n     * other.\n     */\n    caseSensitive?: boolean;\n    /**\n     * The code system defines a compositional (post-coordination) grammar.\n     */\n    compositional?: boolean;\n    /**\n     * Concepts that are in the code system. The concept definitions are inherently\n     * hierarchical, but the definitions must be consulted to determine what the meanings of the\n     * hierarchical relationships are.\n     */\n    concept?: CodeSystemConcept[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CodeSystem[];\n    /**\n     * The extent of the content of the code system (the concepts and codes it defines) are\n     * represented in this resource instance.\n     */\n    content?: Content;\n    /**\n     * A copyright statement relating to the code system and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the code system.\n     */\n    copyright?: string;\n    /**\n     * The total number of concepts defined by the code system. Where the code system has a\n     * compositional grammar, the basis of this count is defined by the system steward.\n     */\n    count?: number;\n    /**\n     * The date  (and optionally time) when the code system was published. The date must change\n     * when the business version changes and it must change if the status code changes. In\n     * addition, it should change when the substantive content of the code system changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the code system from a consumer's perspective.\n     */\n    description?: string;\n    /**\n     * A Boolean value to indicate that this code system is authored for testing purposes (or\n     * education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A filter that can be used in a value set compose statement when selecting concepts using\n     * a filter.\n     */\n    filter?: CodeSystemFilter[];\n    /**\n     * The meaning of the hierarchy of concepts as represented in this resource.\n     */\n    hierarchyMeaning?: HierarchyMeaning;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this code system when it is represented in\n     * other formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the code system is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the code system. This name should be usable as an\n     * identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * A property defines an additional slot through which additional information can be\n     * provided about a concept.\n     */\n    property?: CodeSystemProperty[];\n    /**\n     * The name of the organization or individual that published the code system.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this code system is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * This is a CodeSystem resource\n     */\n    resourceType?: any;\n    /**\n     * The date (and optionally time) when the code system resource was created or revised.\n     */\n    status?: CodeSystemStatus;\n    /**\n     * The canonical URL of the code system that this code system supplement is adding\n     * designations and properties to.\n     */\n    supplements?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the code system.\n     */\n    title?: string;\n    /**\n     * An absolute URI that is used to identify this code system when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this code system is (or will be) published. This URL can be the\n     * target of a canonical reference. It SHALL remain the same when the code system is stored\n     * on different servers. This is used in [Coding](datatypes.html#Coding).system.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate code system instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * Canonical reference to the value set that contains the entire code system.\n     */\n    valueSet?: string;\n    /**\n     * The identifier that is used to identify this version of the code system when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the code system author and is not expected to be globally unique. For example,\n     * it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is\n     * also no expectation that versions can be placed in a lexicographical sequence. This is\n     * used in [Coding](datatypes.html#Coding).version.\n     */\n    version?: string;\n    /**\n     * This flag is used to signify that the code system does not commit to concept permanence\n     * across versions. If true, a version must be specified when referencing this code system.\n     */\n    versionNeeded?: boolean;\n}\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystemConcept {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for definition\n     */\n    _definition?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * A code - a text symbol - that uniquely identifies the concept within the code system.\n     */\n    code?: string;\n    /**\n     * Defines children of a concept to produce a hierarchy of concepts. The nature of the\n     * relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.\n     */\n    concept?: CodeSystemConcept[];\n    /**\n     * The formal definition of the concept. The code system resource does not make formal\n     * definitions required, because of the prevalence of legacy systems. However, they are\n     * highly recommended, as without them there is no formal meaning associated with the\n     * concept.\n     */\n    definition?: string;\n    /**\n     * Additional representations for the concept - other languages, aliases, specialized\n     * purposes, used for particular purposes, etc.\n     */\n    designation?: CodeSystemDesignation[];\n    /**\n     * A human readable string that is the recommended default way to present this concept to a\n     * user.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A property value for this concept.\n     */\n    property?: CodeSystemProperty1[];\n}\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystemDesignation {\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The language this designation is defined for.\n     */\n    language?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A code that details how this designation would be used.\n     */\n    use?: Coding;\n    /**\n     * The text value for this designation.\n     */\n    value?: string;\n}\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystemProperty1 {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for valueBoolean\n     */\n    _valueBoolean?: Element;\n    /**\n     * Extensions for valueCode\n     */\n    _valueCode?: Element;\n    /**\n     * Extensions for valueDateTime\n     */\n    _valueDateTime?: Element;\n    /**\n     * Extensions for valueDecimal\n     */\n    _valueDecimal?: Element;\n    /**\n     * Extensions for valueInteger\n     */\n    _valueInteger?: Element;\n    /**\n     * Extensions for valueString\n     */\n    _valueString?: Element;\n    /**\n     * A code that is a reference to CodeSystem.property.code.\n     */\n    code?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The value of this property.\n     */\n    valueBoolean?: boolean;\n    /**\n     * The value of this property.\n     */\n    valueCode?: string;\n    /**\n     * The value of this property.\n     */\n    valueCoding?: Coding;\n    /**\n     * The value of this property.\n     */\n    valueDateTime?: string;\n    /**\n     * The value of this property.\n     */\n    valueDecimal?: number;\n    /**\n     * The value of this property.\n     */\n    valueInteger?: number;\n    /**\n     * The value of this property.\n     */\n    valueString?: string;\n}\n\n/**\n * The extent of the content of the code system (the concepts and codes it defines) are\n * represented in this resource instance.\n */\nexport enum Content {\n    Complete = \"complete\",\n    Example = \"example\",\n    Fragment = \"fragment\",\n    NotPresent = \"not-present\",\n    Supplement = \"supplement\",\n}\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystemFilter {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for operator\n     */\n    _operator?: Element[];\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * The code that identifies this filter when it is used as a filter in\n     * [[[ValueSet]]].compose.include.filter.\n     */\n    code?: string;\n    /**\n     * A description of how or why the filter is used.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A list of operators that can be used with the filter.\n     */\n    operator?: string[];\n    /**\n     * A description of what the value for the filter should be.\n     */\n    value?: string;\n}\n\n/**\n * The meaning of the hierarchy of concepts as represented in this resource.\n */\nexport enum HierarchyMeaning {\n    ClassifiedWith = \"classified-with\",\n    GroupedBy = \"grouped-by\",\n    IsA = \"is-a\",\n    PartOf = \"part-of\",\n}\n\n/**\n * The CodeSystem resource is used to declare the existence of and describe a code system or\n * code system supplement and its key properties, and optionally define a part or all of its\n * content.\n */\nexport interface CodeSystemProperty {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for uri\n     */\n    _uri?: Element;\n    /**\n     * A code that is used to identify the property. The code is used internally (in\n     * CodeSystem.concept.property.code) and also externally, such as in property filters.\n     */\n    code?: string;\n    /**\n     * A description of the property- why it is defined, and how its value might be used.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type of the property value. Properties of type \"code\" contain a code defined by the\n     * code system (e.g. a reference to another defined concept).\n     */\n    type?: CodeSystemPropertyType;\n    /**\n     * Reference to the formal meaning of the property. One possible source of meaning is the\n     * [Concept Properties](codesystem-concept-properties.html) code system.\n     */\n    uri?: string;\n}\n\n/**\n * The type of the property value. Properties of type \"code\" contain a code defined by the\n * code system (e.g. a reference to another defined concept).\n */\nexport enum CodeSystemPropertyType {\n    Boolean = \"boolean\",\n    Code = \"code\",\n    Coding = \"Coding\",\n    DateTime = \"dateTime\",\n    Decimal = \"decimal\",\n    Integer = \"integer\",\n    String = \"string\",\n}\n\n/**\n * The date (and optionally time) when the code system resource was created or revised.\n */\nexport enum CodeSystemStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    ContactDetail,\n    Extension,\n    Meta,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface CompartmentDefinition {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for search\n     */\n    _search?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Which compartment this definition describes.\n     */\n    code?: CompartmentDefinitionCode;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CompartmentDefinition[];\n    /**\n     * The date  (and optionally time) when the compartment definition was published. The date\n     * must change when the business version changes and it must change if the status code\n     * changes. In addition, it should change when the substantive content of the compartment\n     * definition changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the compartment definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * A Boolean value to indicate that this compartment definition is authored for testing\n     * purposes (or education/evaluation/marketing) and is not intended to be used for genuine\n     * usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the compartment definition. This name should be\n     * usable as an identifier for the module by machine processing applications such as code\n     * generation.\n     */\n    name?: string;\n    /**\n     * The name of the organization or individual that published the compartment definition.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this compartment definition is needed and why it has been designed as\n     * it has.\n     */\n    purpose?: string;\n    /**\n     * Information about how a resource is related to the compartment.\n     */\n    resource?: CompartmentDefinitionResource[];\n    /**\n     * This is a CompartmentDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * Whether the search syntax is supported,.\n     */\n    search?: boolean;\n    /**\n     * The status of this compartment definition. Enables tracking the life-cycle of the content.\n     */\n    status?: CompartmentDefinitionStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * An absolute URI that is used to identify this compartment definition when it is\n     * referenced in a specification, model, design or an instance; also called its canonical\n     * identifier. This SHOULD be globally unique and SHOULD be a literal address at which at\n     * which an authoritative instance of this compartment definition is (or will be) published.\n     * This URL can be the target of a canonical reference. It SHALL remain the same when the\n     * compartment definition is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate compartment definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the compartment definition when\n     * it is referenced in a specification, model, design or instance. This is an arbitrary\n     * value managed by the compartment definition author and is not expected to be globally\n     * unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not\n     * available. There is also no expectation that versions can be placed in a lexicographical\n     * sequence.\n     */\n    version?: string;\n}\n\n/**\n * Which compartment this definition describes.\n */\nexport enum CompartmentDefinitionCode {\n    Device = \"Device\",\n    Encounter = \"Encounter\",\n    Patient = \"Patient\",\n    Practitioner = \"Practitioner\",\n    RelatedPerson = \"RelatedPerson\",\n}\n\n/**\n * A compartment definition that defines how resources are accessed on a server.\n */\nexport interface CompartmentDefinitionResource {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for documentation\n     */\n    _documentation?: Element;\n    /**\n     * Extensions for param\n     */\n    _param?: Element[];\n    /**\n     * The name of a resource supported by the server.\n     */\n    code?: string;\n    /**\n     * Additional documentation about the resource and compartment.\n     */\n    documentation?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of a search parameter that represents the link to the compartment. More than one\n     * may be listed because a resource may be linked to a compartment in more than one way,.\n     */\n    param?: string[];\n}\n\n/**\n * The status of this compartment definition. Enables tracking the life-cycle of the content.\n */\nexport enum CompartmentDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Narrative,\n    Period\n} from \"./fhir._\";\n\nexport interface Composition {\n    /**\n     * Extensions for confidentiality\n     */\n    _confidentiality?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * A participant who has attested to the accuracy of the composition/document.\n     */\n    attester?: CompositionAttester[];\n    /**\n     * Identifies who is responsible for the information in the composition, not necessarily who\n     * typed it in.\n     */\n    author?: Reference[];\n    /**\n     * A categorization for the type of the composition - helps for indexing and searching. This\n     * may be implied by or derived from the code specified in the Composition Type.\n     */\n    category?: CodeableConcept[];\n    /**\n     * The code specifying the level of confidentiality of the Composition.\n     */\n    confidentiality?: string;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Composition[];\n    /**\n     * Identifies the organization or group who is responsible for ongoing maintenance of and\n     * access to the composition/document information.\n     */\n    custodian?: Reference;\n    /**\n     * The composition editing time, when the composition was last logically changed by the\n     * author.\n     */\n    date?: string;\n    /**\n     * Describes the clinical encounter or type of care this documentation is associated with.\n     */\n    encounter?: Reference;\n    /**\n     * The clinical service, such as a colonoscopy or an appendectomy, being documented.\n     */\n    event?: CompositionEvent[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A version-independent identifier for the Composition. This identifier stays constant as\n     * the composition is changed over time.\n     */\n    identifier?: Identifier;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Relationships that this composition has with other compositions or documents that already\n     * exist.\n     */\n    relatesTo?: CompositionRelatesTo[];\n    /**\n     * This is a Composition resource\n     */\n    resourceType?: any;\n    /**\n     * The root of the sections that make up the composition.\n     */\n    section?: CompositionSection[];\n    /**\n     * The workflow/clinical status of this composition. The status is a marker for the clinical\n     * standing of the document.\n     */\n    status?: CompositionStatus;\n    /**\n     * Who or what the composition is about. The composition can be about a person, (patient or\n     * healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as\n     * a document about a herd of livestock, or a set of patients that share a common exposure).\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Official human-readable label for the composition.\n     */\n    title?: string;\n    /**\n     * Specifies the particular kind of composition (e.g. History and Physical, Discharge\n     * Summary, Progress Note). This usually equates to the purpose of making the composition.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A set of healthcare-related information that is assembled together into a single logical\n * package that provides a single coherent statement of meaning, establishes its own context\n * and that has clinical attestation with regard to who is making the statement. A\n * Composition defines the structure and narrative content necessary for a document.\n * However, a Composition alone does not constitute a document. Rather, the Composition must\n * be the first entry in a Bundle where Bundle.type=document, and any other resources\n * referenced from Composition must be included as subsequent entries in the Bundle (for\n * example Patient, Practitioner, Encounter, etc.).\n */\nexport interface CompositionAttester {\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Extensions for time\n     */\n    _time?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The type of attestation the authenticator offers.\n     */\n    mode?: CompositionAttesterMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Who attested the composition in the specified way.\n     */\n    party?: Reference;\n    /**\n     * When the composition was attested by the party.\n     */\n    time?: string;\n}\n\n/**\n * The type of attestation the authenticator offers.\n */\nexport enum CompositionAttesterMode {\n    Legal = \"legal\",\n    Official = \"official\",\n    Personal = \"personal\",\n    Professional = \"professional\",\n}\n\n/**\n * A set of healthcare-related information that is assembled together into a single logical\n * package that provides a single coherent statement of meaning, establishes its own context\n * and that has clinical attestation with regard to who is making the statement. A\n * Composition defines the structure and narrative content necessary for a document.\n * However, a Composition alone does not constitute a document. Rather, the Composition must\n * be the first entry in a Bundle where Bundle.type=document, and any other resources\n * referenced from Composition must be included as subsequent entries in the Bundle (for\n * example Patient, Practitioner, Encounter, etc.).\n */\nexport interface CompositionEvent {\n    /**\n     * This list of codes represents the main clinical acts, such as a colonoscopy or an\n     * appendectomy, being documented. In some cases, the event is inherent in the typeCode,\n     * such as a \"History and Physical Report\" in which the procedure being documented is\n     * necessarily a \"History and Physical\" act.\n     */\n    code?: CodeableConcept[];\n    /**\n     * The description and/or reference of the event(s) being documented. For example, this\n     * could be used to document such a colonoscopy or an appendectomy.\n     */\n    detail?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period of time covered by the documentation. There is no assertion that the\n     * documentation is a complete representation for this period, only that it documents events\n     * during this time.\n     */\n    period?: Period;\n}\n\n/**\n * A set of healthcare-related information that is assembled together into a single logical\n * package that provides a single coherent statement of meaning, establishes its own context\n * and that has clinical attestation with regard to who is making the statement. A\n * Composition defines the structure and narrative content necessary for a document.\n * However, a Composition alone does not constitute a document. Rather, the Composition must\n * be the first entry in a Bundle where Bundle.type=document, and any other resources\n * referenced from Composition must be included as subsequent entries in the Bundle (for\n * example Patient, Practitioner, Encounter, etc.).\n */\nexport interface CompositionRelatesTo {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * The type of relationship that this composition has with anther composition or document.\n     */\n    code?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The target composition/document of this relationship.\n     */\n    targetIdentifier?: Identifier;\n    /**\n     * The target composition/document of this relationship.\n     */\n    targetReference?: Reference;\n}\n\n/**\n * A set of healthcare-related information that is assembled together into a single logical\n * package that provides a single coherent statement of meaning, establishes its own context\n * and that has clinical attestation with regard to who is making the statement. A\n * Composition defines the structure and narrative content necessary for a document.\n * However, a Composition alone does not constitute a document. Rather, the Composition must\n * be the first entry in a Bundle where Bundle.type=document, and any other resources\n * referenced from Composition must be included as subsequent entries in the Bundle (for\n * example Patient, Practitioner, Encounter, etc.).\n */\nexport interface CompositionSection {\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Identifies who is responsible for the information in this section, not necessarily who\n     * typed it in.\n     */\n    author?: Reference[];\n    /**\n     * A code identifying the kind of content contained within the section. This must be\n     * consistent with the section title.\n     */\n    code?: CodeableConcept;\n    /**\n     * If the section is empty, why the list is empty. An empty section typically has some text\n     * explaining the empty reason.\n     */\n    emptyReason?: CodeableConcept;\n    /**\n     * A reference to the actual resource from which the narrative in the section is derived.\n     */\n    entry?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The actual focus of the section when it is not the subject of the composition, but\n     * instead represents something or someone associated with the subject such as (for a\n     * patient subject) a spouse, parent, fetus, or donor. If not focus is specified, the focus\n     * is assumed to be focus of the parent section, or, for a section in the Composition\n     * itself, the subject of the composition. Sections with a focus SHALL only include\n     * resources where the logical subject (patient, subject, focus, etc.) matches the section\n     * focus, or the resources have no logical subject (few resources).\n     */\n    focus?: Reference;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * How the entry list was prepared - whether it is a working list that is suitable for being\n     * maintained on an ongoing basis, or if it represents a snapshot of a list of items from\n     * another source, or whether it is a prepared list where items may be marked as added,\n     * modified or deleted.\n     */\n    mode?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Specifies the order applied to the items in the section entries.\n     */\n    orderedBy?: CodeableConcept;\n    /**\n     * A nested sub-section within this section.\n     */\n    section?: CompositionSection[];\n    /**\n     * A human-readable narrative that contains the attested content of the section, used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative.\n     */\n    text?: Narrative;\n    /**\n     * The label for this particular section.  This will be part of the rendered content for the\n     * document, and is often used to build a table of contents.\n     */\n    title?: string;\n}\n\n/**\n * The workflow/clinical status of this composition. The status is a marker for the clinical\n * standing of the document.\n */\nexport enum CompositionStatus {\n    Amended = \"amended\",\n    EnteredInError = \"entered-in-error\",\n    Final = \"final\",\n    Preliminary = \"preliminary\",\n}\n","import {\n    Element,\n    ContactDetail,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface ConceptMap {\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for sourceCanonical\n     */\n    _sourceCanonical?: Element;\n    /**\n     * Extensions for sourceUri\n     */\n    _sourceUri?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for targetCanonical\n     */\n    _targetCanonical?: Element;\n    /**\n     * Extensions for targetUri\n     */\n    _targetUri?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ConceptMap[];\n    /**\n     * A copyright statement relating to the concept map and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the concept map.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the concept map was published. The date must change\n     * when the business version changes and it must change if the status code changes. In\n     * addition, it should change when the substantive content of the concept map changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the concept map from a consumer's perspective.\n     */\n    description?: string;\n    /**\n     * A Boolean value to indicate that this concept map is authored for testing purposes (or\n     * education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A group of mappings that all have the same source and target system.\n     */\n    group?: ConceptMapGroup[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this concept map when it is represented in\n     * other formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the concept map is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the concept map. This name should be usable as an\n     * identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * The name of the organization or individual that published the concept map.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this concept map is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * This is a ConceptMap resource\n     */\n    resourceType?: any;\n    /**\n     * Identifier for the source value set that contains the concepts that are being mapped and\n     * provides context for the mappings.\n     */\n    sourceCanonical?: string;\n    /**\n     * Identifier for the source value set that contains the concepts that are being mapped and\n     * provides context for the mappings.\n     */\n    sourceUri?: string;\n    /**\n     * The status of this concept map. Enables tracking the life-cycle of the content.\n     */\n    status?: ConceptMapStatus;\n    /**\n     * The target value set provides context for the mappings. Note that the mapping is made\n     * between concepts, not between value sets, but the value set provides important context\n     * about how the concept mapping choices are made.\n     */\n    targetCanonical?: string;\n    /**\n     * The target value set provides context for the mappings. Note that the mapping is made\n     * between concepts, not between value sets, but the value set provides important context\n     * about how the concept mapping choices are made.\n     */\n    targetUri?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the concept map.\n     */\n    title?: string;\n    /**\n     * An absolute URI that is used to identify this concept map when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this concept map is (or will be) published. This URL can be the\n     * target of a canonical reference. It SHALL remain the same when the concept map is stored\n     * on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate concept map instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the concept map when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the concept map author and is not expected to be globally unique. For example,\n     * it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is\n     * also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n/**\n * A statement of relationships from one set of concepts to one or more other concepts -\n * either concepts in code systems, or data element/data element concepts, or classes in\n * class models.\n */\nexport interface ConceptMapGroup {\n    /**\n     * Extensions for source\n     */\n    _source?: Element;\n    /**\n     * Extensions for sourceVersion\n     */\n    _sourceVersion?: Element;\n    /**\n     * Extensions for target\n     */\n    _target?: Element;\n    /**\n     * Extensions for targetVersion\n     */\n    _targetVersion?: Element;\n    /**\n     * Mappings for an individual concept in the source to one or more concepts in the target.\n     */\n    element?: ConceptMapElement[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An absolute URI that identifies the source system where the concepts to be mapped are\n     * defined.\n     */\n    source?: string;\n    /**\n     * The specific version of the code system, as determined by the code system authority.\n     */\n    sourceVersion?: string;\n    /**\n     * An absolute URI that identifies the target system that the concepts will be mapped to.\n     */\n    target?: string;\n    /**\n     * The specific version of the code system, as determined by the code system authority.\n     */\n    targetVersion?: string;\n    /**\n     * What to do when there is no mapping for the source concept. \"Unmapped\" does not include\n     * codes that are unmatched, and the unmapped element is ignored in a code is specified to\n     * have equivalence = unmatched.\n     */\n    unmapped?: ConceptMapUnmapped;\n}\n\n/**\n * A statement of relationships from one set of concepts to one or more other concepts -\n * either concepts in code systems, or data element/data element concepts, or classes in\n * class models.\n */\nexport interface ConceptMapElement {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Identity (code or path) or the element/item being mapped.\n     */\n    code?: string;\n    /**\n     * The display for the code. The display is only provided to help editors when editing the\n     * concept map.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A concept from the target value set that this concept maps to.\n     */\n    target?: ConceptMapTarget[];\n}\n\n/**\n * A statement of relationships from one set of concepts to one or more other concepts -\n * either concepts in code systems, or data element/data element concepts, or classes in\n * class models.\n */\nexport interface ConceptMapTarget {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for equivalence\n     */\n    _equivalence?: Element;\n    /**\n     * Identity (code or path) or the element/item that the map refers to.\n     */\n    code?: string;\n    /**\n     * A description of status/issues in mapping that conveys additional information not\n     * represented in  the structured data.\n     */\n    comment?: string;\n    /**\n     * A set of additional dependencies for this mapping to hold. This mapping is only\n     * applicable if the specified element can be resolved, and it has the specified value.\n     */\n    dependsOn?: ConceptMapDependsOn[];\n    /**\n     * The display for the code. The display is only provided to help editors when editing the\n     * concept map.\n     */\n    display?: string;\n    /**\n     * The equivalence between the source and target concepts (counting for the dependencies and\n     * products). The equivalence is read from target to source (e.g. the target is 'wider' than\n     * the source).\n     */\n    equivalence?: Equivalence;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A set of additional outcomes from this mapping to other elements. To properly execute\n     * this mapping, the specified element must be mapped to some data element or source that is\n     * in context. The mapping may still be useful without a place for the additional data\n     * elements, but the equivalence cannot be relied on.\n     */\n    product?: ConceptMapDependsOn[];\n}\n\n/**\n * A statement of relationships from one set of concepts to one or more other concepts -\n * either concepts in code systems, or data element/data element concepts, or classes in\n * class models.\n */\nexport interface ConceptMapDependsOn {\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for property\n     */\n    _property?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * The display for the code. The display is only provided to help editors when editing the\n     * concept map.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A reference to an element that holds a coded value that corresponds to a code system\n     * property. The idea is that the information model carries an element somewhere that is\n     * labeled to correspond with a code system property.\n     */\n    property?: string;\n    /**\n     * An absolute URI that identifies the code system of the dependency code (if the\n     * source/dependency is a value set that crosses code systems).\n     */\n    system?: string;\n    /**\n     * Identity (code or path) or the element/item/ValueSet/text that the map depends on /\n     * refers to.\n     */\n    value?: string;\n}\n\n/**\n * The equivalence between the source and target concepts (counting for the dependencies and\n * products). The equivalence is read from target to source (e.g. the target is 'wider' than\n * the source).\n */\nexport enum Equivalence {\n    Disjoint = \"disjoint\",\n    Equal = \"equal\",\n    Equivalent = \"equivalent\",\n    Inexact = \"inexact\",\n    Narrower = \"narrower\",\n    Relatedto = \"relatedto\",\n    Specializes = \"specializes\",\n    Subsumes = \"subsumes\",\n    Unmatched = \"unmatched\",\n    Wider = \"wider\",\n}\n\n/**\n * What to do when there is no mapping for the source concept. \"Unmapped\" does not include\n * codes that are unmatched, and the unmapped element is ignored in a code is specified to\n * have equivalence = unmatched.\n *\n * A statement of relationships from one set of concepts to one or more other concepts -\n * either concepts in code systems, or data element/data element concepts, or classes in\n * class models.\n */\nexport interface ConceptMapUnmapped {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for display\n     */\n    _display?: Element;\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a\n     * single fixed code.\n     */\n    code?: string;\n    /**\n     * The display for the code. The display is only provided to help editors when editing the\n     * concept map.\n     */\n    display?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Defines which action to take if there is no match for the source concept in the target\n     * system designated for the group. One of 3 actions are possible: use the unmapped code\n     * (this is useful when doing a mapping between versions, and only a few codes have\n     * changed), use a fixed code (a default code), or alternatively, a reference to a different\n     * concept map can be provided (by canonical URL).\n     */\n    mode?: ConceptMapUnmappedMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The canonical reference to an additional ConceptMap resource instance to use for mapping\n     * if this ConceptMap resource contains no matching mapping for the source concept.\n     */\n    url?: string;\n}\n\n/**\n * Defines which action to take if there is no match for the source concept in the target\n * system designated for the group. One of 3 actions are possible: use the unmapped code\n * (this is useful when doing a mapping between versions, and only a few codes have\n * changed), use a fixed code (a default code), or alternatively, a reference to a different\n * concept map can be provided (by canonical URL).\n */\nexport enum ConceptMapUnmappedMode {\n    Fixed = \"fixed\",\n    OtherMap = \"other-map\",\n    Provided = \"provided\",\n}\n\n/**\n * The status of this concept map. Enables tracking the life-cycle of the content.\n */\nexport enum ConceptMapStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Reference,\n    Attachment,\n    Narrative,\n    Coding,\n    Period\n} from \"./fhir._\";\n\nexport interface Consent {\n    /**\n     * Extensions for dateTime\n     */\n    _dateTime?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * A classification of the type of consents found in the statement. This element supports\n     * indexing and retrieval of consent statements.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Consent[];\n    /**\n     * When this  Consent was issued / created / indexed.\n     */\n    dateTime?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique identifier for this copy of the Consent Statement.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The organization that manages the consent, and the framework within which it is executed.\n     */\n    organization?: Reference[];\n    /**\n     * The patient/healthcare consumer to whom this consent applies.\n     */\n    patient?: Reference;\n    /**\n     * Either the Grantor, which is the entity responsible for granting the rights listed in a\n     * Consent Directive or the Grantee, which is the entity responsible for complying with the\n     * Consent Directive, including any obligations or limitations on authorizations and\n     * enforcement of prohibitions.\n     */\n    performer?: Reference[];\n    /**\n     * The references to the policies that are included in this consent scope. Policies may be\n     * organizational, but are often defined jurisdictionally, or in law.\n     */\n    policy?: ConsentPolicy[];\n    /**\n     * A reference to the specific base computable regulation or policy.\n     */\n    policyRule?: CodeableConcept;\n    /**\n     * An exception to the base policy of this consent. An exception can be an addition or\n     * removal of access permissions.\n     */\n    provision?: ConsentProvision;\n    /**\n     * This is a Consent resource\n     */\n    resourceType?: any;\n    /**\n     * A selector of the type of consent being presented: ADR, Privacy, Treatment, Research.\n     * This list is now extensible.\n     */\n    scope?: CodeableConcept;\n    /**\n     * The source on which this consent statement is based. The source might be a scanned\n     * original paper form, or a reference to a consent that links back to such a source, a\n     * reference to a document repository (e.g. XDS) that stores the original consent document.\n     */\n    sourceAttachment?: Attachment;\n    /**\n     * The source on which this consent statement is based. The source might be a scanned\n     * original paper form, or a reference to a consent that links back to such a source, a\n     * reference to a document repository (e.g. XDS) that stores the original consent document.\n     */\n    sourceReference?: Reference;\n    /**\n     * Indicates the current state of this consent.\n     */\n    status?: ConsentStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with\n     * the patient, his/her family or another authorized person.\n     */\n    verification?: ConsentVerification[];\n}\n\n/**\n * A record of a healthcare consumer’s  choices, which permits or denies identified\n * recipient(s) or recipient role(s) to perform one or more actions within a given policy\n * context, for specific purposes and periods of time.\n */\nexport interface ConsentPolicy {\n    /**\n     * Extensions for authority\n     */\n    _authority?: Element;\n    /**\n     * Extensions for uri\n     */\n    _uri?: Element;\n    /**\n     * Entity or Organization having regulatory jurisdiction or accountability for  enforcing\n     * policies pertaining to Consent Directives.\n     */\n    authority?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The references to the policies that are included in this consent scope. Policies may be\n     * organizational, but are often defined jurisdictionally, or in law.\n     */\n    uri?: string;\n}\n\n/**\n * An exception to the base policy of this consent. An exception can be an addition or\n * removal of access permissions.\n *\n * A record of a healthcare consumer’s  choices, which permits or denies identified\n * recipient(s) or recipient role(s) to perform one or more actions within a given policy\n * context, for specific purposes and periods of time.\n */\nexport interface ConsentProvision {\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Actions controlled by this Rule.\n     */\n    action?: CodeableConcept[];\n    /**\n     * Who or what is controlled by this rule. Use group to identify a set of actors by some\n     * property they share (e.g. 'admitting officers').\n     */\n    actor?: ConsentActor[];\n    /**\n     * The class of information covered by this rule. The type can be a FHIR resource type, a\n     * profile on a type, or a CDA document, or some other type that indicates what sort of\n     * information the consent relates to.\n     */\n    class?: Coding[];\n    /**\n     * If this code is found in an instance, then the rule applies.\n     */\n    code?: CodeableConcept[];\n    /**\n     * The resources controlled by this rule if specific resources are referenced.\n     */\n    data?: ConsentData[];\n    /**\n     * Clinical or Operational Relevant period of time that bounds the data controlled by this\n     * rule.\n     */\n    dataPeriod?: Period;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The timeframe in this rule is valid.\n     */\n    period?: Period;\n    /**\n     * Rules which provide exceptions to the base rule or subrules.\n     */\n    provision?: ConsentProvision[];\n    /**\n     * The context of the activities a user is taking - why the user is accessing the data -\n     * that are controlled by this rule.\n     */\n    purpose?: Coding[];\n    /**\n     * A security label, comprised of 0..* security label fields (Privacy tags), which define\n     * which resources are controlled by this exception.\n     */\n    securityLabel?: Coding[];\n    /**\n     * Action  to take - permit or deny - when the rule conditions are met.  Not permitted in\n     * root rule, required in all nested rules.\n     */\n    type?: ConsentProvisionType;\n}\n\n/**\n * A record of a healthcare consumer’s  choices, which permits or denies identified\n * recipient(s) or recipient role(s) to perform one or more actions within a given policy\n * context, for specific purposes and periods of time.\n */\nexport interface ConsentActor {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The resource that identifies the actor. To identify actors by type, use group to identify\n     * a set of actors by some property they share (e.g. 'admitting officers').\n     */\n    reference?: Reference;\n    /**\n     * How the individual is involved in the resources content that is described in the\n     * exception.\n     */\n    role?: CodeableConcept;\n}\n\n/**\n * A record of a healthcare consumer’s  choices, which permits or denies identified\n * recipient(s) or recipient role(s) to perform one or more actions within a given policy\n * context, for specific purposes and periods of time.\n */\nexport interface ConsentData {\n    /**\n     * Extensions for meaning\n     */\n    _meaning?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * How the resource reference is interpreted when testing consent restrictions.\n     */\n    meaning?: Meaning;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A reference to a specific resource that defines which resources are covered by this\n     * consent.\n     */\n    reference?: Reference;\n}\n\n/**\n * How the resource reference is interpreted when testing consent restrictions.\n */\nexport enum Meaning {\n    Authoredby = \"authoredby\",\n    Dependents = \"dependents\",\n    Instance = \"instance\",\n    Related = \"related\",\n}\n\n/**\n * Action  to take - permit or deny - when the rule conditions are met.  Not permitted in\n * root rule, required in all nested rules.\n */\nexport enum ConsentProvisionType {\n    Deny = \"deny\",\n    Permit = \"permit\",\n}\n\n/**\n * Indicates the current state of this consent.\n */\nexport enum ConsentStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    EnteredInError = \"entered-in-error\",\n    Inactive = \"inactive\",\n    Proposed = \"proposed\",\n    Rejected = \"rejected\",\n}\n\n/**\n * A record of a healthcare consumer’s  choices, which permits or denies identified\n * recipient(s) or recipient role(s) to perform one or more actions within a given policy\n * context, for specific purposes and periods of time.\n */\nexport interface ConsentVerification {\n    /**\n     * Extensions for verificationDate\n     */\n    _verificationDate?: Element;\n    /**\n     * Extensions for verified\n     */\n    _verified?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Date verification was collected.\n     */\n    verificationDate?: string;\n    /**\n     * Has the instruction been verified.\n     */\n    verified?: boolean;\n    /**\n     * Who verified the instruction (Patient, Relative or other Authorized Person).\n     */\n    verifiedWith?: Reference;\n}\n","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    CodeableConcept,\n    Period,\n    Narrative,\n    Quantity,\n    Money\n} from \"./fhir._\";\n\nexport interface CoverageEligibilityRequest {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element[];\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CoverageEligibilityRequest[];\n    /**\n     * The date when this resource was created.\n     */\n    created?: string;\n    /**\n     * Person who created the request.\n     */\n    enterer?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Facility where the services are intended to be provided.\n     */\n    facility?: Reference;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier assigned to this coverage eligiblity request.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Financial instruments for reimbursement for the health care products and services.\n     */\n    insurance?: CoverageEligibilityRequestInsurance[];\n    /**\n     * The Insurer who issued the coverage in question and is the recipient of the request.\n     */\n    insurer?: Reference;\n    /**\n     * Service categories or billable services for which benefit details and/or an authorization\n     * prior to service delivery may be required by the payor.\n     */\n    item?: CoverageEligibilityRequestItem[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The party who is the beneficiary of the supplied coverage and for whom eligibility is\n     * sought.\n     */\n    patient?: Reference;\n    /**\n     * When the requestor expects the processor to complete processing.\n     */\n    priority?: CodeableConcept;\n    /**\n     * The provider which is responsible for the request.\n     */\n    provider?: Reference;\n    /**\n     * Code to specify whether requesting: prior authorization requirements for some service\n     * categories or billing codes; benefits for coverages specified or discovered; discovery\n     * and return of coverages for the patient; and/or validation that the specified coverage is\n     * in-force at the date/period specified or 'now' if not specified.\n     */\n    purpose?: CoverageEligibilityRequestPurpose[];\n    /**\n     * This is a CoverageEligibilityRequest resource\n     */\n    resourceType?: any;\n    /**\n     * The date or dates when the enclosed suite of services were performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the enclosed suite of services were performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * The status of the resource instance.\n     */\n    status?: string;\n    /**\n     * Additional information codes regarding exceptions, special considerations, the condition,\n     * situation, prior or concurrent issues.\n     */\n    supportingInfo?: CoverageEligibilityRequestSupportingInfo[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The CoverageEligibilityRequest provides patient and insurance coverage information to an\n * insurer for them to respond, in the form of an CoverageEligibilityResponse, with\n * information regarding whether the stated coverage is valid and in-force and optionally to\n * provide the insurance details of the policy.\n */\nexport interface CoverageEligibilityRequestInsurance {\n    /**\n     * Extensions for businessArrangement\n     */\n    _businessArrangement?: Element;\n    /**\n     * Extensions for focal\n     */\n    _focal?: Element;\n    /**\n     * A business agreement number established between the provider and the insurer for special\n     * business processing purposes.\n     */\n    businessArrangement?: string;\n    /**\n     * Reference to the insurance card level information contained in the Coverage resource. The\n     * coverage issuing insurer will use these details to locate the patient's actual coverage\n     * within the insurer's information system.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A flag to indicate that this Coverage is to be used for evaluation of this request when\n     * set to true.\n     */\n    focal?: boolean;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The CoverageEligibilityRequest provides patient and insurance coverage information to an\n * insurer for them to respond, in the form of an CoverageEligibilityResponse, with\n * information regarding whether the stated coverage is valid and in-force and optionally to\n * provide the insurance details of the policy.\n */\nexport interface CoverageEligibilityRequestItem {\n    /**\n     * Extensions for supportingInfoSequence\n     */\n    _supportingInfoSequence?: Element[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * The plan/proposal/order describing the proposed service in detail.\n     */\n    detail?: Reference[];\n    /**\n     * Patient diagnosis for which care is sought.\n     */\n    diagnosis?: CoverageEligibilityRequestDiagnosis[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Facility where the services will be provided.\n     */\n    facility?: Reference;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The practitioner who is responsible for the product or service to be rendered to the\n     * patient.\n     */\n    provider?: Reference;\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * Exceptions, special conditions and supporting information applicable for this service or\n     * product line.\n     */\n    supportingInfoSequence?: number[];\n    /**\n     * The amount charged to the patient by the provider for a single unit.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * The CoverageEligibilityRequest provides patient and insurance coverage information to an\n * insurer for them to respond, in the form of an CoverageEligibilityResponse, with\n * information regarding whether the stated coverage is valid and in-force and optionally to\n * provide the insurance details of the policy.\n */\nexport interface CoverageEligibilityRequestDiagnosis {\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisCodeableConcept?: CodeableConcept;\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\nexport enum CoverageEligibilityRequestPurpose {\n    AuthRequirements = \"auth-requirements\",\n    Benefits = \"benefits\",\n    Discovery = \"discovery\",\n    Validation = \"validation\",\n}\n\n/**\n * The CoverageEligibilityRequest provides patient and insurance coverage information to an\n * insurer for them to respond, in the form of an CoverageEligibilityResponse, with\n * information regarding whether the stated coverage is valid and in-force and optionally to\n * provide the insurance details of the policy.\n */\nexport interface CoverageEligibilityRequestSupportingInfo {\n    /**\n     * Extensions for appliesToAll\n     */\n    _appliesToAll?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The supporting materials are applicable for all detail items, product/servce categories\n     * and specific billing codes.\n     */\n    appliesToAll?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    information?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A number to uniquely identify supporting information entries.\n     */\n    sequence?: number;\n}","import {\n    Element,\n    Extension,\n    CodeableConcept,\n    Identifier,\n    Reference,\n    Meta,\n    Period,\n    Narrative,\n    Money\n} from \"./fhir._\";\n\nexport interface CoverageEligibilityResponse {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for disposition\n     */\n    _disposition?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for outcome\n     */\n    _outcome?: Element;\n    /**\n     * Extensions for preAuthRef\n     */\n    _preAuthRef?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element[];\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: CoverageEligibilityResponse[];\n    /**\n     * The date this resource was created.\n     */\n    created?: string;\n    /**\n     * A human readable description of the status of the adjudication.\n     */\n    disposition?: string;\n    /**\n     * Errors encountered during the processing of the request.\n     */\n    error?: CoverageEligibilityResponseError[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A code for the form to be used for printing the content.\n     */\n    form?: CodeableConcept;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier assigned to this coverage eligiblity request.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Financial instruments for reimbursement for the health care products and services.\n     */\n    insurance?: CoverageEligibilityResponseInsurance[];\n    /**\n     * The Insurer who issued the coverage in question and is the author of the response.\n     */\n    insurer?: Reference;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The outcome of the request processing.\n     */\n    outcome?: CoverageEligibilityResponseOutcome;\n    /**\n     * The party who is the beneficiary of the supplied coverage and for whom eligibility is\n     * sought.\n     */\n    patient?: Reference;\n    /**\n     * A reference from the Insurer to which these services pertain to be used on further\n     * communication and as proof that the request occurred.\n     */\n    preAuthRef?: string;\n    /**\n     * Code to specify whether requesting: prior authorization requirements for some service\n     * categories or billing codes; benefits for coverages specified or discovered; discovery\n     * and return of coverages for the patient; and/or validation that the specified coverage is\n     * in-force at the date/period specified or 'now' if not specified.\n     */\n    purpose?: CoverageEligibilityResponsePurpose[];\n    /**\n     * Reference to the original request resource.\n     */\n    request?: Reference;\n    /**\n     * The provider which is responsible for the request.\n     */\n    requestor?: Reference;\n    /**\n     * This is a CoverageEligibilityResponse resource\n     */\n    resourceType?: any;\n    /**\n     * The date or dates when the enclosed suite of services were performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the enclosed suite of services were performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * The status of the resource instance.\n     */\n    status?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * This resource provides eligibility and plan details from the processing of an\n * CoverageEligibilityRequest resource.\n */\nexport interface CoverageEligibilityResponseError {\n    /**\n     * An error code,from a specified code system, which details why the eligibility check could\n     * not be performed.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * This resource provides eligibility and plan details from the processing of an\n * CoverageEligibilityRequest resource.\n */\nexport interface CoverageEligibilityResponseInsurance {\n    /**\n     * Extensions for inforce\n     */\n    _inforce?: Element;\n    /**\n     * The term of the benefits documented in this response.\n     */\n    benefitPeriod?: Period;\n    /**\n     * Reference to the insurance card level information contained in the Coverage resource. The\n     * coverage issuing insurer will use these details to locate the patient's actual coverage\n     * within the insurer's information system.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Flag indicating if the coverage provided is inforce currently if no service date(s)\n     * specified or for the whole duration of the service dates.\n     */\n    inforce?: boolean;\n    /**\n     * Benefits and optionally current balances, and authorization details by category or\n     * service.\n     */\n    item?: CoverageEligibilityResponseItem[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * This resource provides eligibility and plan details from the processing of an\n * CoverageEligibilityRequest resource.\n */\nexport interface CoverageEligibilityResponseItem {\n    /**\n     * Extensions for authorizationRequired\n     */\n    _authorizationRequired?: Element;\n    /**\n     * Extensions for authorizationUrl\n     */\n    _authorizationUrl?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for excluded\n     */\n    _excluded?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * A boolean flag indicating whether a preauthorization is required prior to actual service\n     * delivery.\n     */\n    authorizationRequired?: boolean;\n    /**\n     * Codes or comments regarding information or actions associated with the preauthorization.\n     */\n    authorizationSupporting?: CodeableConcept[];\n    /**\n     * A web location for obtaining requirements or descriptive information regarding the\n     * preauthorization.\n     */\n    authorizationUrl?: string;\n    /**\n     * Benefits used to date.\n     */\n    benefit?: CoverageEligibilityResponseBenefit[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * A richer description of the benefit or services covered.\n     */\n    description?: string;\n    /**\n     * True if the indicated class of service is excluded from the plan, missing or False\n     * indicates the product or service is included in the coverage.\n     */\n    excluded?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A short name or tag for the benefit.\n     */\n    name?: string;\n    /**\n     * Is a flag to indicate whether the benefits refer to in-network providers or\n     * out-of-network providers.\n     */\n    network?: CodeableConcept;\n    /**\n     * This contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The practitioner who is eligible for the provision of the product or service.\n     */\n    provider?: Reference;\n    /**\n     * The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual\n     * visits'.\n     */\n    term?: CodeableConcept;\n    /**\n     * Indicates if the benefits apply to an individual or to the family.\n     */\n    unit?: CodeableConcept;\n}\n\n/**\n * This resource provides eligibility and plan details from the processing of an\n * CoverageEligibilityRequest resource.\n */\nexport interface CoverageEligibilityResponseBenefit {\n    /**\n     * Extensions for allowedString\n     */\n    _allowedString?: Element;\n    /**\n     * Extensions for allowedUnsignedInt\n     */\n    _allowedUnsignedInt?: Element;\n    /**\n     * Extensions for usedString\n     */\n    _usedString?: Element;\n    /**\n     * Extensions for usedUnsignedInt\n     */\n    _usedUnsignedInt?: Element;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedMoney?: Money;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedString?: string;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedUnsignedInt?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Classification of benefit being provided.\n     */\n    type?: CodeableConcept;\n    /**\n     * The quantity of the benefit which have been consumed to date.\n     */\n    usedMoney?: Money;\n    /**\n     * The quantity of the benefit which have been consumed to date.\n     */\n    usedString?: string;\n    /**\n     * The quantity of the benefit which have been consumed to date.\n     */\n    usedUnsignedInt?: number;\n}\n\n/**\n * The outcome of the request processing.\n */\nexport enum CoverageEligibilityResponseOutcome {\n    Complete = \"complete\",\n    Error = \"error\",\n    Partial = \"partial\",\n    Queued = \"queued\",\n}\n\nexport enum CoverageEligibilityResponsePurpose {\n    AuthRequirements = \"auth-requirements\",\n    Benefits = \"benefits\",\n    Discovery = \"discovery\",\n    Validation = \"validation\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Period,\n    Identifier,\n    Meta,\n    Narrative\n} from \"./fhir._\";\n\nexport interface DetectedIssue {\n    /**\n     * Extensions for detail\n     */\n    _detail?: Element;\n    /**\n     * Extensions for identifiedDateTime\n     */\n    _identifiedDateTime?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for reference\n     */\n    _reference?: Element;\n    /**\n     * Extensions for severity\n     */\n    _severity?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Individual or device responsible for the issue being raised.  For example, a decision\n     * support application or a pharmacist conducting a medication review.\n     */\n    author?: Reference;\n    /**\n     * Identifies the general type of issue identified.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DetectedIssue[];\n    /**\n     * A textual explanation of the detected issue.\n     */\n    detail?: string;\n    /**\n     * Supporting evidence or manifestations that provide the basis for identifying the detected\n     * issue such as a GuidanceResponse or MeasureReport.\n     */\n    evidence?: DetectedIssueEvidence[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * The date or period when the detected issue was initially identified.\n     */\n    identifiedDateTime?: string;\n    /**\n     * The date or period when the detected issue was initially identified.\n     */\n    identifiedPeriod?: Period;\n    /**\n     * Business identifier associated with the detected issue record.\n     */\n    identifier?: Identifier[];\n    /**\n     * Indicates the resource representing the current activity or proposed activity that is\n     * potentially problematic.\n     */\n    implicated?: Reference[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * Indicates an action that has been taken or is committed to reduce or eliminate the\n     * likelihood of the risk identified by the detected issue from manifesting.  Can also\n     * reflect an observation of known mitigating factors that may reduce/eliminate the need for\n     * any action.\n     */\n    mitigation?: DetectedIssueMitigation[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indicates the patient whose record the detected issue is associated with.\n     */\n    patient?: Reference;\n    /**\n     * The literature, knowledge-base or similar reference that describes the propensity for the\n     * detected issue identified.\n     */\n    reference?: string;\n    /**\n     * This is a DetectedIssue resource\n     */\n    resourceType?: any;\n    /**\n     * Indicates the degree of importance associated with the identified issue based on the\n     * potential impact on the patient.\n     */\n    severity?: DetectedIssueSeverity;\n    /**\n     * Indicates the status of the detected issue.\n     */\n    status?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Indicates an actual or potential clinical issue with or between one or more active or\n * proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective\n * treatment frequency, Procedure-condition conflict, etc.\n */\nexport interface DetectedIssueEvidence {\n    /**\n     * A manifestation that led to the recording of this detected issue.\n     */\n    code?: CodeableConcept[];\n    /**\n     * Links to resources that constitute evidence for the detected issue such as a\n     * GuidanceResponse or MeasureReport.\n     */\n    detail?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Indicates an actual or potential clinical issue with or between one or more active or\n * proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective\n * treatment frequency, Procedure-condition conflict, etc.\n */\nexport interface DetectedIssueMitigation {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Describes the action that was taken or the observation that was made that\n     * reduces/eliminates the risk associated with the identified issue.\n     */\n    action?: CodeableConcept;\n    /**\n     * Identifies the practitioner who determined the mitigation and takes responsibility for\n     * the mitigation step occurring.\n     */\n    author?: Reference;\n    /**\n     * Indicates when the mitigating action was documented.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Indicates the degree of importance associated with the identified issue based on the\n * potential impact on the patient.\n */\nexport enum DetectedIssueSeverity {\n    High = \"high\",\n    Low = \"low\",\n    Moderate = \"moderate\",\n}","import {\n    Element,\n    ContactPoint,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    CodeableConcept,\n    Narrative,\n    Quantity\n} from \"./fhir._\";\n\nexport interface Device {\n    /**\n     * Extensions for distinctIdentifier\n     */\n    _distinctIdentifier?: Element;\n    /**\n     * Extensions for expirationDate\n     */\n    _expirationDate?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lotNumber\n     */\n    _lotNumber?: Element;\n    /**\n     * Extensions for manufactureDate\n     */\n    _manufactureDate?: Element;\n    /**\n     * Extensions for manufacturer\n     */\n    _manufacturer?: Element;\n    /**\n     * Extensions for modelNumber\n     */\n    _modelNumber?: Element;\n    /**\n     * Extensions for partNumber\n     */\n    _partNumber?: Element;\n    /**\n     * Extensions for serialNumber\n     */\n    _serialNumber?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Contact details for an organization or a particular human that is responsible for the\n     * device.\n     */\n    contact?: ContactPoint[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Device[];\n    /**\n     * The reference to the definition for the device.\n     */\n    definition?: Reference;\n    /**\n     * This represents the manufacturer's name of the device as provided by the device, from a\n     * UDI label, or by a person describing the Device.  This typically would be used when a\n     * person provides the name(s) or when the device represents one of the names available from\n     * DeviceDefinition.\n     */\n    deviceName?: DeviceDeviceName[];\n    /**\n     * The distinct identification string as required by regulation for a human cell, tissue, or\n     * cellular and tissue-based product.\n     */\n    distinctIdentifier?: string;\n    /**\n     * The date and time beyond which this device is no longer valid or should not be used (if\n     * applicable).\n     */\n    expirationDate?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique instance identifiers assigned to a device by manufacturers other organizations or\n     * owners.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The place where the device can be found.\n     */\n    location?: Reference;\n    /**\n     * Lot number assigned by the manufacturer.\n     */\n    lotNumber?: string;\n    /**\n     * The date and time when the device was manufactured.\n     */\n    manufactureDate?: string;\n    /**\n     * A name of the manufacturer.\n     */\n    manufacturer?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * The model number for the device.\n     */\n    modelNumber?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Descriptive information, usage information or implantation information that is not\n     * captured in an existing element.\n     */\n    note?: Annotation[];\n    /**\n     * An organization that is responsible for the provision and ongoing maintenance of the\n     * device.\n     */\n    owner?: Reference;\n    /**\n     * The parent device.\n     */\n    parent?: Reference;\n    /**\n     * The part number of the device.\n     */\n    partNumber?: string;\n    /**\n     * Patient information, If the device is affixed to a person.\n     */\n    patient?: Reference;\n    /**\n     * The actual configuration settings of a device as it actually operates, e.g., regulation\n     * status, time properties.\n     */\n    property?: DeviceProperty[];\n    /**\n     * This is a Device resource\n     */\n    resourceType?: any;\n    /**\n     * Provides additional safety characteristics about a medical device.  For example devices\n     * containing latex.\n     */\n    safety?: CodeableConcept[];\n    /**\n     * The serial number assigned by the organization when the device was manufactured.\n     */\n    serialNumber?: string;\n    /**\n     * The capabilities supported on a  device, the standards to which the device conforms for a\n     * particular purpose, and used for the communication.\n     */\n    specialization?: DeviceSpecialization[];\n    /**\n     * Status of the Device availability.\n     */\n    status?: DeviceStatus;\n    /**\n     * Reason for the dtatus of the Device availability.\n     */\n    statusReason?: CodeableConcept[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The kind or type of device.\n     */\n    type?: CodeableConcept;\n    /**\n     * Unique device identifier (UDI) assigned to device label or package.  Note that the Device\n     * may include multiple udiCarriers as it either may include just the udiCarrier for the\n     * jurisdiction it is sold, or for multiple jurisdictions it could have been sold.\n     */\n    udiCarrier?: DeviceUdiCarrier[];\n    /**\n     * A network address on which the device may be contacted directly.\n     */\n    url?: string;\n    /**\n     * The actual design of the device or software version running on the device.\n     */\n    version?: DeviceVersion[];\n}\n\n/**\n * A type of a manufactured item that is used in the provision of healthcare without being\n * substantially changed through that activity. The device may be a medical or non-medical\n * device.\n */\nexport interface DeviceDeviceName {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of the device.\n     */\n    name?: string;\n    /**\n     * The type of deviceName.\n     * UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.\n     */\n    type?: DeviceDeviceNameType;\n}\n\n/**\n * The type of deviceName.\n * UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.\n */\nexport enum DeviceDeviceNameType {\n    ManufacturerName = \"manufacturer-name\",\n    ModelName = \"model-name\",\n    Other = \"other\",\n    PatientReportedName = \"patient-reported-name\",\n    UdiLabelName = \"udi-label-name\",\n    UserFriendlyName = \"user-friendly-name\",\n}\n\n/**\n * A type of a manufactured item that is used in the provision of healthcare without being\n * substantially changed through that activity. The device may be a medical or non-medical\n * device.\n */\nexport interface DeviceProperty {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Code that specifies the property DeviceDefinitionPropetyCode (Extensible).\n     */\n    type?: CodeableConcept;\n    /**\n     * Property value as a code, e.g., NTP4 (synced to NTP).\n     */\n    valueCode?: CodeableConcept[];\n    /**\n     * Property value as a quantity.\n     */\n    valueQuantity?: Quantity[];\n}\n\n/**\n * A type of a manufactured item that is used in the provision of healthcare without being\n * substantially changed through that activity. The device may be a medical or non-medical\n * device.\n */\nexport interface DeviceSpecialization {\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The standard that is used to operate and communicate.\n     */\n    systemType?: CodeableConcept;\n    /**\n     * The version of the standard that is used to operate and communicate.\n     */\n    version?: string;\n}\n\n/**\n * Status of the Device availability.\n */\nexport enum DeviceStatus {\n    Active = \"active\",\n    EnteredInError = \"entered-in-error\",\n    Inactive = \"inactive\",\n    Unknown = \"unknown\",\n}\n\n/**\n * A type of a manufactured item that is used in the provision of healthcare without being\n * substantially changed through that activity. The device may be a medical or non-medical\n * device.\n */\nexport interface DeviceUdiCarrier {\n    /**\n     * Extensions for carrierAIDC\n     */\n    _carrierAIDC?: Element;\n    /**\n     * Extensions for carrierHRF\n     */\n    _carrierHRF?: Element;\n    /**\n     * Extensions for deviceIdentifier\n     */\n    _deviceIdentifier?: Element;\n    /**\n     * Extensions for entryType\n     */\n    _entryType?: Element;\n    /**\n     * Extensions for issuer\n     */\n    _issuer?: Element;\n    /**\n     * Extensions for jurisdiction\n     */\n    _jurisdiction?: Element;\n    /**\n     * The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology\n     * representation of the barcode string as printed on the packaging of the device - e.g., a\n     * barcode or RFID.   Because of limitations on character sets in XML and the need to\n     * round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.\n     */\n    carrierAIDC?: string;\n    /**\n     * The full UDI carrier as the human readable form (HRF) representation of the barcode\n     * string as printed on the packaging of the device.\n     */\n    carrierHRF?: string;\n    /**\n     * The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the\n     * labeler and the specific version or model of a device.\n     */\n    deviceIdentifier?: string;\n    /**\n     * A coded entry to indicate how the data was entered.\n     */\n    entryType?: EntryType;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Organization that is charged with issuing UDIs for devices.  For example, the US FDA\n     * issuers include :\n     * 1) GS1:\n     * http://hl7.org/fhir/NamingSystem/gs1-di,\n     * 2) HIBCC:\n     * http://hl7.org/fhir/NamingSystem/hibcc-dI,\n     * 3) ICCBBA for blood containers:\n     * http://hl7.org/fhir/NamingSystem/iccbba-blood-di,\n     * 4) ICCBA for other devices:\n     * http://hl7.org/fhir/NamingSystem/iccbba-other-di.\n     */\n    issuer?: string;\n    /**\n     * The identity of the authoritative source for UDI generation within a  jurisdiction.  All\n     * UDIs are globally unique within a single namespace with the appropriate repository uri as\n     * the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is\n     * http://hl7.org/fhir/NamingSystem/fda-udi.\n     */\n    jurisdiction?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * A coded entry to indicate how the data was entered.\n */\nexport enum EntryType {\n    Barcode = \"barcode\",\n    Card = \"card\",\n    Manual = \"manual\",\n    Rfid = \"rfid\",\n    SelfReported = \"self-reported\",\n    Unknown = \"unknown\",\n}\n\n/**\n * A type of a manufactured item that is used in the provision of healthcare without being\n * substantially changed through that activity. The device may be a medical or non-medical\n * device.\n */\nexport interface DeviceVersion {\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * A single component of the device version.\n     */\n    component?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type of the device version.\n     */\n    type?: CodeableConcept;\n    /**\n     * The version text.\n     */\n    value?: string;\n}\n","import {\n    Element,\n    ContactPoint,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Reference,\n    Meta,\n    Annotation,\n    Quantity,\n    Narrative,\n    ProdCharacteristic,\n    ProductShelfLife\n} from \"./fhir._\";\n\nexport interface DeviceDefinition {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for manufacturerString\n     */\n    _manufacturerString?: Element;\n    /**\n     * Extensions for modelNumber\n     */\n    _modelNumber?: Element;\n    /**\n     * Extensions for onlineInformation\n     */\n    _onlineInformation?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element[];\n    /**\n     * Device capabilities.\n     */\n    capability?: DeviceDefinitionCapability[];\n    /**\n     * Contact details for an organization or a particular human that is responsible for the\n     * device.\n     */\n    contact?: ContactPoint[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DeviceDefinition[];\n    /**\n     * A name given to the device to identify it.\n     */\n    deviceName?: DeviceDefinitionDeviceName[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique instance identifiers assigned to a device by the software, manufacturers, other\n     * organizations or owners. For example: handle ID.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Language code for the human-readable text strings produced by the device (all supported).\n     */\n    languageCode?: CodeableConcept[];\n    /**\n     * A name of the manufacturer.\n     */\n    manufacturerReference?: Reference;\n    /**\n     * A name of the manufacturer.\n     */\n    manufacturerString?: string;\n    /**\n     * A substance used to create the material(s) of which the device is made.\n     */\n    material?: DeviceDefinitionMaterial[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * The model number for the device.\n     */\n    modelNumber?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Descriptive information, usage information or implantation information that is not\n     * captured in an existing element.\n     */\n    note?: Annotation[];\n    /**\n     * Access to on-line information about the device.\n     */\n    onlineInformation?: string;\n    /**\n     * An organization that is responsible for the provision and ongoing maintenance of the\n     * device.\n     */\n    owner?: Reference;\n    /**\n     * The parent device it can be part of.\n     */\n    parentDevice?: Reference;\n    /**\n     * Dimensions, color etc.\n     */\n    physicalCharacteristics?: ProdCharacteristic;\n    /**\n     * The actual configuration settings of a device as it actually operates, e.g., regulation\n     * status, time properties.\n     */\n    property?: DeviceDefinitionProperty[];\n    /**\n     * The quantity of the device present in the packaging (e.g. the number of devices present\n     * in a pack, or the number of devices in the same package of the medicinal product).\n     */\n    quantity?: Quantity;\n    /**\n     * This is a DeviceDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * Safety characteristics of the device.\n     */\n    safety?: CodeableConcept[];\n    /**\n     * Shelf Life and storage information.\n     */\n    shelfLifeStorage?: ProductShelfLife[];\n    /**\n     * The capabilities supported on a  device, the standards to which the device conforms for a\n     * particular purpose, and used for the communication.\n     */\n    specialization?: DeviceDefinitionSpecialization[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * What kind of device or device system this is.\n     */\n    type?: CodeableConcept;\n    /**\n     * Unique device identifier (UDI) assigned to device label or package.  Note that the Device\n     * may include multiple udiCarriers as it either may include just the udiCarrier for the\n     * jurisdiction it is sold, or for multiple jurisdictions it could have been sold.\n     */\n    udiDeviceIdentifier?: DeviceDefinitionUdiDeviceIdentifier[];\n    /**\n     * A network address on which the device may be contacted directly.\n     */\n    url?: string;\n    /**\n     * The available versions of the device, e.g., software versions.\n     */\n    version?: string[];\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionCapability {\n    /**\n     * Description of capability.\n     */\n    description?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Type of capability.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionDeviceName {\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of the device.\n     */\n    name?: string;\n    /**\n     * The type of deviceName.\n     * UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.\n     */\n    type?: DeviceDefinitionDeviceNameType;\n}\n\n/**\n * The type of deviceName.\n * UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.\n */\nexport enum DeviceDefinitionDeviceNameType {\n    ManufacturerName = \"manufacturer-name\",\n    ModelName = \"model-name\",\n    Other = \"other\",\n    PatientReportedName = \"patient-reported-name\",\n    UdiLabelName = \"udi-label-name\",\n    UserFriendlyName = \"user-friendly-name\",\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionMaterial {\n    /**\n     * Extensions for allergenicIndicator\n     */\n    _allergenicIndicator?: Element;\n    /**\n     * Extensions for alternate\n     */\n    _alternate?: Element;\n    /**\n     * Whether the substance is a known or suspected allergen.\n     */\n    allergenicIndicator?: boolean;\n    /**\n     * Indicates an alternative material of the device.\n     */\n    alternate?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The substance.\n     */\n    substance?: CodeableConcept;\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionProperty {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Code that specifies the property DeviceDefinitionPropetyCode (Extensible).\n     */\n    type?: CodeableConcept;\n    /**\n     * Property value as a code, e.g., NTP4 (synced to NTP).\n     */\n    valueCode?: CodeableConcept[];\n    /**\n     * Property value as a quantity.\n     */\n    valueQuantity?: Quantity[];\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionSpecialization {\n    /**\n     * Extensions for systemType\n     */\n    _systemType?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The standard that is used to operate and communicate.\n     */\n    systemType?: string;\n    /**\n     * The version of the standard that is used to operate and communicate.\n     */\n    version?: string;\n}\n\n/**\n * The characteristics, operational status and capabilities of a medical-related component\n * of a medical device.\n */\nexport interface DeviceDefinitionUdiDeviceIdentifier {\n    /**\n     * Extensions for deviceIdentifier\n     */\n    _deviceIdentifier?: Element;\n    /**\n     * Extensions for issuer\n     */\n    _issuer?: Element;\n    /**\n     * Extensions for jurisdiction\n     */\n    _jurisdiction?: Element;\n    /**\n     * The identifier that is to be associated with every Device that references this\n     * DeviceDefintiion for the issuer and jurisdication porvided in the\n     * DeviceDefinition.udiDeviceIdentifier.\n     */\n    deviceIdentifier?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The organization that assigns the identifier algorithm.\n     */\n    issuer?: string;\n    /**\n     * The jurisdiction to which the deviceIdentifier applies.\n     */\n    jurisdiction?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n","import {\n    Element,\n    Extension,\n    Identifier,\n    Timing,\n    Meta,\n    Reference,\n    Narrative,\n    CodeableConcept\n} from \"./fhir._\";\n\nexport interface DeviceMetric {\n    /**\n     * Extensions for category\n     */\n    _category?: Element;\n    /**\n     * Extensions for color\n     */\n    _color?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for operationalStatus\n     */\n    _operationalStatus?: Element;\n    /**\n     * Describes the calibrations that have been performed or that are required to be performed.\n     */\n    calibration?: DeviceMetricCalibration[];\n    /**\n     * Indicates the category of the observation generation process. A DeviceMetric can be for\n     * example a setting, measurement, or calculation.\n     */\n    category?: DeviceMetricCategory;\n    /**\n     * Describes the color representation for the metric. This is often used to aid clinicians\n     * to track and identify parameter types by color. In practice, consider a Patient Monitor\n     * that has ECG/HR and Pleth for example; the parameters are displayed in different\n     * characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.\n     */\n    color?: Color;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DeviceMetric[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique instance identifiers assigned to a device by the device or gateway software,\n     * manufacturers, other organizations or owners. For example: handle ID.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Describes the measurement repetition time. This is not necessarily the same as the update\n     * period. The measurement repetition time can range from milliseconds up to hours. An\n     * example for a measurement repetition time in the range of milliseconds is the sampling\n     * rate of an ECG. An example for a measurement repetition time in the range of hours is a\n     * NIBP that is triggered automatically every hour. The update period may be different than\n     * the measurement repetition time, if the device does not update the published observed\n     * value with the same frequency as it was measured.\n     */\n    measurementPeriod?: Timing;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indicates current operational state of the device. For example: On, Off, Standby, etc.\n     */\n    operationalStatus?: OperationalStatus;\n    /**\n     * Describes the link to the  Device that this DeviceMetric belongs to and that provide\n     * information about the location of this DeviceMetric in the containment structure of the\n     * parent Device. An example would be a Device that represents a Channel. This reference can\n     * be used by a client application to distinguish DeviceMetrics that have the same type, but\n     * should be interpreted based on their containment location.\n     */\n    parent?: Reference;\n    /**\n     * This is a DeviceMetric resource\n     */\n    resourceType?: any;\n    /**\n     * Describes the link to the  Device that this DeviceMetric belongs to and that contains\n     * administrative device information such as manufacturer, serial number, etc.\n     */\n    source?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Describes the type of the metric. For example: Heart Rate, PEEP Setting, etc.\n     */\n    type?: CodeableConcept;\n    /**\n     * Describes the unit that an observed value determined for this metric will have. For\n     * example: Percent, Seconds, etc.\n     */\n    unit?: CodeableConcept;\n}\n\n/**\n * Describes a measurement, calculation or setting capability of a medical device.\n */\nexport interface DeviceMetricCalibration {\n    /**\n     * Extensions for state\n     */\n    _state?: Element;\n    /**\n     * Extensions for time\n     */\n    _time?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Describes the state of the calibration.\n     */\n    state?: State;\n    /**\n     * Describes the time last calibration has been performed.\n     */\n    time?: string;\n    /**\n     * Describes the type of the calibration method.\n     */\n    type?: DeviceMetricCalibrationType;\n}\n\n/**\n * Describes the state of the calibration.\n */\nexport enum State {\n    Calibrated = \"calibrated\",\n    CalibrationRequired = \"calibration-required\",\n    NotCalibrated = \"not-calibrated\",\n    Unspecified = \"unspecified\",\n}\n\n/**\n * Describes the type of the calibration method.\n */\nexport enum DeviceMetricCalibrationType {\n    Gain = \"gain\",\n    Offset = \"offset\",\n    TwoPoint = \"two-point\",\n    Unspecified = \"unspecified\",\n}\n\n/**\n * Indicates the category of the observation generation process. A DeviceMetric can be for\n * example a setting, measurement, or calculation.\n */\nexport enum DeviceMetricCategory {\n    Calculation = \"calculation\",\n    Measurement = \"measurement\",\n    Setting = \"setting\",\n    Unspecified = \"unspecified\",\n}\n\n/**\n * Describes the color representation for the metric. This is often used to aid clinicians\n * to track and identify parameter types by color. In practice, consider a Patient Monitor\n * that has ECG/HR and Pleth for example; the parameters are displayed in different\n * characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.\n */\nexport enum Color {\n    Black = \"black\",\n    Blue = \"blue\",\n    Cyan = \"cyan\",\n    Green = \"green\",\n    Magenta = \"magenta\",\n    Red = \"red\",\n    White = \"white\",\n    Yellow = \"yellow\",\n}\n\n/**\n * Indicates current operational state of the device. For example: On, Off, Standby, etc.\n */\nexport enum OperationalStatus {\n    EnteredInError = \"entered-in-error\",\n    Off = \"off\",\n    On = \"on\",\n    Standby = \"standby\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Narrative,\n    Period,\n    Timing\n} from \"./fhir._\";\n\nexport interface DeviceUseStatement {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for recordedOn\n     */\n    _recordedOn?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for timingDateTime\n     */\n    _timingDateTime?: Element;\n    /**\n     * A plan, proposal or order that is fulfilled in whole or in part by this\n     * DeviceUseStatement.\n     */\n    basedOn?: Reference[];\n    /**\n     * Indicates the anotomic location on the subject's body where the device was used ( i.e.\n     * the target).\n     */\n    bodySite?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DeviceUseStatement[];\n    /**\n     * Allows linking the DeviceUseStatement to the underlying Request, or to other information\n     * that supports or is used to derive the DeviceUseStatement.\n     */\n    derivedFrom?: Reference[];\n    /**\n     * The details of the device used.\n     */\n    device?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * An external identifier for this statement such as an IRI.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Details about the device statement that were not represented at all or sufficiently in\n     * one of the attributes provided in a class. These may include for example a comment, an\n     * instruction, or a note associated with the statement.\n     */\n    note?: Annotation[];\n    /**\n     * Reason or justification for the use of the device.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Indicates another resource whose existence justifies this DeviceUseStatement.\n     */\n    reasonReference?: Reference[];\n    /**\n     * The time at which the statement was made/recorded.\n     */\n    recordedOn?: string;\n    /**\n     * This is a DeviceUseStatement resource\n     */\n    resourceType?: any;\n    /**\n     * Who reported the device was being used by the patient.\n     */\n    source?: Reference;\n    /**\n     * A code representing the patient or other source's judgment about the state of the device\n     * used that this statement is about.  Generally this will be active or completed.\n     */\n    status?: DeviceUseStatementStatus;\n    /**\n     * The patient who used the device.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * How often the device was used.\n     */\n    timingDateTime?: string;\n    /**\n     * How often the device was used.\n     */\n    timingPeriod?: Period;\n    /**\n     * How often the device was used.\n     */\n    timingTiming?: Timing;\n}\n\n/**\n * A code representing the patient or other source's judgment about the state of the device\n * used that this statement is about.  Generally this will be active or completed.\n */\nexport enum DeviceUseStatementStatus {\n    Active = \"active\",\n    Completed = \"completed\",\n    EnteredInError = \"entered-in-error\",\n    Intended = \"intended\",\n    OnHold = \"on-hold\",\n    Stopped = \"stopped\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Period,\n    Extension,\n    Identifier,\n    Meta,\n    Attachment,\n    Narrative\n} from \"./fhir._\";\n\nexport interface DiagnosticReport {\n    /**\n     * Extensions for conclusion\n     */\n    _conclusion?: Element;\n    /**\n     * Extensions for effectiveDateTime\n     */\n    _effectiveDateTime?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for issued\n     */\n    _issued?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Details concerning a service requested.\n     */\n    basedOn?: Reference[];\n    /**\n     * A code that classifies the clinical discipline, department or diagnostic service that\n     * created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for\n     * searching, sorting and display purposes.\n     */\n    category?: CodeableConcept[];\n    /**\n     * A code or name that describes this diagnostic report.\n     */\n    code?: CodeableConcept;\n    /**\n     * Concise and clinically contextualized summary conclusion (interpretation/impression) of\n     * the diagnostic report.\n     */\n    conclusion?: string;\n    /**\n     * One or more codes that represent the summary conclusion (interpretation/impression) of\n     * the diagnostic report.\n     */\n    conclusionCode?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DiagnosticReport[];\n    /**\n     * The time or time-period the observed values are related to. When the subject of the\n     * report is a patient, this is usually either the time of the procedure or of specimen\n     * collection(s), but very often the source of the date/time is not known, only the\n     * date/time itself.\n     */\n    effectiveDateTime?: string;\n    /**\n     * The time or time-period the observed values are related to. When the subject of the\n     * report is a patient, this is usually either the time of the procedure or of specimen\n     * collection(s), but very often the source of the date/time is not known, only the\n     * date/time itself.\n     */\n    effectivePeriod?: Period;\n    /**\n     * The healthcare event  (e.g. a patient and healthcare provider interaction) which this\n     * DiagnosticReport is about.\n     */\n    encounter?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifiers assigned to this report by the performer or other systems.\n     */\n    identifier?: Identifier[];\n    /**\n     * One or more links to full details of any imaging performed during the diagnostic\n     * investigation. Typically, this is imaging performed by DICOM enabled modalities, but this\n     * is not required. A fully enabled PACS viewer can use this information to provide views of\n     * the source images.\n     */\n    imagingStudy?: Reference[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The date and time that this version of the report was made available to providers,\n     * typically after the report was reviewed and verified.\n     */\n    issued?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * A list of key images associated with this report. The images are generally created during\n     * the diagnostic process, and may be directly of the patient, or of treated specimens (i.e.\n     * slides of interest).\n     */\n    media?: DiagnosticReportMedia[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The diagnostic service that is responsible for issuing the report.\n     */\n    performer?: Reference[];\n    /**\n     * Rich text representation of the entire result as issued by the diagnostic service.\n     * Multiple formats are allowed but they SHALL be semantically equivalent.\n     */\n    presentedForm?: Attachment[];\n    /**\n     * This is a DiagnosticReport resource\n     */\n    resourceType?: any;\n    /**\n     * [Observations](observation.html)  that are part of this diagnostic report.\n     */\n    result?: Reference[];\n    /**\n     * The practitioner or organization that is responsible for the report's conclusions and\n     * interpretations.\n     */\n    resultsInterpreter?: Reference[];\n    /**\n     * Details about the specimens on which this diagnostic report is based.\n     */\n    specimen?: Reference[];\n    /**\n     * The status of the diagnostic report.\n     */\n    status?: DiagnosticReportStatus;\n    /**\n     * The subject of the report. Usually, but not always, this is a patient. However,\n     * diagnostic services also perform analyses on specimens collected from a variety of other\n     * sources.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The findings and interpretation of diagnostic  tests performed on patients, groups of\n * patients, devices, and locations, and/or specimens derived from these. The report\n * includes clinical context such as requesting and provider information, and some mix of\n * atomic results, images, textual and coded interpretations, and formatted representation\n * of diagnostic reports.\n */\nexport interface DiagnosticReportMedia {\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * A comment about the image. Typically, this is used to provide an explanation for why the\n     * image is included, or to draw the viewer's attention to important features.\n     */\n    comment?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Reference to the image source.\n     */\n    link?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The status of the diagnostic report.\n */\nexport enum DiagnosticReportStatus {\n    Amended = \"amended\",\n    Appended = \"appended\",\n    Cancelled = \"cancelled\",\n    Corrected = \"corrected\",\n    EnteredInError = \"entered-in-error\",\n    Final = \"final\",\n    Partial = \"partial\",\n    Preliminary = \"preliminary\",\n    Registered = \"registered\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Narrative,\n    CodeableConcept\n} from \"./fhir._\";\n\nexport interface DocumentManifest {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for source\n     */\n    _source?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Identifies who is the author of the manifest. Manifest author is not necessarly the\n     * author of the references included.\n     */\n    author?: Reference[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DocumentManifest[];\n    /**\n     * The list of Resources that consist of the parts of this manifest.\n     */\n    content?: Reference[];\n    /**\n     * When the document manifest was created for submission to the server (not necessarily the\n     * same thing as the actual resource last modified time, since it may be modified,\n     * replicated, etc.).\n     */\n    created?: string;\n    /**\n     * Human-readable description of the source document. This is sometimes known as the \"title\".\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Other identifiers associated with the document manifest, including version independent\n     * identifiers.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * A single identifier that uniquely identifies this manifest. Principally used to refer to\n     * the manifest in non-FHIR contexts.\n     */\n    masterIdentifier?: Identifier;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A patient, practitioner, or organization for which this set of documents is intended.\n     */\n    recipient?: Reference[];\n    /**\n     * Related identifiers or resources associated with the DocumentManifest.\n     */\n    related?: DocumentManifestRelated[];\n    /**\n     * This is a DocumentManifest resource\n     */\n    resourceType?: any;\n    /**\n     * Identifies the source system, application, or software that produced the document\n     * manifest.\n     */\n    source?: string;\n    /**\n     * The status of this document manifest.\n     */\n    status?: DocumentManifestStatus;\n    /**\n     * Who or what the set of documents is about. The documents can be about a person, (patient\n     * or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as\n     * a document about a herd of farm animals, or a set of patients that share a common\n     * exposure). If the documents cross more than one subject, then more than one subject is\n     * allowed here (unusual use case).\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The code specifying the type of clinical activity that resulted in placing the associated\n     * content into the DocumentManifest.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A collection of documents compiled for a purpose together with metadata that applies to\n * the collection.\n */\nexport interface DocumentManifestRelated {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Related identifier to this DocumentManifest.  For example, Order numbers, accession\n     * numbers, XDW workflow numbers.\n     */\n    identifier?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Related Resource to this DocumentManifest. For example, Order, ServiceRequest,\n     * Procedure, EligibilityRequest, etc.\n     */\n    ref?: Reference;\n}\n\n/**\n * The status of this document manifest.\n */\nexport enum DocumentManifestStatus {\n    Current = \"current\",\n    EnteredInError = \"entered-in-error\",\n    Superseded = \"superseded\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Narrative,\n    Attachment,\n    Coding,\n    Period\n} from \"./fhir._\";\n\nexport interface DocumentReference {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for docStatus\n     */\n    _docStatus?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Which person or organization authenticates that this document is valid.\n     */\n    authenticator?: Reference;\n    /**\n     * Identifies who is responsible for adding the information to the document.\n     */\n    author?: Reference[];\n    /**\n     * A categorization for the type of document referenced - helps for indexing and searching.\n     * This may be implied by or derived from the code specified in the DocumentReference.type.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: DocumentReference[];\n    /**\n     * The document and format referenced. There may be multiple content element repetitions,\n     * each with a different format.\n     */\n    content?: DocumentReferenceContent[];\n    /**\n     * The clinical context in which the document was prepared.\n     */\n    context?: DocumentReferenceContext;\n    /**\n     * Identifies the organization or group who is responsible for ongoing maintenance of and\n     * access to the document.\n     */\n    custodian?: Reference;\n    /**\n     * When the document reference was created.\n     */\n    date?: string;\n    /**\n     * Human-readable description of the source document.\n     */\n    description?: string;\n    /**\n     * The status of the underlying document.\n     */\n    docStatus?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Other identifiers associated with the document, including version independent identifiers.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Document identifier as assigned by the source of the document. This identifier is\n     * specific to this version of the document. This unique identifier may be used elsewhere to\n     * identify this version of the document.\n     */\n    masterIdentifier?: Identifier;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Relationships that this document has with other document references that already exist.\n     */\n    relatesTo?: DocumentReferenceRelatesTo[];\n    /**\n     * This is a DocumentReference resource\n     */\n    resourceType?: any;\n    /**\n     * A set of Security-Tag codes specifying the level of privacy/security of the Document.\n     * Note that DocumentReference.meta.security contains the security labels of the \"reference\"\n     * to the document, while DocumentReference.securityLabel contains a snapshot of the\n     * security labels on the document the reference refers to.\n     */\n    securityLabel?: CodeableConcept[];\n    /**\n     * The status of this document reference.\n     */\n    status?: DocumentReferenceStatus;\n    /**\n     * Who or what the document is about. The document can be about a person, (patient or\n     * healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as\n     * a document about a herd of farm animals, or a set of patients that share a common\n     * exposure).\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Specifies the particular kind of document referenced  (e.g. History and Physical,\n     * Discharge Summary, Progress Note). This usually equates to the purpose of making the\n     * document referenced.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * A reference to a document of any kind for any purpose. Provides metadata about the\n * document so that the document can be discovered and managed. The scope of a document is\n * any seralized object with a mime-type, so includes formal patient centric documents\n * (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.\n */\nexport interface DocumentReferenceContent {\n    /**\n     * The document or URL of the document along with critical metadata to prove content has\n     * integrity.\n     */\n    attachment?: Attachment;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * An identifier of the document encoding, structure, and template that the document\n     * conforms to beyond the base format indicated in the mimeType.\n     */\n    format?: Coding;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The clinical context in which the document was prepared.\n *\n * A reference to a document of any kind for any purpose. Provides metadata about the\n * document so that the document can be discovered and managed. The scope of a document is\n * any seralized object with a mime-type, so includes formal patient centric documents\n * (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.\n */\nexport interface DocumentReferenceContext {\n    /**\n     * Describes the clinical encounter or type of care that the document content is associated\n     * with.\n     */\n    encounter?: Reference[];\n    /**\n     * This list of codes represents the main clinical acts, such as a colonoscopy or an\n     * appendectomy, being documented. In some cases, the event is inherent in the type Code,\n     * such as a \"History and Physical Report\" in which the procedure being documented is\n     * necessarily a \"History and Physical\" act.\n     */\n    event?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The kind of facility where the patient was seen.\n     */\n    facilityType?: CodeableConcept;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The time period over which the service that is described by the document was provided.\n     */\n    period?: Period;\n    /**\n     * This property may convey specifics about the practice setting where the content was\n     * created, often reflecting the clinical specialty.\n     */\n    practiceSetting?: CodeableConcept;\n    /**\n     * Related identifiers or resources associated with the DocumentReference.\n     */\n    related?: Reference[];\n    /**\n     * The Patient Information as known when the document was published. May be a reference to a\n     * version specific, or contained.\n     */\n    sourcePatientInfo?: Reference;\n}\n\n/**\n * A reference to a document of any kind for any purpose. Provides metadata about the\n * document so that the document can be discovered and managed. The scope of a document is\n * any seralized object with a mime-type, so includes formal patient centric documents\n * (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.\n */\nexport interface DocumentReferenceRelatesTo {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * The type of relationship that this document has with anther document.\n     */\n    code?: DocumentReferenceRelatesToCode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The target document of this relationship.\n     */\n    target?: Reference;\n}\n\n/**\n * The type of relationship that this document has with anther document.\n */\nexport enum DocumentReferenceRelatesToCode {\n    Appends = \"appends\",\n    Replaces = \"replaces\",\n    Signs = \"signs\",\n    Transforms = \"transforms\",\n}\n\n/**\n * The status of this document reference.\n */\nexport enum DocumentReferenceStatus {\n    Current = \"current\",\n    EnteredInError = \"entered-in-error\",\n    Superseded = \"superseded\",\n}","import {\n    Element,\n    ContactDetail,\n    Period,\n    Reference,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Annotation,\n    RelatedArtifact,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface EffectEvidenceSynthesis {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * A description of the certainty of the effect estimate.\n     */\n    certainty?: EffectEvidenceSynthesisCertainty[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: EffectEvidenceSynthesis[];\n    /**\n     * A copyright statement relating to the effect evidence synthesis and/or its contents.\n     * Copyright statements are generally legal restrictions on the use and publishing of the\n     * effect evidence synthesis.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the effect evidence synthesis was published. The\n     * date must change when the business version changes and it must change if the status code\n     * changes. In addition, it should change when the substantive content of the effect\n     * evidence synthesis changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the effect evidence synthesis from a\n     * consumer's perspective.\n     */\n    description?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The estimated effect of the exposure variant.\n     */\n    effectEstimate?: EffectEvidenceSynthesisEffectEstimate[];\n    /**\n     * The period during which the effect evidence synthesis content was or is planned to be in\n     * active use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A reference to a EvidenceVariable resource that defines the exposure for the research.\n     */\n    exposure?: Reference;\n    /**\n     * A reference to a EvidenceVariable resource that defines the comparison exposure for the\n     * research.\n     */\n    exposureAlternative?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this effect evidence synthesis when it is\n     * represented in other formats, or referenced in a specification, model, design or an\n     * instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the effect evidence synthesis is intended to be\n     * used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the effect evidence synthesis. This name should be\n     * usable as an identifier for the module by machine processing applications such as code\n     * generation.\n     */\n    name?: string;\n    /**\n     * A human-readable string to clarify or explain concepts about the resource.\n     */\n    note?: Annotation[];\n    /**\n     * A reference to a EvidenceVariable resomece that defines the outcome for the research.\n     */\n    outcome?: Reference;\n    /**\n     * A reference to a EvidenceVariable resource that defines the population for the research.\n     */\n    population?: Reference;\n    /**\n     * The name of the organization or individual that published the effect evidence synthesis.\n     */\n    publisher?: string;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a EffectEvidenceSynthesis resource\n     */\n    resourceType?: any;\n    /**\n     * A description of the results for each exposure considered in the effect estimate.\n     */\n    resultsByExposure?: EffectEvidenceSynthesisResultsByExposure[];\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * A description of the size of the sample involved in the synthesis.\n     */\n    sampleSize?: EffectEvidenceSynthesisSampleSize;\n    /**\n     * The status of this effect evidence synthesis. Enables tracking the life-cycle of the\n     * content.\n     */\n    status?: EffectEvidenceSynthesisStatus;\n    /**\n     * Type of study eg randomized trial.\n     */\n    studyType?: CodeableConcept;\n    /**\n     * Type of synthesis eg meta-analysis.\n     */\n    synthesisType?: CodeableConcept;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the effect evidence synthesis.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the EffectEvidenceSynthesis. Topics provide\n     * a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful\n     * for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * An absolute URI that is used to identify this effect evidence synthesis when it is\n     * referenced in a specification, model, design or an instance; also called its canonical\n     * identifier. This SHOULD be globally unique and SHOULD be a literal address at which at\n     * which an authoritative instance of this effect evidence synthesis is (or will be)\n     * published. This URL can be the target of a canonical reference. It SHALL remain the same\n     * when the effect evidence synthesis is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate effect evidence synthesis instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the effect evidence synthesis\n     * when it is referenced in a specification, model, design or instance. This is an arbitrary\n     * value managed by the effect evidence synthesis author and is not expected to be globally\n     * unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not\n     * available. There is also no expectation that versions can be placed in a lexicographical\n     * sequence.\n     */\n    version?: string;\n}\n\n/**\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisCertainty {\n    /**\n     * A description of a component of the overall certainty.\n     */\n    certaintySubcomponent?: EffectEvidenceSynthesisCertaintySubcomponent[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A human-readable string to clarify or explain concepts about the resource.\n     */\n    note?: Annotation[];\n    /**\n     * A rating of the certainty of the effect estimate.\n     */\n    rating?: CodeableConcept[];\n}\n\n/**\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisCertaintySubcomponent {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A human-readable string to clarify or explain concepts about the resource.\n     */\n    note?: Annotation[];\n    /**\n     * A rating of a subcomponent of rating certainty.\n     */\n    rating?: CodeableConcept[];\n    /**\n     * Type of subcomponent of certainty rating.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisEffectEstimate {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * Human-readable summary of effect estimate.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A description of the precision of the estimate for the effect.\n     */\n    precisionEstimate?: EffectEvidenceSynthesisPrecisionEstimate[];\n    /**\n     * Examples include relative risk and mean difference.\n     */\n    type?: CodeableConcept;\n    /**\n     * Specifies the UCUM unit for the outcome.\n     */\n    unitOfMeasure?: CodeableConcept;\n    /**\n     * The point estimate of the effect estimate.\n     */\n    value?: number;\n    /**\n     * Used to define variant exposure states such as low-risk state.\n     */\n    variantState?: CodeableConcept;\n}\n\n/**\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisPrecisionEstimate {\n    /**\n     * Extensions for from\n     */\n    _from?: Element;\n    /**\n     * Extensions for level\n     */\n    _level?: Element;\n    /**\n     * Extensions for to\n     */\n    _to?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Lower bound of confidence interval.\n     */\n    from?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Use 95 for a 95% confidence interval.\n     */\n    level?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Upper bound of confidence interval.\n     */\n    to?: number;\n    /**\n     * Examples include confidence interval and interquartile range.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisResultsByExposure {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for exposureState\n     */\n    _exposureState?: Element;\n    /**\n     * Human-readable summary of results by exposure state.\n     */\n    description?: string;\n    /**\n     * Whether these results are for the exposure state or alternative exposure state.\n     */\n    exposureState?: ExposureState;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference to a RiskEvidenceSynthesis resource.\n     */\n    riskEvidenceSynthesis?: Reference;\n    /**\n     * Used to define variant exposure states such as low-risk state.\n     */\n    variantState?: CodeableConcept;\n}\n\n/**\n * Whether these results are for the exposure state or alternative exposure state.\n */\nexport enum ExposureState {\n    Exposure = \"exposure\",\n    ExposureAlternative = \"exposure-alternative\",\n}\n\n/**\n * A description of the size of the sample involved in the synthesis.\n *\n * The EffectEvidenceSynthesis resource describes the difference in an outcome between\n * exposures states in a population where the effect estimate is derived from a combination\n * of research studies.\n */\nexport interface EffectEvidenceSynthesisSampleSize {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for numberOfParticipants\n     */\n    _numberOfParticipants?: Element;\n    /**\n     * Extensions for numberOfStudies\n     */\n    _numberOfStudies?: Element;\n    /**\n     * Human-readable summary of sample size.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Number of participants included in this evidence synthesis.\n     */\n    numberOfParticipants?: number;\n    /**\n     * Number of studies included in this evidence synthesis.\n     */\n    numberOfStudies?: number;\n}\n\n/**\n * The status of this effect evidence synthesis. Enables tracking the life-cycle of the\n * content.\n */\nexport enum EffectEvidenceSynthesisStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Coding,\n    Extension,\n    Identifier,\n    Duration,\n    Meta,\n    Period,\n    CodeableConcept,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Encounter {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The set of accounts that may be used for billing for this Encounter.\n     */\n    account?: Reference[];\n    /**\n     * The appointment that scheduled this encounter.\n     */\n    appointment?: Reference[];\n    /**\n     * The request this encounter satisfies (e.g. incoming referral or procedure request).\n     */\n    basedOn?: Reference[];\n    /**\n     * Concepts representing classification of patient encounter such as ambulatory\n     * (outpatient), inpatient, emergency, home health or others due to local variations.\n     */\n    class?: Coding;\n    /**\n     * The class history permits the tracking of the encounters transitions without needing to\n     * go  through the resource history.  This would be used for a case where an admission\n     * starts of as an emergency encounter, then transitions into an inpatient scenario. Doing\n     * this and not restarting a new encounter ensures that any lab/diagnostic results can more\n     * easily follow the patient and not require re-processing and not get lost or cancelled\n     * during a kind of discharge from emergency to inpatient.\n     */\n    classHistory?: EncounterClassHistory[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Encounter[];\n    /**\n     * The list of diagnosis relevant to this encounter.\n     */\n    diagnosis?: EncounterDiagnosis[];\n    /**\n     * Where a specific encounter should be classified as a part of a specific episode(s) of\n     * care this field should be used. This association can facilitate grouping of related\n     * encounters together for a specific purpose, such as government reporting, issue tracking,\n     * association via a common problem.  The association is recorded on the encounter as these\n     * are typically created after the episode of care and grouped on entry rather than editing\n     * the episode of care to append another encounter to it (the episode of care could span\n     * years).\n     */\n    episodeOfCare?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Details about the admission to a healthcare service.\n     */\n    hospitalization?: EncounterHospitalization;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifier(s) by which this encounter is known.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Quantity of time the encounter lasted. This excludes the time during leaves of absence.\n     */\n    length?: Duration;\n    /**\n     * List of locations where  the patient has been during this encounter.\n     */\n    location?: EncounterLocation[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The list of people responsible for providing the service.\n     */\n    participant?: EncounterParticipant[];\n    /**\n     * Another Encounter of which this encounter is a part of (administratively or in time).\n     */\n    partOf?: Reference;\n    /**\n     * The start and end time of the encounter.\n     */\n    period?: Period;\n    /**\n     * Indicates the urgency of the encounter.\n     */\n    priority?: CodeableConcept;\n    /**\n     * Reason the encounter takes place, expressed as a code. For admissions, this can be used\n     * for a coded admission diagnosis.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Reason the encounter takes place, expressed as a code. For admissions, this can be used\n     * for a coded admission diagnosis.\n     */\n    reasonReference?: Reference[];\n    /**\n     * This is a Encounter resource\n     */\n    resourceType?: any;\n    /**\n     * The organization that is primarily responsible for this Encounter's services. This MAY be\n     * the same as the organization on the Patient record, however it could be different, such\n     * as if the actor performing the services was from an external organization (which may be\n     * billed seperately) for an external consultation.  Refer to the example bundle showing an\n     * abbreviated set of Encounters for a colonoscopy.\n     */\n    serviceProvider?: Reference;\n    /**\n     * Broad categorization of the service that is to be provided (e.g. cardiology).\n     */\n    serviceType?: CodeableConcept;\n    /**\n     * planned | arrived | triaged | in-progress | onleave | finished | cancelled +.\n     */\n    status?: EncounterStatus;\n    /**\n     * The status history permits the encounter resource to contain the status history without\n     * needing to read through the historical versions of the resource, or even have the server\n     * store them.\n     */\n    statusHistory?: EncounterStatusHistory[];\n    /**\n     * The patient or group present at the encounter.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing,\n     * rehabilitation).\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterClassHistory {\n    /**\n     * inpatient | outpatient | ambulatory | emergency +.\n     */\n    class?: Coding;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The time that the episode was in the specified class.\n     */\n    period?: Period;\n}\n\n/**\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterDiagnosis {\n    /**\n     * Extensions for rank\n     */\n    _rank?: Element;\n    /**\n     * Reason the encounter takes place, as specified using information from another resource.\n     * For admissions, this is the admission diagnosis. The indication will typically be a\n     * Condition (with other resources referenced in the evidence.detail), or a Procedure.\n     */\n    condition?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Ranking of the diagnosis (for each role type).\n     */\n    rank?: number;\n    /**\n     * Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).\n     */\n    use?: CodeableConcept;\n}\n\n/**\n * Details about the admission to a healthcare service.\n *\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterHospitalization {\n    /**\n     * From where patient was admitted (physician referral, transfer).\n     */\n    admitSource?: CodeableConcept;\n    /**\n     * Location/organization to which the patient is discharged.\n     */\n    destination?: Reference;\n    /**\n     * Diet preferences reported by the patient.\n     */\n    dietPreference?: CodeableConcept[];\n    /**\n     * Category or kind of location after discharge.\n     */\n    dischargeDisposition?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The location/organization from which the patient came before admission.\n     */\n    origin?: Reference;\n    /**\n     * Pre-admission identifier.\n     */\n    preAdmissionIdentifier?: Identifier;\n    /**\n     * Whether this hospitalization is a readmission and why if known.\n     */\n    reAdmission?: CodeableConcept;\n    /**\n     * Any special requests that have been made for this hospitalization encounter, such as the\n     * provision of specific equipment or other things.\n     */\n    specialArrangement?: CodeableConcept[];\n    /**\n     * Special courtesies (VIP, board member).\n     */\n    specialCourtesy?: CodeableConcept[];\n}\n\n/**\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterLocation {\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The location where the encounter takes place.\n     */\n    location?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Time period during which the patient was present at the location.\n     */\n    period?: Period;\n    /**\n     * This will be used to specify the required levels (bed/ward/room/etc.) desired to be\n     * recorded to simplify either messaging or query.\n     */\n    physicalType?: CodeableConcept;\n    /**\n     * The status of the participants' presence at the specified location during the period\n     * specified. If the participant is no longer at the location, then the period will have an\n     * end date/time.\n     */\n    status?: EncounterLocationStatus;\n}\n\n/**\n * The status of the participants' presence at the specified location during the period\n * specified. If the participant is no longer at the location, then the period will have an\n * end date/time.\n */\nexport enum EncounterLocationStatus {\n    Active = \"active\",\n    Completed = \"completed\",\n    Planned = \"planned\",\n    Reserved = \"reserved\",\n}\n\n/**\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterParticipant {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Persons involved in the encounter other than the patient.\n     */\n    individual?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period of time that the specified participant participated in the encounter. These\n     * can overlap or be sub-sets of the overall encounter's period.\n     */\n    period?: Period;\n    /**\n     * Role of participant in encounter.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * planned | arrived | triaged | in-progress | onleave | finished | cancelled +.\n */\nexport enum EncounterStatus {\n    Arrived = \"arrived\",\n    Cancelled = \"cancelled\",\n    EnteredInError = \"entered-in-error\",\n    Finished = \"finished\",\n    InProgress = \"in-progress\",\n    Onleave = \"onleave\",\n    Planned = \"planned\",\n    Triaged = \"triaged\",\n    Unknown = \"unknown\",\n}\n\n/**\n * An interaction between a patient and healthcare provider(s) for the purpose of providing\n * healthcare service(s) or assessing the health status of a patient.\n */\nexport interface EncounterStatusHistory {\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The time that the episode was in the specified status.\n     */\n    period?: Period;\n    /**\n     * planned | arrived | triaged | in-progress | onleave | finished | cancelled +.\n     */\n    status?: EncounterStatus;\n}","import {\n    Element,\n    Coding,\n    ContactPoint,\n    Extension,\n    Identifier,\n    Reference,\n    Meta,\n    CodeableConcept,\n    Period,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Endpoint {\n    /**\n     * Extensions for address\n     */\n    _address?: Element;\n    /**\n     * Extensions for header\n     */\n    _header?: Element[];\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for payloadMimeType\n     */\n    _payloadMimeType?: Element[];\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The uri that describes the actual end-point to connect to.\n     */\n    address?: string;\n    /**\n     * A coded value that represents the technical details of the usage of this endpoint, such\n     * as what WSDLs should be used in what way. (e.g. XDS.b/DICOM/cds-hook).\n     */\n    connectionType?: Coding;\n    /**\n     * Contact details for a human to contact about the subscription. The primary use of this\n     * for system administrator troubleshooting.\n     */\n    contact?: ContactPoint[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Endpoint[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Additional headers / information to send as part of the notification.\n     */\n    header?: string[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifier for the organization that is used to identify the endpoint across multiple\n     * disparate systems.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The organization that manages this endpoint (even if technically another organization is\n     * hosting this in the cloud, it is the organization associated with the data).\n     */\n    managingOrganization?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A friendly name that this endpoint can be referred to with.\n     */\n    name?: string;\n    /**\n     * The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json.\n     * If the mime type is not specified, then the sender could send any content (including no\n     * content depending on the connectionType).\n     */\n    payloadMimeType?: string[];\n    /**\n     * The payload type describes the acceptable content that can be communicated on the\n     * endpoint.\n     */\n    payloadType?: CodeableConcept[];\n    /**\n     * The interval during which the endpoint is expected to be operational.\n     */\n    period?: Period;\n    /**\n     * This is a Endpoint resource\n     */\n    resourceType?: any;\n    /**\n     * active | suspended | error | off | test.\n     */\n    status?: EndpointStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * active | suspended | error | off | test.\n */\nexport enum EndpointStatus {\n    Active = \"active\",\n    EnteredInError = \"entered-in-error\",\n    Error = \"error\",\n    Off = \"off\",\n    Suspended = \"suspended\",\n    Test = \"test\",\n}","import {\n    Element,\n    Extension,\n    Identifier,\n    Meta,\n    Reference,\n    Narrative\n} from \"./fhir._\";\n\nexport interface EnrollmentResponse {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for disposition\n     */\n    _disposition?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for outcome\n     */\n    _outcome?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: EnrollmentResponse[];\n    /**\n     * The date when the enclosed suite of services were performed or completed.\n     */\n    created?: string;\n    /**\n     * A description of the status of the adjudication.\n     */\n    disposition?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * The Response business identifier.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The Insurer who produced this adjudicated response.\n     */\n    organization?: Reference;\n    /**\n     * Processing status: error, complete.\n     */\n    outcome?: EnrollmentResponseOutcome;\n    /**\n     * Original request resource reference.\n     */\n    request?: Reference;\n    /**\n     * The practitioner who is responsible for the services rendered to the patient.\n     */\n    requestProvider?: Reference;\n    /**\n     * This is a EnrollmentResponse resource\n     */\n    resourceType?: any;\n    /**\n     * The status of the resource instance.\n     */\n    status?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Processing status: error, complete.\n */\nexport enum EnrollmentResponseOutcome {\n    Complete = \"complete\",\n    Error = \"error\",\n    Partial = \"partial\",\n    Queued = \"queued\",\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Period,\n    Narrative,\n    CodeableConcept\n} from \"./fhir._\";\n\nexport interface EpisodeOfCare {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The set of accounts that may be used for billing for this EpisodeOfCare.\n     */\n    account?: Reference[];\n    /**\n     * The practitioner that is the care manager/care coordinator for this patient.\n     */\n    careManager?: Reference;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: EpisodeOfCare[];\n    /**\n     * The list of diagnosis relevant to this episode of care.\n     */\n    diagnosis?: EpisodeOfCareDiagnosis[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * The EpisodeOfCare may be known by different identifiers for different contexts of use,\n     * such as when an external agency is tracking the Episode for funding purposes.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The organization that has assumed the specific responsibilities for the specified\n     * duration.\n     */\n    managingOrganization?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The patient who is the focus of this episode of care.\n     */\n    patient?: Reference;\n    /**\n     * The interval during which the managing organization assumes the defined responsibility.\n     */\n    period?: Period;\n    /**\n     * Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.\n     */\n    referralRequest?: Reference[];\n    /**\n     * This is a EpisodeOfCare resource\n     */\n    resourceType?: any;\n    /**\n     * planned | waitlist | active | onhold | finished | cancelled.\n     */\n    status?: EpisodeOfCareStatus;\n    /**\n     * The history of statuses that the EpisodeOfCare has been through (without requiring\n     * processing the history of the resource).\n     */\n    statusHistory?: EpisodeOfCareStatusHistory[];\n    /**\n     * The list of practitioners that may be facilitating this episode of care for specific\n     * purposes.\n     */\n    team?: Reference[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A classification of the type of episode of care; e.g. specialist referral, disease\n     * management, type of funded care.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * An association between a patient and an organization / healthcare provider(s) during\n * which time encounters may occur. The managing organization assumes a level of\n * responsibility for the patient during this time.\n */\nexport interface EpisodeOfCareDiagnosis {\n    /**\n     * Extensions for rank\n     */\n    _rank?: Element;\n    /**\n     * A list of conditions/problems/diagnoses that this episode of care is intended to be\n     * providing care for.\n     */\n    condition?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Ranking of the diagnosis (for each role type).\n     */\n    rank?: number;\n    /**\n     * Role that this diagnosis has within the episode of care (e.g. admission, billing,\n     * discharge …).\n     */\n    role?: CodeableConcept;\n}\n\n/**\n * planned | waitlist | active | onhold | finished | cancelled.\n */\nexport enum EpisodeOfCareStatus {\n    Active = \"active\",\n    Cancelled = \"cancelled\",\n    EnteredInError = \"entered-in-error\",\n    Finished = \"finished\",\n    Onhold = \"onhold\",\n    Planned = \"planned\",\n    Waitlist = \"waitlist\",\n}\n\n/**\n * An association between a patient and an organization / healthcare provider(s) during\n * which time encounters may occur. The managing organization assumes a level of\n * responsibility for the patient during this time.\n */\nexport interface EpisodeOfCareStatusHistory {\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period during this EpisodeOfCare that the specific status applied.\n     */\n    period?: Period;\n    /**\n     * planned | waitlist | active | onhold | finished | cancelled.\n     */\n    status?: EpisodeOfCareStatus;\n}","import {\n    Element,\n    ContactDetail,\n    Period,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    RelatedArtifact,\n    Reference,\n    Narrative,\n    TriggerDefinition,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface EventDefinition {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for usage\n     */\n    _usage?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: EventDefinition[];\n    /**\n     * A copyright statement relating to the event definition and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the event\n     * definition.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the event definition was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the event definition\n     * changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the event definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the event definition content was or is planned to be in active\n     * use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A Boolean value to indicate that this event definition is authored for testing purposes\n     * (or education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this event definition when it is represented\n     * in other formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the event definition is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the event definition. This name should be usable as\n     * an identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * The name of the organization or individual that published the event definition.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this event definition is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * Related resources such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a EventDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * The status of this event definition. Enables tracking the life-cycle of the content.\n     */\n    status?: EventDefinitionStatus;\n    /**\n     * A code or group definition that describes the intended subject of the event definition.\n     */\n    subjectCodeableConcept?: CodeableConcept;\n    /**\n     * A code or group definition that describes the intended subject of the event definition.\n     */\n    subjectReference?: Reference;\n    /**\n     * An explanatory or alternate title for the event definition giving additional information\n     * about its content.\n     */\n    subtitle?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the event definition.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the module. Topics provide a high-level categorization of\n     * the module that can be useful for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * The trigger element defines when the event occurs. If more than one trigger condition is\n     * specified, the event fires whenever any one of the trigger conditions is met.\n     */\n    trigger?: TriggerDefinition[];\n    /**\n     * An absolute URI that is used to identify this event definition when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this event definition is (or will be) published. This URL can\n     * be the target of a canonical reference. It SHALL remain the same when the event\n     * definition is stored on different servers.\n     */\n    url?: string;\n    /**\n     * A detailed description of how the event definition is used from a clinical perspective.\n     */\n    usage?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate event definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the event definition when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the event definition author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n/**\n * The status of this event definition. Enables tracking the life-cycle of the content.\n */\nexport enum EventDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    ContactDetail,\n    Period,\n    Reference,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Annotation,\n    RelatedArtifact,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface Evidence {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for shortTitle\n     */\n    _shortTitle?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Evidence[];\n    /**\n     * A copyright statement relating to the evidence and/or its contents. Copyright statements\n     * are generally legal restrictions on the use and publishing of the evidence.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the evidence was published. The date must change\n     * when the business version changes and it must change if the status code changes. In\n     * addition, it should change when the substantive content of the evidence changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the evidence from a consumer's perspective.\n     */\n    description?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the evidence content was or is planned to be in active use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A reference to a EvidenceVariable resource that defines the population for the research.\n     */\n    exposureBackground?: Reference;\n    /**\n     * A reference to a EvidenceVariable resource that defines the exposure for the research.\n     */\n    exposureVariant?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this evidence when it is represented in\n     * other formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the evidence is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the evidence. This name should be usable as an\n     * identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * A human-readable string to clarify or explain concepts about the resource.\n     */\n    note?: Annotation[];\n    /**\n     * A reference to a EvidenceVariable resomece that defines the outcome for the research.\n     */\n    outcome?: Reference[];\n    /**\n     * The name of the organization or individual that published the evidence.\n     */\n    publisher?: string;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a Evidence resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * The short title provides an alternate title for use in informal descriptive contexts\n     * where the full, formal title is not necessary.\n     */\n    shortTitle?: string;\n    /**\n     * The status of this evidence. Enables tracking the life-cycle of the content.\n     */\n    status?: EvidenceStatus;\n    /**\n     * An explanatory or alternate title for the Evidence giving additional information about\n     * its content.\n     */\n    subtitle?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the evidence.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the Evidence. Topics provide a high-level\n     * categorization grouping types of Evidences that can be useful for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * An absolute URI that is used to identify this evidence when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this evidence is (or will be) published. This URL can be the\n     * target of a canonical reference. It SHALL remain the same when the evidence is stored on\n     * different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate evidence instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the evidence when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the evidence author and is not expected to be globally unique. For example, it\n     * might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also\n     * no expectation that versions can be placed in a lexicographical sequence. To provide a\n     * version consistent with the Decision Support Service specification, use the format\n     * Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets,\n     * refer to the Decision Support Service specification. Note that a version is required for\n     * non-experimental active artifacts.\n     */\n    version?: string;\n}\n\n/**\n * The status of this evidence. Enables tracking the life-cycle of the content.\n */\nexport enum EvidenceStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    ContactDetail,\n    Period,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Annotation,\n    RelatedArtifact,\n    Narrative,\n    UsageContext,\n    DataRequirement,\n    Expression,\n    Reference,\n    TriggerDefinition,\n    Duration,\n    Timing\n} from \"./fhir._\";\n\nexport interface EvidenceVariable {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for shortTitle\n     */\n    _shortTitle?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * A characteristic that defines the members of the evidence element. Multiple\n     * characteristics are applied with \"and\" semantics.\n     */\n    characteristic?: EvidenceVariableCharacteristic[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: EvidenceVariable[];\n    /**\n     * A copyright statement relating to the evidence variable and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the evidence\n     * variable.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the evidence variable was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the evidence variable\n     * changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the evidence variable from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the evidence variable content was or is planned to be in active\n     * use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this evidence variable when it is\n     * represented in other formats, or referenced in a specification, model, design or an\n     * instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the evidence variable is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the evidence variable. This name should be usable as\n     * an identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * A human-readable string to clarify or explain concepts about the resource.\n     */\n    note?: Annotation[];\n    /**\n     * The name of the organization or individual that published the evidence variable.\n     */\n    publisher?: string;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a EvidenceVariable resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * The short title provides an alternate title for use in informal descriptive contexts\n     * where the full, formal title is not necessary.\n     */\n    shortTitle?: string;\n    /**\n     * The status of this evidence variable. Enables tracking the life-cycle of the content.\n     */\n    status?: EvidenceVariableStatus;\n    /**\n     * An explanatory or alternate title for the EvidenceVariable giving additional information\n     * about its content.\n     */\n    subtitle?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the evidence variable.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the EvidenceVariable. Topics provide a\n     * high-level categorization grouping types of EvidenceVariables that can be useful for\n     * filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * The type of evidence element, a population, an exposure, or an outcome.\n     */\n    type?: EvidenceVariableType;\n    /**\n     * An absolute URI that is used to identify this evidence variable when it is referenced in\n     * a specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this evidence variable is (or will be) published. This URL can\n     * be the target of a canonical reference. It SHALL remain the same when the evidence\n     * variable is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate evidence variable instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the evidence variable when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the evidence variable author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     * To provide a version consistent with the Decision Support Service specification, use the\n     * format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge\n     * assets, refer to the Decision Support Service specification. Note that a version is\n     * required for non-experimental active artifacts.\n     */\n    version?: string;\n}\n\n/**\n * The EvidenceVariable resource describes a \"PICO\" element that knowledge (evidence,\n * assertion, recommendation) is about.\n */\nexport interface EvidenceVariableCharacteristic {\n    /**\n     * Extensions for definitionCanonical\n     */\n    _definitionCanonical?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for exclude\n     */\n    _exclude?: Element;\n    /**\n     * Extensions for groupMeasure\n     */\n    _groupMeasure?: Element;\n    /**\n     * Extensions for participantEffectiveDateTime\n     */\n    _participantEffectiveDateTime?: Element;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionCanonical?: string;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionCodeableConcept?: CodeableConcept;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionDataRequirement?: DataRequirement;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionExpression?: Expression;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionReference?: Reference;\n    /**\n     * Define members of the evidence element using Codes (such as condition, medication, or\n     * observation), Expressions ( using an expression language such as FHIRPath or CQL) or\n     * DataRequirements (such as Diabetes diagnosis onset in the last year).\n     */\n    definitionTriggerDefinition?: TriggerDefinition;\n    /**\n     * A short, natural language description of the characteristic that could be used to\n     * communicate the criteria to an end-user.\n     */\n    description?: string;\n    /**\n     * When true, members with this characteristic are excluded from the element.\n     */\n    exclude?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Indicates how elements are aggregated within the study effective period.\n     */\n    groupMeasure?: GroupMeasure;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indicates what effective period the study covers.\n     */\n    participantEffectiveDateTime?: string;\n    /**\n     * Indicates what effective period the study covers.\n     */\n    participantEffectiveDuration?: Duration;\n    /**\n     * Indicates what effective period the study covers.\n     */\n    participantEffectivePeriod?: Period;\n    /**\n     * Indicates what effective period the study covers.\n     */\n    participantEffectiveTiming?: Timing;\n    /**\n     * Indicates duration from the participant's study entry.\n     */\n    timeFromStart?: Duration;\n    /**\n     * Use UsageContext to define the members of the population, such as Age Ranges, Genders,\n     * Settings.\n     */\n    usageContext?: UsageContext[];\n}\n\n/**\n * Indicates how elements are aggregated within the study effective period.\n */\nexport enum GroupMeasure {\n    Mean = \"mean\",\n    MeanOfMean = \"mean-of-mean\",\n    MeanOfMedian = \"mean-of-median\",\n    Median = \"median\",\n    MedianOfMean = \"median-of-mean\",\n    MedianOfMedian = \"median-of-median\",\n}\n\n/**\n * The status of this evidence variable. Enables tracking the life-cycle of the content.\n */\nexport enum EvidenceVariableStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}\n\n/**\n * The type of evidence element, a population, an exposure, or an outcome.\n */\nexport enum EvidenceVariableType {\n    Continuous = \"continuous\",\n    Descriptive = \"descriptive\",\n    Dichotomous = \"dichotomous\",\n}\n","import {\n    Element,\n    ContactDetail,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface ExampleScenario {\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Actor participating in the resource.\n     */\n    actor?: ExampleScenarioActor[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ExampleScenario[];\n    /**\n     * A copyright statement relating to the example scenario and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the example\n     * scenario.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the example scenario was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the example scenario\n     * changes. (e.g. the 'content logical definition').\n     */\n    date?: string;\n    /**\n     * A Boolean value to indicate that this example scenario is authored for testing purposes\n     * (or education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this example scenario when it is represented\n     * in other formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Each resource and each version that is present in the workflow.\n     */\n    instance?: ExampleScenarioInstance[];\n    /**\n     * A legal or geographic region in which the example scenario is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the example scenario. This name should be usable as\n     * an identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * Each major process - a group of operations.\n     */\n    process?: ExampleScenarioProcess[];\n    /**\n     * The name of the organization or individual that published the example scenario.\n     */\n    publisher?: string;\n    /**\n     * What the example scenario resource is created for. This should not be used to show the\n     * business purpose of the scenario itself, but the purpose of documenting a scenario.\n     */\n    purpose?: string;\n    /**\n     * This is a ExampleScenario resource\n     */\n    resourceType?: any;\n    /**\n     * The status of this example scenario. Enables tracking the life-cycle of the content.\n     */\n    status?: ExampleScenarioStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * An absolute URI that is used to identify this example scenario when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this example scenario is (or will be) published. This URL can\n     * be the target of a canonical reference. It SHALL remain the same when the example\n     * scenario is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate example scenario instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the example scenario when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the example scenario author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n    /**\n     * Another nested workflow.\n     */\n    workflow?: string[];\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioActor {\n    /**\n     * Extensions for actorId\n     */\n    _actorId?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * ID or acronym of actor.\n     */\n    actorId?: string;\n    /**\n     * The description of the actor.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The name of the actor as shown in the page.\n     */\n    name?: string;\n    /**\n     * The type of actor - person or system.\n     */\n    type?: ExampleScenarioActorType;\n}\n\n/**\n * The type of actor - person or system.\n */\nexport enum ExampleScenarioActorType {\n    Entity = \"entity\",\n    Person = \"person\",\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioInstance {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for resourceId\n     */\n    _resourceId?: Element;\n    /**\n     * Extensions for resourceType\n     */\n    _resourceType?: Element;\n    /**\n     * Resources contained in the instance (e.g. the observations contained in a bundle).\n     */\n    containedInstance?: ExampleScenarioContainedInstance[];\n    /**\n     * Human-friendly description of the resource instance.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A short name for the resource instance.\n     */\n    name?: string;\n    /**\n     * The id of the resource for referencing.\n     */\n    resourceId?: string;\n    /**\n     * The type of the resource.\n     */\n    resourceType?: string;\n    /**\n     * A specific version of the resource.\n     */\n    version?: ExampleScenarioVersion[];\n}\n\n/**\n * Example of workflow instance.\n *\n * Each resource instance used by the initiator.\n *\n * Each resource instance used by the responder.\n */\nexport interface ExampleScenarioContainedInstance {\n    /**\n     * Extensions for resourceId\n     */\n    _resourceId?: Element;\n    /**\n     * Extensions for versionId\n     */\n    _versionId?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Each resource contained in the instance.\n     */\n    resourceId?: string;\n    /**\n     * A specific version of a resource contained in the instance.\n     */\n    versionId?: string;\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioVersion {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for versionId\n     */\n    _versionId?: Element;\n    /**\n     * The description of the resource version.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The identifier of a specific version of a resource.\n     */\n    versionId?: string;\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioAlternative {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * A human-readable description of the alternative explaining when the alternative should\n     * occur rather than the base step.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * What happens in each alternative option.\n     */\n    step?: ExampleScenarioStep[];\n    /**\n     * The label to display for the alternative that gives a sense of the circumstance in which\n     * the alternative should be invoked.\n     */\n    title?: string;\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioStep {\n    /**\n     * Extensions for pause\n     */\n    _pause?: Element;\n    /**\n     * Indicates an alternative step that can be taken instead of the operations on the base\n     * step in exceptional/atypical circumstances.\n     */\n    alternative?: ExampleScenarioAlternative[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Each interaction or action.\n     */\n    operation?: ExampleScenarioOperation;\n    /**\n     * If there is a pause in the flow.\n     */\n    pause?: boolean;\n    /**\n     * Nested process.\n     */\n    process?: ExampleScenarioProcess[];\n}\n\n/**\n * Example of workflow instance.\n */\nexport interface ExampleScenarioProcess {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for postConditions\n     */\n    _postConditions?: Element;\n    /**\n     * Extensions for preConditions\n     */\n    _preConditions?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * A longer description of the group of operations.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Description of final status after the process ends.\n     */\n    postConditions?: string;\n    /**\n     * Description of initial status before the process starts.\n     */\n    preConditions?: string;\n    /**\n     * Each step of the process.\n     */\n    step?: ExampleScenarioStep[];\n    /**\n     * The diagram title of the group of operations.\n     */\n    title?: string;\n}\n\n\n/**\n * Each interaction or action.\n *\n * Example of workflow instance.\n */\nexport interface ExampleScenarioOperation {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for initiator\n     */\n    _initiator?: Element;\n    /**\n     * Extensions for initiatorActive\n     */\n    _initiatorActive?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for number\n     */\n    _number?: Element;\n    /**\n     * Extensions for receiver\n     */\n    _receiver?: Element;\n    /**\n     * Extensions for receiverActive\n     */\n    _receiverActive?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * A comment to be inserted in the diagram.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Who starts the transaction.\n     */\n    initiator?: string;\n    /**\n     * Whether the initiator is deactivated right after the transaction.\n     */\n    initiatorActive?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The human-friendly name of the interaction.\n     */\n    name?: string;\n    /**\n     * The sequential number of the interaction, e.g. 1.2.5.\n     */\n    number?: string;\n    /**\n     * Who receives the transaction.\n     */\n    receiver?: string;\n    /**\n     * Whether the receiver is deactivated right after the transaction.\n     */\n    receiverActive?: boolean;\n    /**\n     * Each resource instance used by the initiator.\n     */\n    request?: ExampleScenarioContainedInstance;\n    /**\n     * Each resource instance used by the responder.\n     */\n    response?: ExampleScenarioContainedInstance;\n    /**\n     * The type of operation - CRUD.\n     */\n    type?: string;\n}\n\n/**\n * The status of this example scenario. Enables tracking the life-cycle of the content.\n */\nexport enum ExampleScenarioStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Period,\n    Reference,\n    Extension,\n    Attachment,\n    CodeableConcept,\n    Identifier,\n    Meta,\n    Narrative,\n    Address,\n    Money,\n    Quantity,\n    Coding\n} from \"./fhir._\";\n\nexport interface ExplanationOfBenefit {\n    /**\n     * Extensions for created\n     */\n    _created?: Element;\n    /**\n     * Extensions for disposition\n     */\n    _disposition?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for outcome\n     */\n    _outcome?: Element;\n    /**\n     * Extensions for preAuthRef\n     */\n    _preAuthRef?: Element[];\n    /**\n     * Extensions for precedence\n     */\n    _precedence?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * Details of a accident which resulted in injuries which required the products and services\n     * listed in the claim.\n     */\n    accident?: ExplanationOfBenefitAccident;\n    /**\n     * The first-tier service adjudications for payor added product or service lines.\n     */\n    addItem?: ExplanationOfBenefitAddItem[];\n    /**\n     * The adjudication results which are presented at the header level rather than at the\n     * line-item or add-item levels.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * Balance by Benefit Category.\n     */\n    benefitBalance?: ExplanationOfBenefitBenefitBalance[];\n    /**\n     * The term of the benefits documented in this response.\n     */\n    benefitPeriod?: Period;\n    /**\n     * The period for which charges are being submitted.\n     */\n    billablePeriod?: Period;\n    /**\n     * The members of the team who provided the products and services.\n     */\n    careTeam?: ExplanationOfBenefitCareTeam[];\n    /**\n     * The business identifier for the instance of the adjudication request: claim\n     * predetermination or preauthorization.\n     */\n    claim?: Reference;\n    /**\n     * The business identifier for the instance of the adjudication response: claim,\n     * predetermination or preauthorization response.\n     */\n    claimResponse?: Reference;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ExplanationOfBenefit[];\n    /**\n     * The date this resource was created.\n     */\n    created?: string;\n    /**\n     * Information about diagnoses relevant to the claim items.\n     */\n    diagnosis?: ExplanationOfBenefitDiagnosis[];\n    /**\n     * A human readable description of the status of the adjudication.\n     */\n    disposition?: string;\n    /**\n     * Individual who created the claim, predetermination or preauthorization.\n     */\n    enterer?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Facility where the services were provided.\n     */\n    facility?: Reference;\n    /**\n     * The actual form, by reference or inclusion, for printing the content or an EOB.\n     */\n    form?: Attachment;\n    /**\n     * A code for the form to be used for printing the content.\n     */\n    formCode?: CodeableConcept;\n    /**\n     * A code, used only on a response to a preauthorization, to indicate whether the benefits\n     * payable have been reserved and for whom.\n     */\n    fundsReserve?: CodeableConcept;\n    /**\n     * A code to indicate whether and for whom funds are to be reserved for future claims.\n     */\n    fundsReserveRequested?: CodeableConcept;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier assigned to this explanation of benefit.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Financial instruments for reimbursement for the health care products and services\n     * specified on the claim.\n     */\n    insurance?: ExplanationOfBenefitInsurance[];\n    /**\n     * The party responsible for authorization, adjudication and reimbursement.\n     */\n    insurer?: Reference;\n    /**\n     * A claim line. Either a simple (a product or service) or a 'group' of details which can\n     * also be a simple items or groups of sub-details.\n     */\n    item?: ExplanationOfBenefitItem[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Original prescription which has been superseded by this prescription to support the\n     * dispensing of pharmacy services, medications or products.\n     */\n    originalPrescription?: Reference;\n    /**\n     * The outcome of the claim, predetermination, or preauthorization processing.\n     */\n    outcome?: string;\n    /**\n     * The party to whom the professional services and/or products have been supplied or are\n     * being considered and for whom actual for forecast reimbursement is sought.\n     */\n    patient?: Reference;\n    /**\n     * The party to be reimbursed for cost of the products and services according to the terms\n     * of the policy.\n     */\n    payee?: ExplanationOfBenefitPayee;\n    /**\n     * Payment details for the adjudication of the claim.\n     */\n    payment?: ExplanationOfBenefitPayment;\n    /**\n     * Reference from the Insurer which is used in later communications which refers to this\n     * adjudication.\n     */\n    preAuthRef?: string[];\n    /**\n     * The timeframe during which the supplied preauthorization reference may be quoted on\n     * claims to obtain the adjudication as provided.\n     */\n    preAuthRefPeriod?: Period[];\n    /**\n     * This indicates the relative order of a series of EOBs related to different coverages for\n     * the same suite of services.\n     */\n    precedence?: number;\n    /**\n     * Prescription to support the dispensing of pharmacy, device or vision products.\n     */\n    prescription?: Reference;\n    /**\n     * The provider-required urgency of processing the request. Typical values include: stat,\n     * routine deferred.\n     */\n    priority?: CodeableConcept;\n    /**\n     * Procedures performed on the patient relevant to the billing items with the claim.\n     */\n    procedure?: ExplanationOfBenefitProcedure[];\n    /**\n     * A note that describes or explains adjudication results in a human readable form.\n     */\n    processNote?: ExplanationOfBenefitProcessNote[];\n    /**\n     * The provider which is responsible for the claim, predetermination or preauthorization.\n     */\n    provider?: Reference;\n    /**\n     * A reference to a referral resource.\n     */\n    referral?: Reference;\n    /**\n     * Other claims which are related to this claim such as prior submissions or claims for\n     * related services or for the same event.\n     */\n    related?: ExplanationOfBenefitRelated[];\n    /**\n     * This is a ExplanationOfBenefit resource\n     */\n    resourceType?: any;\n    /**\n     * The status of the resource instance.\n     */\n    status?: ExplanationOfBenefitStatus;\n    /**\n     * A finer grained suite of claim type codes which may convey additional information such as\n     * Inpatient vs Outpatient and/or a specialty service.\n     */\n    subType?: CodeableConcept;\n    /**\n     * Additional information codes regarding exceptions, special considerations, the condition,\n     * situation, prior or concurrent issues.\n     */\n    supportingInfo?: ExplanationOfBenefitSupportingInfo[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Categorized monetary totals for the adjudication.\n     */\n    total?: ExplanationOfBenefitTotal[];\n    /**\n     * The category of claim, e.g. oral, pharmacy, vision, institutional, professional.\n     */\n    type?: CodeableConcept;\n    /**\n     * A code to indicate whether the nature of the request is: to request adjudication of\n     * products and services previously rendered; or requesting authorization and adjudication\n     * for provision in the future; or requesting the non-binding adjudication of the listed\n     * products and services which could be provided in the future.\n     */\n    use?: string;\n}\n\n/**\n * Details of a accident which resulted in injuries which required the products and services\n * listed in the claim.\n *\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitAccident {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Date of an accident event  related to the products and services contained in the claim.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The physical location of the accident event.\n     */\n    locationAddress?: Address;\n    /**\n     * The physical location of the accident event.\n     */\n    locationReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The type or context of the accident event for the purposes of selection of potential\n     * insurance coverages and determination of coordination between insurers.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitAddItem {\n    /**\n     * Extensions for detailSequence\n     */\n    _detailSequence?: Element[];\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for itemSequence\n     */\n    _itemSequence?: Element[];\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * Extensions for subDetailSequence\n     */\n    _subDetailSequence?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * Physical service site on the patient (limb, tooth, etc.).\n     */\n    bodySite?: CodeableConcept;\n    /**\n     * The second-tier service adjudications for payor added services.\n     */\n    detail?: ExplanationOfBenefitDetail1[];\n    /**\n     * The sequence number of the details within the claim item which this line is intended to\n     * replace.\n     */\n    detailSequence?: number[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Claim items which this service line is intended to replace.\n     */\n    itemSequence?: number[];\n    /**\n     * Where the product or service was provided.\n     */\n    locationAddress?: Address;\n    /**\n     * Where the product or service was provided.\n     */\n    locationCodeableConcept?: CodeableConcept;\n    /**\n     * Where the product or service was provided.\n     */\n    locationReference?: Reference;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The providers who are authorized for the services rendered to the patient.\n     */\n    provider?: Reference[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * The sequence number of the sub-details woithin the details within the claim item which\n     * this line is intended to replace.\n     */\n    subDetailSequence?: number[];\n    /**\n     * A region or surface of the bodySite, e.g. limb region or tooth surface(s).\n     */\n    subSite?: CodeableConcept[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitAdjudication {\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * Monetary amount associated with the category.\n     */\n    amount?: Money;\n    /**\n     * A code to indicate the information type of this adjudication record. Information types\n     * may include: the value submitted, maximum values or percentages allowed or payable under\n     * the plan, amounts that the patient is responsible for in-aggregate or pertaining to this\n     * item, amounts paid by other coverages, and the benefit payable for this item.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A code supporting the understanding of the adjudication result and explaining variance\n     * from expected amount.\n     */\n    reason?: CodeableConcept;\n    /**\n     * A non-monetary value associated with the category. Mutually exclusive to the amount\n     * element above.\n     */\n    value?: number;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitDetail1 {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The third-tier service adjudications for payor added services.\n     */\n    subDetail?: ExplanationOfBenefitSubDetail1[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitSubDetail1 {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitBenefitBalance {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for excluded\n     */\n    _excluded?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * A richer description of the benefit or services covered.\n     */\n    description?: string;\n    /**\n     * True if the indicated class of service is excluded from the plan, missing or False\n     * indicates the product or service is included in the coverage.\n     */\n    excluded?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Benefits Used to date.\n     */\n    financial?: ExplanationOfBenefitFinancial[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A short name or tag for the benefit.\n     */\n    name?: string;\n    /**\n     * Is a flag to indicate whether the benefits refer to in-network providers or\n     * out-of-network providers.\n     */\n    network?: CodeableConcept;\n    /**\n     * The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual\n     * visits'.\n     */\n    term?: CodeableConcept;\n    /**\n     * Indicates if the benefits apply to an individual or to the family.\n     */\n    unit?: CodeableConcept;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitFinancial {\n    /**\n     * Extensions for allowedString\n     */\n    _allowedString?: Element;\n    /**\n     * Extensions for allowedUnsignedInt\n     */\n    _allowedUnsignedInt?: Element;\n    /**\n     * Extensions for usedUnsignedInt\n     */\n    _usedUnsignedInt?: Element;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedMoney?: Money;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedString?: string;\n    /**\n     * The quantity of the benefit which is permitted under the coverage.\n     */\n    allowedUnsignedInt?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Classification of benefit being provided.\n     */\n    type?: CodeableConcept;\n    /**\n     * The quantity of the benefit which have been consumed to date.\n     */\n    usedMoney?: Money;\n    /**\n     * The quantity of the benefit which have been consumed to date.\n     */\n    usedUnsignedInt?: number;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitCareTeam {\n    /**\n     * Extensions for responsible\n     */\n    _responsible?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Member of the team who provided the product or service.\n     */\n    provider?: Reference;\n    /**\n     * The qualification of the practitioner which is applicable for this service.\n     */\n    qualification?: CodeableConcept;\n    /**\n     * The party who is billing and/or responsible for the claimed products or services.\n     */\n    responsible?: boolean;\n    /**\n     * The lead, assisting or supervising practitioner and their discipline if a\n     * multidisciplinary team.\n     */\n    role?: CodeableConcept;\n    /**\n     * A number to uniquely identify care team entries.\n     */\n    sequence?: number;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitDiagnosis {\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisCodeableConcept?: CodeableConcept;\n    /**\n     * The nature of illness or problem in a coded form or as a reference to an external defined\n     * Condition.\n     */\n    diagnosisReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indication of whether the diagnosis was present on admission to a facility.\n     */\n    onAdmission?: CodeableConcept;\n    /**\n     * A package billing code or bundle code used to group products and services to a particular\n     * health condition (such as heart attack) which is based on a predetermined grouping code\n     * system.\n     */\n    packageCode?: CodeableConcept;\n    /**\n     * A number to uniquely identify diagnosis entries.\n     */\n    sequence?: number;\n    /**\n     * When the condition was observed or the relative ranking.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitInsurance {\n    /**\n     * Extensions for focal\n     */\n    _focal?: Element;\n    /**\n     * Extensions for preAuthRef\n     */\n    _preAuthRef?: Element[];\n    /**\n     * Reference to the insurance card level information contained in the Coverage resource. The\n     * coverage issuing insurer will use these details to locate the patient's actual coverage\n     * within the insurer's information system.\n     */\n    coverage?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A flag to indicate that this Coverage is to be used for adjudication of this claim when\n     * set to true.\n     */\n    focal?: boolean;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference numbers previously provided by the insurer to the provider to be quoted on\n     * subsequent claims containing services or products related to the prior authorization.\n     */\n    preAuthRef?: string[];\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitItem {\n    /**\n     * Extensions for careTeamSequence\n     */\n    _careTeamSequence?: Element[];\n    /**\n     * Extensions for diagnosisSequence\n     */\n    _diagnosisSequence?: Element[];\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for informationSequence\n     */\n    _informationSequence?: Element[];\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for procedureSequence\n     */\n    _procedureSequence?: Element[];\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Extensions for servicedDate\n     */\n    _servicedDate?: Element;\n    /**\n     * If this item is a group then the values here are a summary of the adjudication of the\n     * detail items. If this item is a simple product or service then this is the result of the\n     * adjudication of this item.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * Physical service site on the patient (limb, tooth, etc.).\n     */\n    bodySite?: CodeableConcept;\n    /**\n     * Care team members related to this service or product.\n     */\n    careTeamSequence?: number[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * Second-tier of goods and services.\n     */\n    detail?: ExplanationOfBenefitDetail[];\n    /**\n     * Diagnoses applicable for this service or product.\n     */\n    diagnosisSequence?: number[];\n    /**\n     * A billed item may include goods or services provided in multiple encounters.\n     */\n    encounter?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Exceptions, special conditions and supporting information applicable for this service or\n     * product.\n     */\n    informationSequence?: number[];\n    /**\n     * Where the product or service was provided.\n     */\n    locationAddress?: Address;\n    /**\n     * Where the product or service was provided.\n     */\n    locationCodeableConcept?: CodeableConcept;\n    /**\n     * Where the product or service was provided.\n     */\n    locationReference?: Reference;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * Procedures applicable for this service or product.\n     */\n    procedureSequence?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A number to uniquely identify item entries.\n     */\n    sequence?: number;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedDate?: string;\n    /**\n     * The date or dates when the service or product was supplied, performed or completed.\n     */\n    servicedPeriod?: Period;\n    /**\n     * A region or surface of the bodySite, e.g. limb region or tooth surface(s).\n     */\n    subSite?: CodeableConcept[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitDetail {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A claim detail line. Either a simple (a product or service) or a 'group' of sub-details\n     * which are simple items.\n     */\n    sequence?: number;\n    /**\n     * Third-tier of goods and services.\n     */\n    subDetail?: ExplanationOfBenefitSubDetail[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitSubDetail {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for noteNumber\n     */\n    _noteNumber?: Element[];\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The adjudication results.\n     */\n    adjudication?: ExplanationOfBenefitAdjudication[];\n    /**\n     * Code to identify the general type of benefits under which products and services are\n     * provided.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A real number that represents a multiplier used in determining the overall value of\n     * services delivered and/or goods received. The concept of a Factor allows for a discount\n     * or surcharge multiplier to be applied to a monetary amount.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Item typification or modifiers codes to convey additional context for the product or\n     * service.\n     */\n    modifier?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The quantity times the unit price for an additional service or product or charge.\n     */\n    net?: Money;\n    /**\n     * The numbers associated with notes below which apply to the adjudication of this item.\n     */\n    noteNumber?: number[];\n    /**\n     * When the value is a group code then this item collects a set of related claim details,\n     * otherwise this contains the product, service, drug or other billing code for the item.\n     */\n    productOrService?: CodeableConcept;\n    /**\n     * Identifies the program under which this may be recovered.\n     */\n    programCode?: CodeableConcept[];\n    /**\n     * The number of repetitions of a service or product.\n     */\n    quantity?: Quantity;\n    /**\n     * The type of revenue or cost center providing the product and/or service.\n     */\n    revenue?: CodeableConcept;\n    /**\n     * A claim detail line. Either a simple (a product or service) or a 'group' of sub-details\n     * which are simple items.\n     */\n    sequence?: number;\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n    /**\n     * If the item is not a group then this is the fee for the product or service, otherwise\n     * this is the total of the fees for the details of the group.\n     */\n    unitPrice?: Money;\n}\n\n/**\n * The party to be reimbursed for cost of the products and services according to the terms\n * of the policy.\n *\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitPayee {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference to the individual or organization to whom any payment will be made.\n     */\n    party?: Reference;\n    /**\n     * Type of Party to be reimbursed: Subscriber, provider, other.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Payment details for the adjudication of the claim.\n *\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitPayment {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Total amount of all adjustments to this payment included in this transaction which are\n     * not related to this claim's adjudication.\n     */\n    adjustment?: Money;\n    /**\n     * Reason for the payment adjustment.\n     */\n    adjustmentReason?: CodeableConcept;\n    /**\n     * Benefits payable less any payment adjustment.\n     */\n    amount?: Money;\n    /**\n     * Estimated date the payment will be issued or the actual issue date of payment.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Issuer's unique identifier for the payment instrument.\n     */\n    identifier?: Identifier;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Whether this represents partial or complete payment of the benefits payable.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitProcedure {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Date and optionally time the procedure was performed.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The code or reference to a Procedure resource which identifies the clinical intervention\n     * performed.\n     */\n    procedureCodeableConcept?: CodeableConcept;\n    /**\n     * The code or reference to a Procedure resource which identifies the clinical intervention\n     * performed.\n     */\n    procedureReference?: Reference;\n    /**\n     * A number to uniquely identify procedure entries.\n     */\n    sequence?: number;\n    /**\n     * When the condition was observed or the relative ranking.\n     */\n    type?: CodeableConcept[];\n    /**\n     * Unique Device Identifiers associated with this line item.\n     */\n    udi?: Reference[];\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitProcessNote {\n    /**\n     * Extensions for number\n     */\n    _number?: Element;\n    /**\n     * Extensions for text\n     */\n    _text?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A code to define the language used in the text of the note.\n     */\n    language?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A number to uniquely identify a note entry.\n     */\n    number?: number;\n    /**\n     * The explanation or description associated with the processing.\n     */\n    text?: string;\n    /**\n     * The business purpose of the note text.\n     */\n    type?: ExplanationOfBenefitProcessNoteType;\n}\n\n/**\n * The business purpose of the note text.\n */\nexport enum ExplanationOfBenefitProcessNoteType {\n    Display = \"display\",\n    Print = \"print\",\n    Printoper = \"printoper\",\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitRelated {\n    /**\n     * Reference to a related claim.\n     */\n    claim?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An alternate organizational reference to the case or file to which this particular claim\n     * pertains.\n     */\n    reference?: Identifier;\n    /**\n     * A code to convey how the claims are related.\n     */\n    relationship?: CodeableConcept;\n}\n\n/**\n * The status of the resource instance.\n */\nexport enum ExplanationOfBenefitStatus {\n    Active = \"active\",\n    Cancelled = \"cancelled\",\n    Draft = \"draft\",\n    EnteredInError = \"entered-in-error\",\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitSupportingInfo {\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * Extensions for timingDate\n     */\n    _timingDate?: Element;\n    /**\n     * Extensions for valueBoolean\n     */\n    _valueBoolean?: Element;\n    /**\n     * Extensions for valueString\n     */\n    _valueString?: Element;\n    /**\n     * The general class of the information supplied: information; exception; accident,\n     * employment; onset, etc.\n     */\n    category?: CodeableConcept;\n    /**\n     * System and code pertaining to the specific information regarding special conditions\n     * relating to the setting, treatment or patient  for which care is sought.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Provides the reason in the situation where a reason code is required in addition to the\n     * content.\n     */\n    reason?: Coding;\n    /**\n     * A number to uniquely identify supporting information entries.\n     */\n    sequence?: number;\n    /**\n     * The date when or period to which this information refers.\n     */\n    timingDate?: string;\n    /**\n     * The date when or period to which this information refers.\n     */\n    timingPeriod?: Period;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueAttachment?: Attachment;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueBoolean?: boolean;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueQuantity?: Quantity;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueReference?: Reference;\n    /**\n     * Additional data or information such as resources, documents, images etc. including\n     * references to the data or the actual inclusion of the data.\n     */\n    valueString?: string;\n}\n\n/**\n * This resource provides: the claim details; adjudication details from the processing of a\n * Claim; and optionally account balance information, for informing the subscriber of the\n * benefits provided.\n */\nexport interface ExplanationOfBenefitTotal {\n    /**\n     * Monetary total amount associated with the category.\n     */\n    amount?: Money;\n    /**\n     * A code to indicate the information type of this adjudication record. Information types\n     * may include: the value submitted, maximum values or percentages allowed or payable under\n     * the plan, amounts that the patient is responsible for in aggregate or pertaining to this\n     * item, amounts paid by other coverages, and the benefit payable for this item.\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n","import {\n    Element,\n    Age,\n    Range,\n    Period,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Reference,\n    Narrative\n} from \"./fhir._\";\n\nexport interface FamilyMemberHistory {\n    /**\n     * Extensions for ageString\n     */\n    _ageString?: Element;\n    /**\n     * Extensions for bornDate\n     */\n    _bornDate?: Element;\n    /**\n     * Extensions for bornString\n     */\n    _bornString?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for deceasedBoolean\n     */\n    _deceasedBoolean?: Element;\n    /**\n     * Extensions for deceasedDate\n     */\n    _deceasedDate?: Element;\n    /**\n     * Extensions for deceasedString\n     */\n    _deceasedString?: Element;\n    /**\n     * Extensions for estimatedAge\n     */\n    _estimatedAge?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for instantiatesUri\n     */\n    _instantiatesUri?: Element[];\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The age of the relative at the time the family member history is recorded.\n     */\n    ageAge?: Age;\n    /**\n     * The age of the relative at the time the family member history is recorded.\n     */\n    ageRange?: Range;\n    /**\n     * The age of the relative at the time the family member history is recorded.\n     */\n    ageString?: string;\n    /**\n     * The actual or approximate date of birth of the relative.\n     */\n    bornDate?: string;\n    /**\n     * The actual or approximate date of birth of the relative.\n     */\n    bornPeriod?: Period;\n    /**\n     * The actual or approximate date of birth of the relative.\n     */\n    bornString?: string;\n    /**\n     * The significant Conditions (or condition) that the family member had. This is a repeating\n     * section to allow a system to represent more than one condition per resource, though there\n     * is nothing stopping multiple resources - one per condition.\n     */\n    condition?: FamilyMemberHistoryCondition[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: FamilyMemberHistory[];\n    /**\n     * Describes why the family member's history is not available.\n     */\n    dataAbsentReason?: CodeableConcept;\n    /**\n     * The date (and possibly time) when the family member history was recorded or last updated.\n     */\n    date?: string;\n    /**\n     * Deceased flag or the actual or approximate age of the relative at the time of death for\n     * the family member history record.\n     */\n    deceasedAge?: Age;\n    /**\n     * Deceased flag or the actual or approximate age of the relative at the time of death for\n     * the family member history record.\n     */\n    deceasedBoolean?: boolean;\n    /**\n     * Deceased flag or the actual or approximate age of the relative at the time of death for\n     * the family member history record.\n     */\n    deceasedDate?: string;\n    /**\n     * Deceased flag or the actual or approximate age of the relative at the time of death for\n     * the family member history record.\n     */\n    deceasedRange?: Range;\n    /**\n     * Deceased flag or the actual or approximate age of the relative at the time of death for\n     * the family member history record.\n     */\n    deceasedString?: string;\n    /**\n     * If true, indicates that the age value specified is an estimated value.\n     */\n    estimatedAge?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this family member history by the performer or other\n     * systems which remain constant as the resource is updated and propagates from server to\n     * server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that\n     * is adhered to in whole or in part by this FamilyMemberHistory.\n     */\n    instantiatesCanonical?: string[];\n    /**\n     * The URL pointing to an externally maintained protocol, guideline, orderset or other\n     * definition that is adhered to in whole or in part by this FamilyMemberHistory.\n     */\n    instantiatesUri?: string[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This will either be a name or a description; e.g. \"Aunt Susan\", \"my cousin with the red\n     * hair\".\n     */\n    name?: string;\n    /**\n     * This property allows a non condition-specific note to the made about the related person.\n     * Ideally, the note would be in the condition property, but this is not always possible.\n     */\n    note?: Annotation[];\n    /**\n     * The person who this history concerns.\n     */\n    patient?: Reference;\n    /**\n     * Describes why the family member history occurred in coded or textual form.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that\n     * justifies this family member history event.\n     */\n    reasonReference?: Reference[];\n    /**\n     * The type of relationship this person has to the patient (father, mother, brother etc.).\n     */\n    relationship?: CodeableConcept;\n    /**\n     * This is a FamilyMemberHistory resource\n     */\n    resourceType?: any;\n    /**\n     * The birth sex of the family member.\n     */\n    sex?: CodeableConcept;\n    /**\n     * A code specifying the status of the record of the family history of a specific family\n     * member.\n     */\n    status?: FamilyMemberHistoryStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Significant health conditions for a person related to the patient relevant in the context\n * of care for the patient.\n */\nexport interface FamilyMemberHistoryCondition {\n    /**\n     * Extensions for contributedToDeath\n     */\n    _contributedToDeath?: Element;\n    /**\n     * Extensions for onsetString\n     */\n    _onsetString?: Element;\n    /**\n     * The actual condition specified. Could be a coded condition (like MI or Diabetes) or a\n     * less specific string like 'cancer' depending on how much is known about the condition and\n     * the capabilities of the creating system.\n     */\n    code?: CodeableConcept;\n    /**\n     * This condition contributed to the cause of death of the related person. If\n     * contributedToDeath is not populated, then it is unknown.\n     */\n    contributedToDeath?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An area where general notes can be placed about this specific condition.\n     */\n    note?: Annotation[];\n    /**\n     * Either the age of onset, range of approximate age or descriptive string can be recorded.\n     * For conditions with multiple occurrences, this describes the first known occurrence.\n     */\n    onsetAge?: Age;\n    /**\n     * Either the age of onset, range of approximate age or descriptive string can be recorded.\n     * For conditions with multiple occurrences, this describes the first known occurrence.\n     */\n    onsetPeriod?: Period;\n    /**\n     * Either the age of onset, range of approximate age or descriptive string can be recorded.\n     * For conditions with multiple occurrences, this describes the first known occurrence.\n     */\n    onsetRange?: Range;\n    /**\n     * Either the age of onset, range of approximate age or descriptive string can be recorded.\n     * For conditions with multiple occurrences, this describes the first known occurrence.\n     */\n    onsetString?: string;\n    /**\n     * Indicates what happened following the condition.  If the condition resulted in death,\n     * deceased date is captured on the relation.\n     */\n    outcome?: CodeableConcept;\n}\n\n/**\n * A code specifying the status of the record of the family history of a specific family\n * member.\n */\nexport enum FamilyMemberHistoryStatus {\n    Completed = \"completed\",\n    EnteredInError = \"entered-in-error\",\n    HealthUnknown = \"health-unknown\",\n    Partial = \"partial\",\n}","import {\n    Element,\n    Reference,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Meta,\n    Period,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Flag {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * The person, organization or device that created the flag.\n     */\n    author?: Reference;\n    /**\n     * Allows a flag to be divided into different categories like clinical, administrative etc.\n     * Intended to be used as a means of filtering which flags are displayed to particular user\n     * or in a given context.\n     */\n    category?: CodeableConcept[];\n    /**\n     * The coded value or textual component of the flag to display to the user.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Flag[];\n    /**\n     * This alert is only relevant during the encounter.\n     */\n    encounter?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this flag by the performer or other systems which remain\n     * constant as the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period of time from the activation of the flag to inactivation of the flag. If the\n     * flag is active, the end of the period should be unspecified.\n     */\n    period?: Period;\n    /**\n     * This is a Flag resource\n     */\n    resourceType?: any;\n    /**\n     * Supports basic workflow.\n     */\n    status?: FlagStatus;\n    /**\n     * The patient, location, group, organization, or practitioner etc. this is about record\n     * this flag is associated with.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Supports basic workflow.\n */\nexport enum FlagStatus {\n    Active = \"active\",\n    EnteredInError = \"entered-in-error\",\n    Inactive = \"inactive\",\n}","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Narrative,\n    Quantity,\n    Ratio,\n    Duration,\n    Range\n} from \"./fhir._\";\n\nexport interface Goal {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lifecycleStatus\n     */\n    _lifecycleStatus?: Element;\n    /**\n     * Extensions for startDate\n     */\n    _startDate?: Element;\n    /**\n     * Extensions for statusDate\n     */\n    _statusDate?: Element;\n    /**\n     * Extensions for statusReason\n     */\n    _statusReason?: Element;\n    /**\n     * Describes the progression, or lack thereof, towards the goal against the target.\n     */\n    achievementStatus?: CodeableConcept;\n    /**\n     * The identified conditions and other health record elements that are intended to be\n     * addressed by the goal.\n     */\n    addresses?: Reference[];\n    /**\n     * Indicates a category the goal falls within.\n     */\n    category?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Goal[];\n    /**\n     * Human-readable and/or coded description of a specific desired objective of care, such as\n     * \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at\n     * wedding\".\n     */\n    description?: CodeableConcept;\n    /**\n     * Indicates whose goal this is - patient goal, practitioner goal, etc.\n     */\n    expressedBy?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this goal by the performer or other systems which remain\n     * constant as the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The state of the goal throughout its lifecycle.\n     */\n    lifecycleStatus?: LifecycleStatus;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Any comments related to the goal.\n     */\n    note?: Annotation[];\n    /**\n     * Identifies the change (or lack of change) at the point when the status of the goal is\n     * assessed.\n     */\n    outcomeCode?: CodeableConcept[];\n    /**\n     * Details of what's changed (or not changed).\n     */\n    outcomeReference?: Reference[];\n    /**\n     * Identifies the mutually agreed level of importance associated with reaching/sustaining\n     * the goal.\n     */\n    priority?: CodeableConcept;\n    /**\n     * This is a Goal resource\n     */\n    resourceType?: any;\n    /**\n     * The date or event after which the goal should begin being pursued.\n     */\n    startCodeableConcept?: CodeableConcept;\n    /**\n     * The date or event after which the goal should begin being pursued.\n     */\n    startDate?: string;\n    /**\n     * Identifies when the current status.  I.e. When initially created, when achieved, when\n     * cancelled, etc.\n     */\n    statusDate?: string;\n    /**\n     * Captures the reason for the current status.\n     */\n    statusReason?: string;\n    /**\n     * Identifies the patient, group or organization for whom the goal is being established.\n     */\n    subject?: Reference;\n    /**\n     * Indicates what should be done by when.\n     */\n    target?: GoalTarget[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The state of the goal throughout its lifecycle.\n */\nexport enum LifecycleStatus {\n    Accepted = \"accepted\",\n    Active = \"active\",\n    Cancelled = \"cancelled\",\n    Completed = \"completed\",\n    EnteredInError = \"entered-in-error\",\n    OnHold = \"on-hold\",\n    Planned = \"planned\",\n    Proposed = \"proposed\",\n    Rejected = \"rejected\",\n}\n\n/**\n * Describes the intended objective(s) for a patient, group or organization care, for\n * example, weight loss, restoring an activity of daily living, obtaining herd immunity via\n * immunization, meeting a process improvement objective, etc.\n */\nexport interface GoalTarget {\n    /**\n     * Extensions for detailBoolean\n     */\n    _detailBoolean?: Element;\n    /**\n     * Extensions for detailInteger\n     */\n    _detailInteger?: Element;\n    /**\n     * Extensions for detailString\n     */\n    _detailString?: Element;\n    /**\n     * Extensions for dueDate\n     */\n    _dueDate?: Element;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailBoolean?: boolean;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailCodeableConcept?: CodeableConcept;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailInteger?: number;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailQuantity?: Quantity;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailRange?: Range;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailRatio?: Ratio;\n    /**\n     * The target value of the focus to be achieved to signify the fulfillment of the goal, e.g.\n     * 150 pounds, 7.0%. Either the high or low or both values of the range can be specified.\n     * When a low value is missing, it indicates that the goal is achieved at any focus value at\n     * or below the high value. Similarly, if the high value is missing, it indicates that the\n     * goal is achieved at any focus value at or above the low value.\n     */\n    detailString?: string;\n    /**\n     * Indicates either the date or the duration after start by which the goal should be met.\n     */\n    dueDate?: string;\n    /**\n     * Indicates either the date or the duration after start by which the goal should be met.\n     */\n    dueDuration?: Duration;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The parameter whose value is being tracked, e.g. body weight, blood pressure, or\n     * hemoglobin A1c level.\n     */\n    measure?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}","import {\n    Element,\n    ContactDetail,\n    Extension,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface GraphDefinition {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: GraphDefinition[];\n    /**\n     * The date  (and optionally time) when the graph definition was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the graph definition\n     * changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the graph definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * A Boolean value to indicate that this graph definition is authored for testing purposes\n     * (or education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the graph definition is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Links this graph makes rules about.\n     */\n    link?: GraphDefinitionLink[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the graph definition. This name should be usable as\n     * an identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * The profile that describes the use of the base resource.\n     */\n    profile?: string;\n    /**\n     * The name of the organization or individual that published the graph definition.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this graph definition is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * This is a GraphDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * The type of FHIR resource at which instances of this graph start.\n     */\n    start?: string;\n    /**\n     * The status of this graph definition. Enables tracking the life-cycle of the content.\n     */\n    status?: GraphDefinitionStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * An absolute URI that is used to identify this graph definition when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this graph definition is (or will be) published. This URL can\n     * be the target of a canonical reference. It SHALL remain the same when the graph\n     * definition is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate graph definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the graph definition when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the graph definition author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n/**\n * A formal computable definition of a graph of resources - that is, a coherent set of\n * resources that form a graph by following references. The Graph Definition resource\n * defines a set and makes rules about the set.\n */\nexport interface GraphDefinitionTarget {\n    /**\n     * Extensions for params\n     */\n    _params?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Compartment Consistency Rules.\n     */\n    compartment?: GraphDefinitionCompartment[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Additional links from target resource.\n     */\n    link?: GraphDefinitionLink[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A set of parameters to look up.\n     */\n    params?: string;\n    /**\n     * Profile for the target resource.\n     */\n    profile?: string;\n    /**\n     * Type of resource this link refers to.\n     */\n    type?: string;\n}\n\n/**\n * A formal computable definition of a graph of resources - that is, a coherent set of\n * resources that form a graph by following references. The Graph Definition resource\n * defines a set and makes rules about the set.\n */\nexport interface GraphDefinitionLink {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for max\n     */\n    _max?: Element;\n    /**\n     * Extensions for min\n     */\n    _min?: Element;\n    /**\n     * Extensions for path\n     */\n    _path?: Element;\n    /**\n     * Extensions for sliceName\n     */\n    _sliceName?: Element;\n    /**\n     * Information about why this link is of interest in this graph definition.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Maximum occurrences for this link.\n     */\n    max?: string;\n    /**\n     * Minimum occurrences for this link.\n     */\n    min?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A FHIR expression that identifies one of FHIR References to other resources.\n     */\n    path?: string;\n    /**\n     * Which slice (if profiled).\n     */\n    sliceName?: string;\n    /**\n     * Potential target for the link.\n     */\n    target?: GraphDefinitionTarget[];\n}\n\n/**\n * A formal computable definition of a graph of resources - that is, a coherent set of\n * resources that form a graph by following references. The Graph Definition resource\n * defines a set and makes rules about the set.\n */\nexport interface GraphDefinitionCompartment {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for expression\n     */\n    _expression?: Element;\n    /**\n     * Extensions for rule\n     */\n    _rule?: Element;\n    /**\n     * Extensions for use\n     */\n    _use?: Element;\n    /**\n     * Identifies the compartment.\n     */\n    code?: string;\n    /**\n     * Documentation for FHIRPath expression.\n     */\n    description?: string;\n    /**\n     * Custom rule, as a FHIRPath expression.\n     */\n    expression?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * identical | matching | different | no-rule | custom.\n     */\n    rule?: Rule;\n    /**\n     * Defines how the compartment rule is used - whether it it is used to test whether\n     * resources are subject to the rule, or whether it is a rule that must be followed.\n     */\n    use?: GraphDefinitionCompartmentUse;\n}\n\n/**\n * identical | matching | different | no-rule | custom.\n */\nexport enum Rule {\n    Custom = \"custom\",\n    Different = \"different\",\n    Identical = \"identical\",\n    Matching = \"matching\",\n}\n\n/**\n * Defines how the compartment rule is used - whether it it is used to test whether\n * resources are subject to the rule, or whether it is a rule that must be followed.\n */\nexport enum GraphDefinitionCompartmentUse {\n    Condition = \"condition\",\n    Requirement = \"requirement\",\n}\n\n/**\n * The status of this graph definition. Enables tracking the life-cycle of the content.\n */\nexport enum GraphDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    CodeableConcept,\n    Extension,\n    Identifier,\n    Reference,\n    Meta,\n    Narrative,\n    Period,\n    Quantity,\n    Range\n} from \"./fhir._\";\n\nexport interface Group {\n    /**\n     * Extensions for active\n     */\n    _active?: Element;\n    /**\n     * Extensions for actual\n     */\n    _actual?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for quantity\n     */\n    _quantity?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Indicates whether the record for the group is available for use or is merely being\n     * retained for historical purposes.\n     */\n    active?: boolean;\n    /**\n     * If true, indicates that the resource refers to a specific group of real individuals.  If\n     * false, the group defines a set of intended individuals.\n     */\n    actual?: boolean;\n    /**\n     * Identifies traits whose presence r absence is shared by members of the group.\n     */\n    characteristic?: GroupCharacteristic[];\n    /**\n     * Provides a specific type of resource the group includes; e.g. \"cow\", \"syringe\", etc.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Group[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique business identifier for this group.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Entity responsible for defining and maintaining Group characteristics and/or registered\n     * members.\n     */\n    managingEntity?: Reference;\n    /**\n     * Identifies the resource instances that are members of the group.\n     */\n    member?: GroupMember[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A label assigned to the group for human identification and communication.\n     */\n    name?: string;\n    /**\n     * A count of the number of resource instances that are part of the group.\n     */\n    quantity?: number;\n    /**\n     * This is a Group resource\n     */\n    resourceType?: any;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Identifies the broad classification of the kind of resources the group includes.\n     */\n    type?: GroupType;\n}\n\n/**\n * Represents a defined collection of entities that may be discussed or acted upon\n * collectively but which are not expected to act collectively, and are not formally or\n * legally recognized; i.e. a collection of entities that isn't an Organization.\n */\nexport interface GroupCharacteristic {\n    /**\n     * Extensions for exclude\n     */\n    _exclude?: Element;\n    /**\n     * Extensions for valueBoolean\n     */\n    _valueBoolean?: Element;\n    /**\n     * A code that identifies the kind of trait being asserted.\n     */\n    code?: CodeableConcept;\n    /**\n     * If true, indicates the characteristic is one that is NOT held by members of the group.\n     */\n    exclude?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period over which the characteristic is tested; e.g. the patient had an operation\n     * during the month of June.\n     */\n    period?: Period;\n    /**\n     * The value of the trait that holds (or does not hold - see 'exclude') for members of the\n     * group.\n     */\n    valueBoolean?: boolean;\n    /**\n     * The value of the trait that holds (or does not hold - see 'exclude') for members of the\n     * group.\n     */\n    valueCodeableConcept?: CodeableConcept;\n    /**\n     * The value of the trait that holds (or does not hold - see 'exclude') for members of the\n     * group.\n     */\n    valueQuantity?: Quantity;\n    /**\n     * The value of the trait that holds (or does not hold - see 'exclude') for members of the\n     * group.\n     */\n    valueRange?: Range;\n    /**\n     * The value of the trait that holds (or does not hold - see 'exclude') for members of the\n     * group.\n     */\n    valueReference?: Reference;\n}\n\n/**\n * Represents a defined collection of entities that may be discussed or acted upon\n * collectively but which are not expected to act collectively, and are not formally or\n * legally recognized; i.e. a collection of entities that isn't an Organization.\n */\nexport interface GroupMember {\n    /**\n     * Extensions for inactive\n     */\n    _inactive?: Element;\n    /**\n     * A reference to the entity that is a member of the group. Must be consistent with\n     * Group.type. If the entity is another group, then the type must be the same.\n     */\n    entity?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A flag to indicate that the member is no longer in the group, but previously may have\n     * been a member.\n     */\n    inactive?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The period that the member was in the group, if known.\n     */\n    period?: Period;\n}\n\n/**\n * Identifies the broad classification of the kind of resources the group includes.\n */\nexport enum GroupType {\n    Animal = \"animal\",\n    Device = \"device\",\n    Medication = \"medication\",\n    Person = \"person\",\n    Practitioner = \"practitioner\",\n    Substance = \"substance\",\n}\n","import {\n    Element,\n    DataRequirement,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    CodeableConcept,\n    Annotation,\n    Narrative\n} from \"./fhir._\";\n\nexport interface GuidanceResponse {\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for moduleCanonical\n     */\n    _moduleCanonical?: Element;\n    /**\n     * Extensions for moduleUri\n     */\n    _moduleUri?: Element;\n    /**\n     * Extensions for occurrenceDateTime\n     */\n    _occurrenceDateTime?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: GuidanceResponse[];\n    /**\n     * If the evaluation could not be completed due to lack of information, or additional\n     * information would potentially result in a more accurate response, this element will a\n     * description of the data required in order to proceed with the evaluation. A subsequent\n     * request to the service should include this data.\n     */\n    dataRequirement?: DataRequirement[];\n    /**\n     * The encounter during which this response was created or to which the creation of this\n     * record is tightly associated.\n     */\n    encounter?: Reference;\n    /**\n     * Messages resulting from the evaluation of the artifact or artifacts. As part of\n     * evaluating the request, the engine may produce informational or warning messages. These\n     * messages will be provided by this element.\n     */\n    evaluationMessage?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Allows a service to provide  unique, business identifiers for the response.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An identifier, CodeableConcept or canonical reference to the guidance that was requested.\n     */\n    moduleCanonical?: string;\n    /**\n     * An identifier, CodeableConcept or canonical reference to the guidance that was requested.\n     */\n    moduleCodeableConcept?: CodeableConcept;\n    /**\n     * An identifier, CodeableConcept or canonical reference to the guidance that was requested.\n     */\n    moduleUri?: string;\n    /**\n     * Provides a mechanism to communicate additional information about the response.\n     */\n    note?: Annotation[];\n    /**\n     * Indicates when the guidance response was processed.\n     */\n    occurrenceDateTime?: string;\n    /**\n     * The output parameters of the evaluation, if any. Many modules will result in the return\n     * of specific resources such as procedure or communication requests that are returned as\n     * part of the operation result. However, modules may define specific outputs that would be\n     * returned as the result of the evaluation, and these would be returned in this element.\n     */\n    outputParameters?: Reference;\n    /**\n     * Provides a reference to the device that performed the guidance.\n     */\n    performer?: Reference;\n    /**\n     * Describes the reason for the guidance response in coded or textual form.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Indicates the reason the request was initiated. This is typically provided as a parameter\n     * to the evaluation and echoed by the service, although for some use cases, such as\n     * subscription- or event-based scenarios, it may provide an indication of the cause for the\n     * response.\n     */\n    reasonReference?: Reference[];\n    /**\n     * The identifier of the request associated with this response. If an identifier was given\n     * as part of the request, it will be reproduced here to enable the requester to more easily\n     * identify the response in a multi-request scenario.\n     */\n    requestIdentifier?: Identifier;\n    /**\n     * This is a GuidanceResponse resource\n     */\n    resourceType?: any;\n    /**\n     * The actions, if any, produced by the evaluation of the artifact.\n     */\n    result?: Reference;\n    /**\n     * The status of the response. If the evaluation is completed successfully, the status will\n     * indicate success. However, in order to complete the evaluation, the engine may require\n     * more information. In this case, the status will be data-required, and the response will\n     * contain a description of the additional required information. If the evaluation completed\n     * successfully, but the engine determines that a potentially more accurate response could\n     * be provided if more data was available, the status will be data-requested, and the\n     * response will contain a description of the additional requested information.\n     */\n    status?: GuidanceResponseStatus;\n    /**\n     * The patient for which the request was processed.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The status of the response. If the evaluation is completed successfully, the status will\n * indicate success. However, in order to complete the evaluation, the engine may require\n * more information. In this case, the status will be data-required, and the response will\n * contain a description of the additional required information. If the evaluation completed\n * successfully, but the engine determines that a potentially more accurate response could\n * be provided if more data was available, the status will be data-requested, and the\n * response will contain a description of the additional requested information.\n */\nexport enum GuidanceResponseStatus {\n    DataRequested = \"data-requested\",\n    DataRequired = \"data-required\",\n    EnteredInError = \"entered-in-error\",\n    Failure = \"failure\",\n    InProgress = \"in-progress\",\n    Success = \"success\",\n}","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Attachment,\n    ContactPoint,\n    Narrative,\n    Period\n} from \"./fhir._\";\n\nexport interface HealthcareService {\n    /**\n     * Extensions for active\n     */\n    _active?: Element;\n    /**\n     * Extensions for appointmentRequired\n     */\n    _appointmentRequired?: Element;\n    /**\n     * Extensions for availabilityExceptions\n     */\n    _availabilityExceptions?: Element;\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * Extensions for extraDetails\n     */\n    _extraDetails?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * This flag is used to mark the record to not be used. This is not used when a center is\n     * closed for maintenance, or for holidays, the notAvailable period is to be used for this.\n     */\n    active?: boolean;\n    /**\n     * Indicates whether or not a prospective consumer will require an appointment for a\n     * particular service at a site to be provided by the Organization. Indicates if an\n     * appointment is required for access to this service.\n     */\n    appointmentRequired?: boolean;\n    /**\n     * A description of site availability exceptions, e.g. public holiday availability.\n     * Succinctly describing all possible exceptions to normal site availability as details in\n     * the available Times and not available Times.\n     */\n    availabilityExceptions?: string;\n    /**\n     * A collection of times that the Service Site is available.\n     */\n    availableTime?: HealthcareServiceAvailableTime[];\n    /**\n     * Identifies the broad category of service being performed or delivered.\n     */\n    category?: CodeableConcept[];\n    /**\n     * Collection of characteristics (attributes).\n     */\n    characteristic?: CodeableConcept[];\n    /**\n     * Any additional description of the service and/or any specific issues not covered by the\n     * other attributes, which can be displayed as further detail under the serviceName.\n     */\n    comment?: string;\n    /**\n     * Some services are specifically made available in multiple languages, this property\n     * permits a directory to declare the languages this is offered in. Typically this is only\n     * provided where a service operates in communities with mixed languages used.\n     */\n    communication?: CodeableConcept[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: HealthcareService[];\n    /**\n     * The location(s) that this service is available to (not where the service is provided).\n     */\n    coverageArea?: Reference[];\n    /**\n     * Does this service have specific eligibility requirements that need to be met in order to\n     * use the service?\n     */\n    eligibility?: HealthcareServiceEligibility[];\n    /**\n     * Technical endpoints providing access to services operated for the specific healthcare\n     * services defined at this resource.\n     */\n    endpoint?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Extra details about the service that can't be placed in the other fields.\n     */\n    extraDetails?: string;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * External identifiers for this item.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The location(s) where this healthcare service may be provided.\n     */\n    location?: Reference[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Further description of the service as it would be presented to a consumer while searching.\n     */\n    name?: string;\n    /**\n     * The HealthcareService is not available during this period of time due to the provided\n     * reason.\n     */\n    notAvailable?: HealthcareServiceNotAvailable[];\n    /**\n     * If there is a photo/symbol associated with this HealthcareService, it may be included\n     * here to facilitate quick identification of the service in a list.\n     */\n    photo?: Attachment;\n    /**\n     * Programs that this service is applicable to.\n     */\n    program?: CodeableConcept[];\n    /**\n     * The organization that provides this healthcare service.\n     */\n    providedBy?: Reference;\n    /**\n     * Ways that the service accepts referrals, if this is not provided then it is implied that\n     * no referral is required.\n     */\n    referralMethod?: CodeableConcept[];\n    /**\n     * This is a HealthcareService resource\n     */\n    resourceType?: any;\n    /**\n     * The code(s) that detail the conditions under which the healthcare service is\n     * available/offered.\n     */\n    serviceProvisionCode?: CodeableConcept[];\n    /**\n     * Collection of specialties handled by the service site. This is more of a medical term.\n     */\n    specialty?: CodeableConcept[];\n    /**\n     * List of contacts related to this specific healthcare service.\n     */\n    telecom?: ContactPoint[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The specific type of service that may be delivered or performed.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * The details of a healthcare service available at a location.\n */\nexport interface HealthcareServiceAvailableTime {\n    /**\n     * Extensions for allDay\n     */\n    _allDay?: Element;\n    /**\n     * Extensions for availableEndTime\n     */\n    _availableEndTime?: Element;\n    /**\n     * Extensions for availableStartTime\n     */\n    _availableStartTime?: Element;\n    /**\n     * Extensions for daysOfWeek\n     */\n    _daysOfWeek?: Element[];\n    /**\n     * Is this always available? (hence times are irrelevant) e.g. 24 hour service.\n     */\n    allDay?: boolean;\n    /**\n     * The closing time of day. Note: If the AllDay flag is set, then this time is ignored.\n     */\n    availableEndTime?: string;\n    /**\n     * The opening time of day. Note: If the AllDay flag is set, then this time is ignored.\n     */\n    availableStartTime?: string;\n    /**\n     * Indicates which days of the week are available between the start and end Times.\n     */\n    daysOfWeek?: DaysOfWeek[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\nexport enum DaysOfWeek {\n    Fri = \"fri\",\n    Mon = \"mon\",\n    Sat = \"sat\",\n    Sun = \"sun\",\n    Thu = \"thu\",\n    Tue = \"tue\",\n    Wed = \"wed\",\n}\n\n/**\n * The details of a healthcare service available at a location.\n */\nexport interface HealthcareServiceEligibility {\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * Coded value for the eligibility.\n     */\n    code?: CodeableConcept;\n    /**\n     * Describes the eligibility conditions for the service.\n     */\n    comment?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The details of a healthcare service available at a location.\n */\nexport interface HealthcareServiceNotAvailable {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * The reason that can be presented to the user as to why this time is not available.\n     */\n    description?: string;\n    /**\n     * Service is not available (seasonally or for a public holiday) from this date.\n     */\n    during?: Period;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Coding,\n    Annotation,\n    CodeableConcept,\n    Narrative\n} from \"./fhir._\";\n\nexport interface ImagingStudy {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for numberOfInstances\n     */\n    _numberOfInstances?: Element;\n    /**\n     * Extensions for numberOfSeries\n     */\n    _numberOfSeries?: Element;\n    /**\n     * Extensions for started\n     */\n    _started?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * A list of the diagnostic requests that resulted in this imaging study being performed.\n     */\n    basedOn?: Reference[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ImagingStudy[];\n    /**\n     * The Imaging Manager description of the study. Institution-generated description or\n     * classification of the Study (component) performed.\n     */\n    description?: string;\n    /**\n     * The healthcare event (e.g. a patient and healthcare provider interaction) during which\n     * this ImagingStudy is made.\n     */\n    encounter?: Reference;\n    /**\n     * The network service providing access (e.g., query, view, or retrieval) for the study. See\n     * implementation notes for information about using DICOM endpoints. A study-level endpoint\n     * applies to each series in the study, unless overridden by a series-level endpoint with\n     * the same Endpoint.connectionType.\n     */\n    endpoint?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Who read the study and interpreted the images or other content.\n     */\n    interpreter?: Reference[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The principal physical location where the ImagingStudy was performed.\n     */\n    location?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * A list of all the series.modality values that are actual acquisition modalities, i.e.\n     * those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19).\n     */\n    modality?: Coding[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Per the recommended DICOM mapping, this element is derived from the Study Description\n     * attribute (0008,1030). Observations or findings about the imaging study should be\n     * recorded in another resource, e.g. Observation, and not in this element.\n     */\n    note?: Annotation[];\n    /**\n     * Number of SOP Instances in Study. This value given may be larger than the number of\n     * instance elements this resource contains due to resource availability, security, or other\n     * factors. This element should be present if any instance elements are present.\n     */\n    numberOfInstances?: number;\n    /**\n     * Number of Series in the Study. This value given may be larger than the number of series\n     * elements this Resource contains due to resource availability, security, or other factors.\n     * This element should be present if any series elements are present.\n     */\n    numberOfSeries?: number;\n    /**\n     * The code for the performed procedure type.\n     */\n    procedureCode?: CodeableConcept[];\n    /**\n     * The procedure which this ImagingStudy was part of.\n     */\n    procedureReference?: Reference;\n    /**\n     * Description of clinical condition indicating why the ImagingStudy was requested.\n     */\n    reasonCode?: CodeableConcept[];\n    /**\n     * Indicates another resource whose existence justifies this Study.\n     */\n    reasonReference?: Reference[];\n    /**\n     * The requesting/referring physician.\n     */\n    referrer?: Reference;\n    /**\n     * This is a ImagingStudy resource\n     */\n    resourceType?: any;\n    /**\n     * Each study has one or more series of images or other content.\n     */\n    series?: ImagingStudySeries[];\n    /**\n     * Date and time the study started.\n     */\n    started?: string;\n    /**\n     * The current state of the ImagingStudy.\n     */\n    status?: ImagingStudyStatus;\n    /**\n     * The subject, typically a patient, of the imaging study.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Representation of the content produced in a DICOM imaging study. A study comprises a set\n * of series, each of which includes a set of Service-Object Pair Instances (SOP Instances -\n * images or other data) acquired or produced in a common context.  A series is of only one\n * modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of\n * different modalities.\n */\nexport interface ImagingStudySeries {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for number\n     */\n    _number?: Element;\n    /**\n     * Extensions for numberOfInstances\n     */\n    _numberOfInstances?: Element;\n    /**\n     * Extensions for started\n     */\n    _started?: Element;\n    /**\n     * Extensions for uid\n     */\n    _uid?: Element;\n    /**\n     * The anatomic structures examined. See DICOM Part 16 Annex L\n     * (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for\n     * DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part\n     * imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.\n     */\n    bodySite?: Coding;\n    /**\n     * A description of the series.\n     */\n    description?: string;\n    /**\n     * The network service providing access (e.g., query, view, or retrieval) for this series.\n     * See implementation notes for information about using DICOM endpoints. A series-level\n     * endpoint, if present, has precedence over a study-level endpoint with the same\n     * Endpoint.connectionType.\n     */\n    endpoint?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A single SOP instance within the series, e.g. an image, or presentation state.\n     */\n    instance?: ImagingStudyInstance[];\n    /**\n     * The laterality of the (possibly paired) anatomic structures examined. E.g., the left\n     * knee, both lungs, or unpaired abdomen. If present, shall be consistent with any\n     * laterality information indicated in ImagingStudy.series.bodySite.\n     */\n    laterality?: Coding;\n    /**\n     * The modality of this series sequence.\n     */\n    modality?: Coding;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The numeric identifier of this series in the study.\n     */\n    number?: number;\n    /**\n     * Number of SOP Instances in the Study. The value given may be larger than the number of\n     * instance elements this resource contains due to resource availability, security, or other\n     * factors. This element should be present if any instance elements are present.\n     */\n    numberOfInstances?: number;\n    /**\n     * Indicates who or what performed the series and how they were involved.\n     */\n    performer?: ImagingStudyPerformer[];\n    /**\n     * The specimen imaged, e.g., for whole slide imaging of a biopsy.\n     */\n    specimen?: Reference[];\n    /**\n     * The date and time the series was started.\n     */\n    started?: string;\n    /**\n     * The DICOM Series Instance UID for the series.\n     */\n    uid?: string;\n}\n\n/**\n * Representation of the content produced in a DICOM imaging study. A study comprises a set\n * of series, each of which includes a set of Service-Object Pair Instances (SOP Instances -\n * images or other data) acquired or produced in a common context.  A series is of only one\n * modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of\n * different modalities.\n */\nexport interface ImagingStudyInstance {\n    /**\n     * Extensions for number\n     */\n    _number?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for uid\n     */\n    _uid?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The number of instance in the series.\n     */\n    number?: number;\n    /**\n     * DICOM instance  type.\n     */\n    sopClass?: Coding;\n    /**\n     * The description of the instance.\n     */\n    title?: string;\n    /**\n     * The DICOM SOP Instance UID for this image or other DICOM content.\n     */\n    uid?: string;\n}\n\n/**\n * Representation of the content produced in a DICOM imaging study. A study comprises a set\n * of series, each of which includes a set of Service-Object Pair Instances (SOP Instances -\n * images or other data) acquired or produced in a common context.  A series is of only one\n * modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of\n * different modalities.\n */\nexport interface ImagingStudyPerformer {\n    /**\n     * Indicates who or what performed the series.\n     */\n    actor?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Distinguishes the type of involvement of the performer in the series.\n     */\n    function?: CodeableConcept;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The current state of the ImagingStudy.\n */\nexport enum ImagingStudyStatus {\n    Available = \"available\",\n    Cancelled = \"cancelled\",\n    EnteredInError = \"entered-in-error\",\n    Registered = \"registered\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    ContactDetail,\n    Extension,\n    CodeableConcept,\n    Meta,\n    Narrative,\n    UsageContext,\n    Reference\n} from \"./fhir._\";\n\nexport interface ImplementationGuide {\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for fhirVersion\n     */\n    _fhirVersion?: Element[];\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for license\n     */\n    _license?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for packageId\n     */\n    _packageId?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: ImplementationGuide[];\n    /**\n     * A copyright statement relating to the implementation guide and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the\n     * implementation guide.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the implementation guide was published. The date\n     * must change when the business version changes and it must change if the status code\n     * changes. In addition, it should change when the substantive content of the implementation\n     * guide changes.\n     */\n    date?: string;\n    /**\n     * The information needed by an IG publisher tool to publish the whole implementation guide.\n     */\n    definition?: ImplementationGuideDefinition;\n    /**\n     * Another implementation guide that this implementation depends on. Typically, an\n     * implementation guide uses value sets, profiles etc.defined in other implementation guides.\n     */\n    dependsOn?: ImplementationGuideDependsOn[];\n    /**\n     * A free text natural language description of the implementation guide from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * A Boolean value to indicate that this implementation guide is authored for testing\n     * purposes (or education/evaluation/marketing) and is not intended to be used for genuine\n     * usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The version(s) of the FHIR specification that this ImplementationGuide targets - e.g.\n     * describes how to use. The value of this element is the formal version of the\n     * specification, without the revision number, e.g. [publication].[major].[minor], which is\n     * 4.0.0. for this version.\n     */\n    fhirVersion?: ImplementationGuideFhirVersion[];\n    /**\n     * A set of profiles that all resources covered by this implementation guide must conform to.\n     */\n    global?: ImplementationGuideGlobal[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the implementation guide is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The license that applies to this Implementation Guide, using an SPDX license code, or\n     * 'not-open-source'.\n     */\n    license?: License;\n    /**\n     * Information about an assembled implementation guide, created by the publication tooling.\n     */\n    manifest?: ImplementationGuideManifest;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the implementation guide. This name should be usable\n     * as an identifier for the module by machine processing applications such as code\n     * generation.\n     */\n    name?: string;\n    /**\n     * The NPM package name for this Implementation Guide, used in the NPM package distribution,\n     * which is the primary mechanism by which FHIR based tooling manages IG dependencies. This\n     * value must be globally unique, and should be assigned with care.\n     */\n    packageId?: string;\n    /**\n     * The name of the organization or individual that published the implementation guide.\n     */\n    publisher?: string;\n    /**\n     * This is a ImplementationGuide resource\n     */\n    resourceType?: any;\n    /**\n     * The status of this implementation guide. Enables tracking the life-cycle of the content.\n     */\n    status?: ImplementationGuideStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the implementation guide.\n     */\n    title?: string;\n    /**\n     * An absolute URI that is used to identify this implementation guide when it is referenced\n     * in a specification, model, design or an instance; also called its canonical identifier.\n     * This SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this implementation guide is (or will be) published. This URL\n     * can be the target of a canonical reference. It SHALL remain the same when the\n     * implementation guide is stored on different servers.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate implementation guide instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the implementation guide when it\n     * is referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the implementation guide author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n/**\n * The information needed by an IG publisher tool to publish the whole implementation\n * guide.\n *\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideDefinition {\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A logical group of resources. Logical groups can be used when building pages.\n     */\n    grouping?: ImplementationGuideGrouping[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A page / section in the implementation guide. The root page is the implementation guide\n     * home page.\n     */\n    page?: ImplementationGuidePage;\n    /**\n     * Defines how IG is built by tools.\n     */\n    parameter?: ImplementationGuideParameter[];\n    /**\n     * A resource that is part of the implementation guide. Conformance resources (value set,\n     * structure definition, capability statements etc.) are obvious candidates for inclusion,\n     * but any kind of resource can be included as an example resource.\n     */\n    resource?: ImplementationGuideResource[];\n    /**\n     * A template for building resources.\n     */\n    template?: ImplementationGuideTemplate[];\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideGrouping {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Human readable text describing the package.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The human-readable title to display for the package of resources when rendering the\n     * implementation guide.\n     */\n    name?: string;\n}\n\n/**\n * A page / section in the implementation guide. The root page is the implementation guide\n * home page.\n *\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuidePage {\n    /**\n     * Extensions for generation\n     */\n    _generation?: Element;\n    /**\n     * Extensions for nameUrl\n     */\n    _nameUrl?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A code that indicates how the page is generated.\n     */\n    generation?: Generation;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The source address for the page.\n     */\n    nameReference?: Reference;\n    /**\n     * The source address for the page.\n     */\n    nameUrl?: string;\n    /**\n     * Nested Pages/Sections under this page.\n     */\n    page?: ImplementationGuidePage[];\n    /**\n     * A short title used to represent this page in navigational structures such as table of\n     * contents, bread crumbs, etc.\n     */\n    title?: string;\n}\n\n/**\n * A code that indicates how the page is generated.\n */\nexport enum Generation {\n    Generated = \"generated\",\n    Html = \"html\",\n    Markdown = \"markdown\",\n    Xml = \"xml\",\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideParameter {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for value\n     */\n    _value?: Element;\n    /**\n     * apply | path-resource | path-pages | path-tx-cache | expansion-parameter |\n     * rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.\n     */\n    code?: ImplementationGuideParameterCode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Value for named type.\n     */\n    value?: string;\n}\n\n/**\n * apply | path-resource | path-pages | path-tx-cache | expansion-parameter |\n * rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.\n */\nexport enum ImplementationGuideParameterCode {\n    Apply = \"apply\",\n    ExpansionParameter = \"expansion-parameter\",\n    GenerateTurtle = \"generate-turtle\",\n    Generatejson = \"generate-json\",\n    Generatexml = \"generate-xml\",\n    HtmlTemplate = \"html-template\",\n    PathPages = \"path-pages\",\n    PathResource = \"path-resource\",\n    PathTxCache = \"path-tx-cache\",\n    RuleBrokenLinks = \"rule-broken-links\",\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideResource {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for exampleBoolean\n     */\n    _exampleBoolean?: Element;\n    /**\n     * Extensions for exampleCanonical\n     */\n    _exampleCanonical?: Element;\n    /**\n     * Extensions for fhirVersion\n     */\n    _fhirVersion?: Element[];\n    /**\n     * Extensions for groupingId\n     */\n    _groupingId?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * A description of the reason that a resource has been included in the implementation guide.\n     */\n    description?: string;\n    /**\n     * If true or a reference, indicates the resource is an example instance.  If a reference is\n     * present, indicates that the example is an example of the specified profile.\n     */\n    exampleBoolean?: boolean;\n    /**\n     * If true or a reference, indicates the resource is an example instance.  If a reference is\n     * present, indicates that the example is an example of the specified profile.\n     */\n    exampleCanonical?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are\n     * specified, the resource is assumed to apply to all the versions stated in\n     * ImplementationGuide.fhirVersion.\n     */\n    fhirVersion?: ImplementationGuideFhirVersion[];\n    /**\n     * Reference to the id of the grouping this resource appears in.\n     */\n    groupingId?: string;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A human assigned name for the resource. All resources SHOULD have a name, but the name\n     * may be extracted from the resource (e.g. ValueSet.name).\n     */\n    name?: string;\n    /**\n     * Where this resource is found.\n     */\n    reference?: Reference;\n}\n\nexport enum ImplementationGuideFhirVersion {\n    The001 = \"0.01\",\n    The005 = \"0.05\",\n    The006 = \"0.06\",\n    The0080 = \"0.0.80\",\n    The0081 = \"0.0.81\",\n    The0082 = \"0.0.82\",\n    The011 = \"0.11\",\n    The040 = \"0.4.0\",\n    The050 = \"0.5.0\",\n    The100 = \"1.0.0\",\n    The101 = \"1.0.1\",\n    The102 = \"1.0.2\",\n    The110 = \"1.1.0\",\n    The140 = \"1.4.0\",\n    The160 = \"1.6.0\",\n    The180 = \"1.8.0\",\n    The300 = \"3.0.0\",\n    The301 = \"3.0.1\",\n    The330 = \"3.3.0\",\n    The350 = \"3.5.0\",\n    The400 = \"4.0.0\",\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideTemplate {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for scope\n     */\n    _scope?: Element;\n    /**\n     * Extensions for source\n     */\n    _source?: Element;\n    /**\n     * Type of template specified.\n     */\n    code?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The scope in which the template applies.\n     */\n    scope?: string;\n    /**\n     * The source location for the template.\n     */\n    source?: string;\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideDependsOn {\n    /**\n     * Extensions for packageId\n     */\n    _packageId?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The NPM package name for the Implementation Guide that this IG depends on.\n     */\n    packageId?: string;\n    /**\n     * A canonical reference to the Implementation guide for the dependency.\n     */\n    uri?: string;\n    /**\n     * The version of the IG that is depended on, when the correct version is required to\n     * understand the IG correctly.\n     */\n    version?: string;\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideGlobal {\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A reference to the profile that all instances must conform to.\n     */\n    profile?: string;\n    /**\n     * The type of resource that all instances must conform to.\n     */\n    type?: string;\n}\n\n/**\n * The license that applies to this Implementation Guide, using an SPDX license code, or\n * 'not-open-source'.\n */\nexport enum License {\n    AAL = \"AAL\",\n    ADSL = \"ADSL\",\n    AGPL10Only = \"AGPL-1.0-only\",\n    AGPL10OrLater = \"AGPL-1.0-or-later\",\n    AGPL30Only = \"AGPL-3.0-only\",\n    AGPL30OrLater = \"AGPL-3.0-or-later\",\n    APL10 = \"APL-1.0\",\n    Abstyles = \"Abstyles\",\n    Adobe2006 = \"Adobe-2006\",\n    AdobeGlyph = \"Adobe-Glyph\",\n    Afl11 = \"AFL-1.1\",\n    Afl12 = \"AFL-1.2\",\n    Afl20 = \"AFL-2.0\",\n    Afl21 = \"AFL-2.1\",\n    Afl30 = \"AFL-3.0\",\n    Afmparse = \"Afmparse\",\n    Aladdin = \"Aladdin\",\n    Amdplpa = \"AMDPLPA\",\n    Aml = \"AML\",\n    Ampas = \"AMPAS\",\n    AntlrPD = \"ANTLR-PD\",\n    Apache10 = \"Apache-1.0\",\n    Apache11 = \"Apache-1.1\",\n    Apache20 = \"Apache-2.0\",\n    Apafml = \"APAFML\",\n    Apsl10 = \"APSL-1.0\",\n    Apsl11 = \"APSL-1.1\",\n    Apsl12 = \"APSL-1.2\",\n    Apsl20 = \"APSL-2.0\",\n    Artistic10 = \"Artistic-1.0\",\n    Artistic10Cl8 = \"Artistic-1.0-cl8\",\n    Artistic10Perl = \"Artistic-1.0-Perl\",\n    Artistic20 = \"Artistic-2.0\",\n    BSD1Clause = \"BSD-1-Clause\",\n    BSD2Clause = \"BSD-2-Clause\",\n    BSD2ClauseFreeBSD = \"BSD-2-Clause-FreeBSD\",\n    BSD2ClauseNetBSD = \"BSD-2-Clause-NetBSD\",\n    BSD2ClausePatent = \"BSD-2-Clause-Patent\",\n    BSD3Clause = \"BSD-3-Clause\",\n    BSD3ClauseAttribution = \"BSD-3-Clause-Attribution\",\n    BSD3ClauseClear = \"BSD-3-Clause-Clear\",\n    BSD3ClauseLBNL = \"BSD-3-Clause-LBNL\",\n    BSD3ClauseNoNuclearLicense = \"BSD-3-Clause-No-Nuclear-License\",\n    BSD3ClauseNoNuclearLicense2014 = \"BSD-3-Clause-No-Nuclear-License-2014\",\n    BSD3ClauseNoNuclearWarranty = \"BSD-3-Clause-No-Nuclear-Warranty\",\n    BSD4Clause = \"BSD-4-Clause\",\n    BSD4ClauseUC = \"BSD-4-Clause-UC\",\n    BSDProtection = \"BSD-Protection\",\n    BSDSourceCode = \"BSD-Source-Code\",\n    Bahyph = \"Bahyph\",\n    Barr = \"Barr\",\n    Beerware = \"Beerware\",\n    BitTorrent10 = \"BitTorrent-1.0\",\n    BitTorrent11 = \"BitTorrent-1.1\",\n    Borceux = \"Borceux\",\n    Bsl10 = \"BSL-1.0\",\n    Bzip2105 = \"bzip2-1.0.5\",\n    Bzip2106 = \"bzip2-1.0.6\",\n    CDLAPermissive10 = \"CDLA-Permissive-1.0\",\n    CDLASharing10 = \"CDLA-Sharing-1.0\",\n    CNRIJython = \"CNRI-Jython\",\n    CNRIPython = \"CNRI-Python\",\n    CNRIPythonGPLCompatible = \"CNRI-Python-GPL-Compatible\",\n    CUAOpl10 = \"CUA-OPL-1.0\",\n    Caldera = \"Caldera\",\n    Catosl11 = \"CATOSL-1.1\",\n    Cc010 = \"CC0-1.0\",\n    CcBy10 = \"CC-BY-1.0\",\n    CcBy20 = \"CC-BY-2.0\",\n    CcBy25 = \"CC-BY-2.5\",\n    CcBy30 = \"CC-BY-3.0\",\n    CcBy40 = \"CC-BY-4.0\",\n    CcByNc10 = \"CC-BY-NC-1.0\",\n    CcByNc20 = \"CC-BY-NC-2.0\",\n    CcByNc25 = \"CC-BY-NC-2.5\",\n    CcByNc30 = \"CC-BY-NC-3.0\",\n    CcByNc40 = \"CC-BY-NC-4.0\",\n    CcByNcNd10 = \"CC-BY-NC-ND-1.0\",\n    CcByNcNd20 = \"CC-BY-NC-ND-2.0\",\n    CcByNcNd25 = \"CC-BY-NC-ND-2.5\",\n    CcByNcNd30 = \"CC-BY-NC-ND-3.0\",\n    CcByNcNd40 = \"CC-BY-NC-ND-4.0\",\n    CcByNcSa10 = \"CC-BY-NC-SA-1.0\",\n    CcByNcSa20 = \"CC-BY-NC-SA-2.0\",\n    CcByNcSa25 = \"CC-BY-NC-SA-2.5\",\n    CcByNcSa30 = \"CC-BY-NC-SA-3.0\",\n    CcByNcSa40 = \"CC-BY-NC-SA-4.0\",\n    CcByNd10 = \"CC-BY-ND-1.0\",\n    CcByNd20 = \"CC-BY-ND-2.0\",\n    CcByNd25 = \"CC-BY-ND-2.5\",\n    CcByNd30 = \"CC-BY-ND-3.0\",\n    CcByNd40 = \"CC-BY-ND-4.0\",\n    CcBySa10 = \"CC-BY-SA-1.0\",\n    CcBySa20 = \"CC-BY-SA-2.0\",\n    CcBySa25 = \"CC-BY-SA-2.5\",\n    CcBySa30 = \"CC-BY-SA-3.0\",\n    CcBySa40 = \"CC-BY-SA-4.0\",\n    Cddl10 = \"CDDL-1.0\",\n    Cddl11 = \"CDDL-1.1\",\n    Cecill10 = \"CECILL-1.0\",\n    Cecill11 = \"CECILL-1.1\",\n    Cecill20 = \"CECILL-2.0\",\n    Cecill21 = \"CECILL-2.1\",\n    CecillB = \"CECILL-B\",\n    CecillC = \"CECILL-C\",\n    ClArtistic = \"ClArtistic\",\n    Condor11 = \"Condor-1.1\",\n    Cpal10 = \"CPAL-1.0\",\n    Cpl10 = \"CPL-1.0\",\n    Cpol102 = \"CPOL-1.02\",\n    Crossword = \"Crossword\",\n    CrystalStacker = \"CrystalStacker\",\n    Cube = \"Cube\",\n    Curl = \"curl\",\n    DFsl10 = \"D-FSL-1.0\",\n    Diffmark = \"diffmark\",\n    Doc = \"DOC\",\n    Dotseqn = \"Dotseqn\",\n    Dsdp = \"DSDP\",\n    Dvipdfm = \"dvipdfm\",\n    EGenix = \"eGenix\",\n    EUDatagrid = \"EUDatagrid\",\n    Ecl10 = \"ECL-1.0\",\n    Ecl20 = \"ECL-2.0\",\n    Efl10 = \"EFL-1.0\",\n    Efl20 = \"EFL-2.0\",\n    Entessa = \"Entessa\",\n    Epl10 = \"EPL-1.0\",\n    Epl20 = \"EPL-2.0\",\n    ErlPL11 = \"ErlPL-1.1\",\n    Eupl10 = \"EUPL-1.0\",\n    Eupl11 = \"EUPL-1.1\",\n    Eupl12 = \"EUPL-1.2\",\n    Eurosym = \"Eurosym\",\n    Fair = \"Fair\",\n    Frameworx10 = \"Frameworx-1.0\",\n    FreeImage = \"FreeImage\",\n    Fsfap = \"FSFAP\",\n    Fsful = \"FSFUL\",\n    Fsfullr = \"FSFULLR\",\n    Ftl = \"FTL\",\n    GFDL11Only = \"GFDL-1.1-only\",\n    GFDL11OrLater = \"GFDL-1.1-or-later\",\n    GFDL12Only = \"GFDL-1.2-only\",\n    GFDL12OrLater = \"GFDL-1.2-or-later\",\n    GFDL13Only = \"GFDL-1.3-only\",\n    GFDL13OrLater = \"GFDL-1.3-or-later\",\n    GPL10Only = \"GPL-1.0-only\",\n    GPL10OrLater = \"GPL-1.0-or-later\",\n    GPL20Only = \"GPL-2.0-only\",\n    GPL20OrLater = \"GPL-2.0-or-later\",\n    GPL30Only = \"GPL-3.0-only\",\n    GPL30OrLater = \"GPL-3.0-or-later\",\n    GSOAP13B = \"gSOAP-1.3b\",\n    Giftware = \"Giftware\",\n    Gl2PS = \"GL2PS\",\n    Glide = \"Glide\",\n    Glulxe = \"Glulxe\",\n    Gnuplot = \"gnuplot\",\n    HaskellReport = \"HaskellReport\",\n    Hpnd = \"HPND\",\n    IBMPibs = \"IBM-pibs\",\n    IMatix = \"iMatix\",\n    IPL10 = \"IPL-1.0\",\n    ISC = \"ISC\",\n    Icu = \"ICU\",\n    Ijg = \"IJG\",\n    ImageMagick = \"ImageMagick\",\n    Imlib2 = \"Imlib2\",\n    InfoZIP = \"Info-ZIP\",\n    Intel = \"Intel\",\n    IntelACPI = \"Intel-ACPI\",\n    Interbase10 = \"Interbase-1.0\",\n    Ipa = \"IPA\",\n    JSON = \"JSON\",\n    JasPer20 = \"JasPer-2.0\",\n    LGPL20Only = \"LGPL-2.0-only\",\n    LGPL20OrLater = \"LGPL-2.0-or-later\",\n    LGPL21Only = \"LGPL-2.1-only\",\n    LGPL21OrLater = \"LGPL-2.1-or-later\",\n    LGPL30Only = \"LGPL-3.0-only\",\n    LGPL30OrLater = \"LGPL-3.0-or-later\",\n    LPPL13A = \"LPPL-1.3a\",\n    LPPL13C = \"LPPL-1.3c\",\n    Lal12 = \"LAL-1.2\",\n    Lal13 = \"LAL-1.3\",\n    Latex2E = \"Latex2e\",\n    Leptonica = \"Leptonica\",\n    Lgpllr = \"LGPLLR\",\n    LiLiQP11 = \"LiLiQ-P-1.1\",\n    LiLiQR11 = \"LiLiQ-R-1.1\",\n    LiLiQRplus11 = \"LiLiQ-Rplus-1.1\",\n    Libpng = \"Libpng\",\n    Libtiff = \"libtiff\",\n    LinuxOpenIB = \"Linux-OpenIB\",\n    Lpl10 = \"LPL-1.0\",\n    Lpl102 = \"LPL-1.02\",\n    Lppl10 = \"LPPL-1.0\",\n    Lppl11 = \"LPPL-1.1\",\n    Lppl12 = \"LPPL-1.2\",\n    MIT = \"MIT\",\n    MIT0 = \"MIT-0\",\n    MITAdvertising = \"MIT-advertising\",\n    MITCmu = \"MIT-CMU\",\n    MITEnna = \"MIT-enna\",\n    MITFeh = \"MIT-feh\",\n    MPL10 = \"MPL-1.0\",\n    MPL11 = \"MPL-1.1\",\n    MPL20 = \"MPL-2.0\",\n    MPL20NoCopyleftException = \"MPL-2.0-no-copyleft-exception\",\n    MSPl = \"MS-PL\",\n    MSRl = \"MS-RL\",\n    MakeIndex = \"MakeIndex\",\n    MirOS = \"MirOS\",\n    Mitnfa = \"MITNFA\",\n    Motosoto = \"Motosoto\",\n    Mpich2 = \"mpich2\",\n    Mtll = \"MTLL\",\n    Multics = \"Multics\",\n    Mup = \"Mup\",\n    NCSA = \"NCSA\",\n    NPL10 = \"NPL-1.0\",\n    NPL11 = \"NPL-1.1\",\n    NTP = \"NTP\",\n    Nasa13 = \"NASA-1.3\",\n    Naumen = \"Naumen\",\n    Nbpl10 = \"NBPL-1.0\",\n    NetCDF = \"NetCDF\",\n    NetSNMP = \"Net-SNMP\",\n    Newsletr = \"Newsletr\",\n    Ngpl = \"NGPL\",\n    Nlod10 = \"NLOD-1.0\",\n    Nlpl = \"NLPL\",\n    Nokia = \"Nokia\",\n    Nosl = \"NOSL\",\n    NotOpenSource = \"not-open-source\",\n    Noweb = \"Noweb\",\n    Nposl30 = \"NPOSL-3.0\",\n    Nrl = \"NRL\",\n    ODbL10 = \"ODbL-1.0\",\n    OcctPl = \"OCCT-PL\",\n    Oclc20 = \"OCLC-2.0\",\n    Ofl10 = \"OFL-1.0\",\n    Ofl11 = \"OFL-1.1\",\n    Ogtsl = \"OGTSL\",\n    Oldap11 = \"OLDAP-1.1\",\n    Oldap12 = \"OLDAP-1.2\",\n    Oldap13 = \"OLDAP-1.3\",\n    Oldap14 = \"OLDAP-1.4\",\n    Oldap20 = \"OLDAP-2.0\",\n    Oldap201 = \"OLDAP-2.0.1\",\n    Oldap21 = \"OLDAP-2.1\",\n    Oldap22 = \"OLDAP-2.2\",\n    Oldap221 = \"OLDAP-2.2.1\",\n    Oldap222 = \"OLDAP-2.2.2\",\n    Oldap23 = \"OLDAP-2.3\",\n    Oldap24 = \"OLDAP-2.4\",\n    Oldap25 = \"OLDAP-2.5\",\n    Oldap26 = \"OLDAP-2.6\",\n    Oldap27 = \"OLDAP-2.7\",\n    Oldap28 = \"OLDAP-2.8\",\n    Oml = \"OML\",\n    OpenSSL = \"OpenSSL\",\n    Opl10 = \"OPL-1.0\",\n    OsetPl21 = \"OSET-PL-2.1\",\n    Osl10 = \"OSL-1.0\",\n    Osl11 = \"OSL-1.1\",\n    Osl20 = \"OSL-2.0\",\n    Osl21 = \"OSL-2.1\",\n    Osl30 = \"OSL-3.0\",\n    PHP30 = \"PHP-3.0\",\n    PHP301 = \"PHP-3.01\",\n    Pddl10 = \"PDDL-1.0\",\n    Plexus = \"Plexus\",\n    PostgreSQL = \"PostgreSQL\",\n    Psfrag = \"psfrag\",\n    Psutils = \"psutils\",\n    Python20 = \"Python-2.0\",\n    Qhull = \"Qhull\",\n    Qpl10 = \"QPL-1.0\",\n    RHeCos11 = \"RHeCos-1.1\",\n    RSAMd = \"RSA-MD\",\n    Rdisc = \"Rdisc\",\n    Rpl11 = \"RPL-1.1\",\n    Rpl15 = \"RPL-1.5\",\n    Rpsl10 = \"RPSL-1.0\",\n    Rscpl = \"RSCPL\",\n    Ruby = \"Ruby\",\n    SAXPD = \"SAX-PD\",\n    SGIB10 = \"SGI-B-1.0\",\n    SGIB11 = \"SGI-B-1.1\",\n    SGIB20 = \"SGI-B-2.0\",\n    Saxpath = \"Saxpath\",\n    Scea = \"SCEA\",\n    Sendmail = \"Sendmail\",\n    SimPL20 = \"SimPL-2.0\",\n    Sissl = \"SISSL\",\n    Sissl12 = \"SISSL-1.2\",\n    Sleepycat = \"Sleepycat\",\n    Smlnj = \"SMLNJ\",\n    Smppl = \"SMPPL\",\n    Snia = \"SNIA\",\n    Spencer86 = \"Spencer-86\",\n    Spencer94 = \"Spencer-94\",\n    Spencer99 = \"Spencer-99\",\n    Spl10 = \"SPL-1.0\",\n    SugarCRM113 = \"SugarCRM-1.1.3\",\n    Swl = \"SWL\",\n    TCPWrappers = \"TCP-wrappers\",\n    TMate = \"TMate\",\n    Tcl = \"TCL\",\n    The0BSD = \"0BSD\",\n    Torque11 = \"TORQUE-1.1\",\n    Tosl = \"TOSL\",\n    UnicodeDFS2015 = \"Unicode-DFS-2015\",\n    UnicodeDFS2016 = \"Unicode-DFS-2016\",\n    UnicodeTOU = \"Unicode-TOU\",\n    Unlicense = \"Unlicense\",\n    Upl10 = \"UPL-1.0\",\n    Vim = \"Vim\",\n    Vostrom = \"VOSTROM\",\n    Vsl10 = \"VSL-1.0\",\n    W3C = \"W3C\",\n    W3C19980720 = \"W3C-19980720\",\n    W3C20150513 = \"W3C-20150513\",\n    Watcom10 = \"Watcom-1.0\",\n    Wsuipa = \"Wsuipa\",\n    Wtfpl = \"WTFPL\",\n    X11 = \"X11\",\n    XFree8611 = \"XFree86-1.1\",\n    XSkat = \"XSkat\",\n    Xerox = \"Xerox\",\n    Xinetd = \"xinetd\",\n    Xnet = \"Xnet\",\n    Xpp = \"xpp\",\n    Ypl10 = \"YPL-1.0\",\n    Ypl11 = \"YPL-1.1\",\n    ZPL11 = \"ZPL-1.1\",\n    ZPL20 = \"ZPL-2.0\",\n    ZPL21 = \"ZPL-2.1\",\n    Zed = \"Zed\",\n    Zend20 = \"Zend-2.0\",\n    Zimbra13 = \"Zimbra-1.3\",\n    Zimbra14 = \"Zimbra-1.4\",\n    Zlib = \"Zlib\",\n    ZlibAcknowledgement = \"zlib-acknowledgement\",\n}\n\n/**\n * Information about an assembled implementation guide, created by the publication tooling.\n *\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideManifest {\n    /**\n     * Extensions for image\n     */\n    _image?: Element[];\n    /**\n     * Extensions for other\n     */\n    _other?: Element[];\n    /**\n     * Extensions for rendering\n     */\n    _rendering?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Indicates a relative path to an image that exists within the IG.\n     */\n    image?: string[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Indicates the relative path of an additional non-page, non-image file that is part of the\n     * IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived\n     * IG.\n     */\n    other?: string[];\n    /**\n     * Information about a page within the IG.\n     */\n    page?: ImplementationGuidePage1[];\n    /**\n     * A pointer to official web page, PDF or other rendering of the implementation guide.\n     */\n    rendering?: string;\n    /**\n     * A resource that is part of the implementation guide. Conformance resources (value set,\n     * structure definition, capability statements etc.) are obvious candidates for inclusion,\n     * but any kind of resource can be included as an example resource.\n     */\n    resource?: ImplementationGuideResource1[];\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuidePage1 {\n    /**\n     * Extensions for anchor\n     */\n    _anchor?: Element[];\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * The name of an anchor available on the page.\n     */\n    anchor?: string[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Relative path to the page.\n     */\n    name?: string;\n    /**\n     * Label for the page intended for human display.\n     */\n    title?: string;\n}\n\n/**\n * A set of rules of how a particular interoperability or standards problem is solved -\n * typically through the use of FHIR resources. This resource is used to gather all the\n * parts of an implementation guide into a logical whole and to publish a computable\n * definition of all the parts.\n */\nexport interface ImplementationGuideResource1 {\n    /**\n     * Extensions for exampleBoolean\n     */\n    _exampleBoolean?: Element;\n    /**\n     * Extensions for exampleCanonical\n     */\n    _exampleCanonical?: Element;\n    /**\n     * Extensions for relativePath\n     */\n    _relativePath?: Element;\n    /**\n     * If true or a reference, indicates the resource is an example instance.  If a reference is\n     * present, indicates that the example is an example of the specified profile.\n     */\n    exampleBoolean?: boolean;\n    /**\n     * If true or a reference, indicates the resource is an example instance.  If a reference is\n     * present, indicates that the example is an example of the specified profile.\n     */\n    exampleCanonical?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Where this resource is found.\n     */\n    reference?: Reference;\n    /**\n     * The relative path for primary page for this resource within the IG.\n     */\n    relativePath?: string;\n}\n\n/**\n * The status of this implementation guide. Enables tracking the life-cycle of the content.\n */\nexport enum ImplementationGuideStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Period,\n    Narrative,\n    CodeableConcept,\n    Address,\n    HumanName,\n    ContactPoint,\n    Quantity,\n    Money\n} from \"./fhir._\";\n\nexport interface InsurancePlan {\n    /**\n     * Extensions for alias\n     */\n    _alias?: Element[];\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * An organization which administer other services such as underwriting, customer service\n     * and/or claims processing on behalf of the health insurance product owner.\n     */\n    administeredBy?: Reference;\n    /**\n     * A list of alternate names that the product is known as, or was known as in the past.\n     */\n    alias?: string[];\n    /**\n     * The contact for the health insurance product for a certain purpose.\n     */\n    contact?: InsurancePlanContact[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: InsurancePlan[];\n    /**\n     * Details about the coverage offered by the insurance product.\n     */\n    coverage?: InsurancePlanCoverage[];\n    /**\n     * The geographic region in which a health insurance product's benefits apply.\n     */\n    coverageArea?: Reference[];\n    /**\n     * The technical endpoints providing access to services operated for the health insurance\n     * product.\n     */\n    endpoint?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this health insurance product which remain constant as\n     * the resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Official name of the health insurance product as designated by the owner.\n     */\n    name?: string;\n    /**\n     * Reference to the network included in the health insurance product.\n     */\n    network?: Reference[];\n    /**\n     * The entity that is providing  the health insurance product and underwriting the risk.\n     * This is typically an insurance carriers, other third-party payers, or health plan\n     * sponsors comonly referred to as 'payers'.\n     */\n    ownedBy?: Reference;\n    /**\n     * The period of time that the health insurance product is available.\n     */\n    period?: Period;\n    /**\n     * Details about an insurance plan.\n     */\n    plan?: InsurancePlanPlan[];\n    /**\n     * This is a InsurancePlan resource\n     */\n    resourceType?: any;\n    /**\n     * The current state of the health insurance product.\n     */\n    status?: InsurancePlanStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The kind of health insurance product.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanContact {\n    /**\n     * Visiting or postal addresses for the contact.\n     */\n    address?: Address;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A name associated with the contact.\n     */\n    name?: HumanName;\n    /**\n     * Indicates a purpose for which the contact can be reached.\n     */\n    purpose?: CodeableConcept;\n    /**\n     * A contact detail (e.g. a telephone number or an email address) by which the party may be\n     * contacted.\n     */\n    telecom?: ContactPoint[];\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanCoverage {\n    /**\n     * Specific benefits under this type of coverage.\n     */\n    benefit?: InsurancePlanBenefit[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference to the network that providing the type of coverage.\n     */\n    network?: Reference[];\n    /**\n     * Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short\n     * Term; Long Term Care; Hospice; Home Health).\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanBenefit {\n    /**\n     * Extensions for requirement\n     */\n    _requirement?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The specific limits on the benefit.\n     */\n    limit?: InsurancePlanLimit[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The referral requirements to have access/coverage for this benefit.\n     */\n    requirement?: string;\n    /**\n     * Type of benefit (primary care; speciality care; inpatient; outpatient).\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanLimit {\n    /**\n     * The specific limit on the benefit.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The maximum amount of a service item a plan will pay for a covered benefit.  For\n     * examples. wellness visits, or eyeglasses.\n     */\n    value?: Quantity;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanPlan {\n    /**\n     * The geographic region in which a health insurance plan's benefits apply.\n     */\n    coverageArea?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Overall costs associated with the plan.\n     */\n    generalCost?: InsurancePlanGeneralCost[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Business identifiers assigned to this health insurance plan which remain constant as the\n     * resource is updated and propagates from server to server.\n     */\n    identifier?: Identifier[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Reference to the network that providing the type of coverage.\n     */\n    network?: Reference[];\n    /**\n     * Costs associated with the coverage provided by the product.\n     */\n    specificCost?: InsurancePlanSpecificCost[];\n    /**\n     * Type of plan. For example, \"Platinum\" or \"High Deductable\".\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanGeneralCost {\n    /**\n     * Extensions for comment\n     */\n    _comment?: Element;\n    /**\n     * Extensions for groupSize\n     */\n    _groupSize?: Element;\n    /**\n     * Additional information about the general costs associated with this plan.\n     */\n    comment?: string;\n    /**\n     * Value of the cost.\n     */\n    cost?: Money;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Number of participants enrolled in the plan.\n     */\n    groupSize?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Type of cost.\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanSpecificCost {\n    /**\n     * List of the specific benefits under this category of benefit.\n     */\n    benefit?: InsurancePlanBenefit1[];\n    /**\n     * General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance\n     * Abuse; Hospice, Home Health).\n     */\n    category?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanBenefit1 {\n    /**\n     * List of the costs associated with a specific benefit.\n     */\n    cost?: InsurancePlanCost[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Type of specific benefit (preventative; primary care office visit; speciality office\n     * visit; hospitalization; emergency room; urgent care).\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Details of a Health Insurance product/plan provided by an organization.\n */\nexport interface InsurancePlanCost {\n    /**\n     * Whether the cost applies to in-network or out-of-network providers (in-network;\n     * out-of-network; other).\n     */\n    applicability?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Additional information about the cost, such as information about funding sources (e.g.\n     * HSA, HRA, FSA, RRA).\n     */\n    qualifiers?: CodeableConcept[];\n    /**\n     * Type of cost (copay; individual cap; family cap; coinsurance; deductible).\n     */\n    type?: CodeableConcept;\n    /**\n     * The actual cost value. (some of the costs may be represented as percentages rather than\n     * currency, e.g. 10% coinsurance).\n     */\n    value?: Quantity;\n}\n\n/**\n * The current state of the health insurance product.\n */\nexport enum InsurancePlanStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Narrative,\n    Money,\n    CodeableConcept\n} from \"./fhir._\";\n\nexport interface Invoice {\n    /**\n     * Extensions for cancelledReason\n     */\n    _cancelledReason?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for paymentTerms\n     */\n    _paymentTerms?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Account which is supposed to be balanced with this Invoice.\n     */\n    account?: Reference;\n    /**\n     * In case of Invoice cancellation a reason must be given (entered in error, superseded by\n     * corrected invoice etc.).\n     */\n    cancelledReason?: string;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Invoice[];\n    /**\n     * Date/time(s) of when this Invoice was posted.\n     */\n    date?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifier of this Invoice, often used for reference in correspondence about this invoice\n     * or for tracking of payments.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The organizationissuing the Invoice.\n     */\n    issuer?: Reference;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * Each line item represents one charge for goods and services rendered. Details such as\n     * date, code and amount are found in the referenced ChargeItem resource.\n     */\n    lineItem?: InvoiceLineItem[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Comments made about the invoice by the issuer, subject, or other participants.\n     */\n    note?: Annotation[];\n    /**\n     * Indicates who or what performed or participated in the charged service.\n     */\n    participant?: InvoiceParticipant[];\n    /**\n     * Payment details such as banking details, period of payment, deductibles, methods of\n     * payment.\n     */\n    paymentTerms?: string;\n    /**\n     * The individual or Organization responsible for balancing of this invoice.\n     */\n    recipient?: Reference;\n    /**\n     * This is a Invoice resource\n     */\n    resourceType?: any;\n    /**\n     * The current state of the Invoice.\n     */\n    status?: InvoiceStatus;\n    /**\n     * The individual or set of individuals receiving the goods and services billed in this\n     * invoice.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Invoice total, tax included.\n     */\n    totalGross?: Money;\n    /**\n     * Invoice total , taxes excluded.\n     */\n    totalNet?: Money;\n    /**\n     * The total amount for the Invoice may be calculated as the sum of the line items with\n     * surcharges/deductions that apply in certain conditions.  The priceComponent element can\n     * be used to offer transparency to the recipient of the Invoice of how the total price was\n     * calculated.\n     */\n    totalPriceComponent?: InvoicePriceComponent[];\n    /**\n     * Type of Invoice depending on domain, realm an usage (e.g. internal/external, dental,\n     * preliminary).\n     */\n    type?: CodeableConcept;\n}\n\n/**\n * Invoice containing collected ChargeItems from an Account with calculated individual and\n * total price for Billing purpose.\n */\nexport interface InvoiceLineItem {\n    /**\n     * Extensions for sequence\n     */\n    _sequence?: Element;\n    /**\n     * The ChargeItem contains information such as the billing code, date, amount etc. If no\n     * further details are required for the lineItem, inline billing codes can be added using\n     * the CodeableConcept data type instead of the Reference.\n     */\n    chargeItemCodeableConcept?: CodeableConcept;\n    /**\n     * The ChargeItem contains information such as the billing code, date, amount etc. If no\n     * further details are required for the lineItem, inline billing codes can be added using\n     * the CodeableConcept data type instead of the Reference.\n     */\n    chargeItemReference?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The price for a ChargeItem may be calculated as a base price with surcharges/deductions\n     * that apply in certain conditions. A ChargeItemDefinition resource that defines the\n     * prices, factors and conditions that apply to a billing code is currently under\n     * development. The priceComponent element can be used to offer transparency to the\n     * recipient of the Invoice as to how the prices have been calculated.\n     */\n    priceComponent?: InvoicePriceComponent[];\n    /**\n     * Sequence in which the items appear on the invoice.\n     */\n    sequence?: number;\n}\n\n/**\n * Invoice containing collected ChargeItems from an Account with calculated individual and\n * total price for Billing purpose.\n */\nexport interface InvoicePriceComponent {\n    /**\n     * Extensions for factor\n     */\n    _factor?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * The amount calculated for this component.\n     */\n    amount?: Money;\n    /**\n     * A code that identifies the component. Codes may be used to differentiate between kinds of\n     * taxes, surcharges, discounts etc.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The factor that has been applied on the base price for calculating this component.\n     */\n    factor?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This code identifies the type of the component.\n     */\n    type?: InvoicePriceComponentType;\n}\n\n/**\n * This code identifies the type of the component.\n */\nexport enum InvoicePriceComponentType {\n    Base = \"base\",\n    Deduction = \"deduction\",\n    Discount = \"discount\",\n    Informational = \"informational\",\n    Surcharge = \"surcharge\",\n    Tax = \"tax\",\n}\n\n/**\n * Invoice containing collected ChargeItems from an Account with calculated individual and\n * total price for Billing purpose.\n */\nexport interface InvoiceParticipant {\n    /**\n     * The device, practitioner, etc. who performed or participated in the service.\n     */\n    actor?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Describes the type of involvement (e.g. transcriptionist, creator etc.). If the invoice\n     * has been created automatically, the Participant may be a billing engine or another kind\n     * of device.\n     */\n    role?: CodeableConcept;\n}\n\n/**\n * The current state of the Invoice.\n */\nexport enum InvoiceStatus {\n    Balanced = \"balanced\",\n    Cancelled = \"cancelled\",\n    Draft = \"draft\",\n    EnteredInError = \"entered-in-error\",\n    Issued = \"issued\",\n}","import {\n    Element,\n    ContactDetail,\n    Attachment,\n    DataRequirement,\n    Period,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    ParameterDefinition,\n    RelatedArtifact,\n    Reference,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface Library {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for usage\n     */\n    _usage?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Library[];\n    /**\n     * The content of the library as an Attachment. The content may be a reference to a url, or\n     * may be directly embedded as a base-64 string. Either way, the contentType of the\n     * attachment determines how to interpret the content.\n     */\n    content?: Attachment[];\n    /**\n     * A copyright statement relating to the library and/or its contents. Copyright statements\n     * are generally legal restrictions on the use and publishing of the library.\n     */\n    copyright?: string;\n    /**\n     * Describes a set of data that must be provided in order to be able to successfully perform\n     * the computations defined by the library.\n     */\n    dataRequirement?: DataRequirement[];\n    /**\n     * The date  (and optionally time) when the library was published. The date must change when\n     * the business version changes and it must change if the status code changes. In addition,\n     * it should change when the substantive content of the library changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the library from a consumer's perspective.\n     */\n    description?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the library content was or is planned to be in active use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A Boolean value to indicate that this library is authored for testing purposes (or\n     * education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this library when it is represented in other\n     * formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF\n     * identifiers for a measure artifact. Note that at least one identifier is required for\n     * non-experimental active artifacts.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the library is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the library. This name should be usable as an\n     * identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * The parameter element defines parameters used by the library.\n     */\n    parameter?: ParameterDefinition[];\n    /**\n     * The name of the organization or individual that published the library.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this library is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a Library resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * The status of this library. Enables tracking the life-cycle of the content.\n     */\n    status?: LibraryStatus;\n    /**\n     * A code or group definition that describes the intended subject of the contents of the\n     * library.\n     */\n    subjectCodeableConcept?: CodeableConcept;\n    /**\n     * A code or group definition that describes the intended subject of the contents of the\n     * library.\n     */\n    subjectReference?: Reference;\n    /**\n     * An explanatory or alternate title for the library giving additional information about its\n     * content.\n     */\n    subtitle?: string;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the library.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the library. Topics provide a high-level\n     * categorization of the library that can be useful for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * Identifies the type of library such as a Logic Library, Model Definition, Asset\n     * Collection, or Module Definition.\n     */\n    type?: CodeableConcept;\n    /**\n     * An absolute URI that is used to identify this library when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this library is (or will be) published. This URL can be the\n     * target of a canonical reference. It SHALL remain the same when the library is stored on\n     * different servers.\n     */\n    url?: string;\n    /**\n     * A detailed description of how the library is used from a clinical perspective.\n     */\n    usage?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate library instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the library when it is referenced\n     * in a specification, model, design or instance. This is an arbitrary value managed by the\n     * library author and is not expected to be globally unique. For example, it might be a\n     * timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no\n     * expectation that versions can be placed in a lexicographical sequence. To provide a\n     * version consistent with the Decision Support Service specification, use the format\n     * Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets,\n     * refer to the Decision Support Service specification. Note that a version is required for\n     * non-experimental active artifacts.\n     */\n    version?: string;\n}\n\n/**\n * The status of this library. Enables tracking the life-cycle of the content.\n */\nexport enum LibraryStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Meta,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Linkage {\n    /**\n     * Extensions for active\n     */\n    _active?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Indicates whether the asserted set of linkages are considered to be \"in effect\".\n     */\n    active?: boolean;\n    /**\n     * Identifies the user or organization responsible for asserting the linkages as well as the\n     * user or organization who establishes the context in which the nature of each linkage is\n     * evaluated.\n     */\n    author?: Reference;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Linkage[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Identifies which record considered as the reference to the same real-world occurrence as\n     * well as how the items should be evaluated within the collection of linked items.\n     */\n    item?: LinkageItem[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This is a Linkage resource\n     */\n    resourceType?: any;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * Identifies two or more records (resource instances) that refer to the same real-world\n * \"occurrence\".\n */\nexport interface LinkageItem {\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The resource instance being linked as part of the group.\n     */\n    resource?: Reference;\n    /**\n     * Distinguishes which item is \"source of truth\" (if any) and which items are no longer\n     * considered to be current representations.\n     */\n    type?: LinkageItemType;\n}\n\n/**\n * Distinguishes which item is \"source of truth\" (if any) and which items are no longer\n * considered to be current representations.\n */\nexport enum LinkageItemType {\n    Alternate = \"alternate\",\n    Historical = \"historical\",\n    Source = \"source\",\n}","import {\n    Element,\n    CodeableConcept,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Annotation,\n    Narrative\n} from \"./fhir._\";\n\nexport interface List {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * This code defines the purpose of the list - why it was created.\n     */\n    code?: CodeableConcept;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: List[];\n    /**\n     * The date that the list was prepared.\n     */\n    date?: string;\n    /**\n     * If the list is empty, why the list is empty.\n     */\n    emptyReason?: CodeableConcept;\n    /**\n     * The encounter that is the context in which this list was created.\n     */\n    encounter?: Reference;\n    /**\n     * Entries in this list.\n     */\n    entry?: ListEntry[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Identifier for the List assigned for business purposes outside the context of FHIR.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * How this list was prepared - whether it is a working list that is suitable for being\n     * maintained on an ongoing basis, or if it represents a snapshot of a list of items from\n     * another source, or whether it is a prepared list where items may be marked as added,\n     * modified or deleted.\n     */\n    mode?: ListMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Comments that apply to the overall list.\n     */\n    note?: Annotation[];\n    /**\n     * What order applies to the items in the list.\n     */\n    orderedBy?: CodeableConcept;\n    /**\n     * This is a List resource\n     */\n    resourceType?: any;\n    /**\n     * The entity responsible for deciding what the contents of the list were. Where the list\n     * was created by a human, this is the same as the author of the list.\n     */\n    source?: Reference;\n    /**\n     * Indicates the current state of this list.\n     */\n    status?: ListStatus;\n    /**\n     * The common subject (or patient) of the resources that are in the list if there is one.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A label for the list assigned by the author.\n     */\n    title?: string;\n}\n\n/**\n * A list is a curated collection of resources.\n */\nexport interface ListEntry {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for deleted\n     */\n    _deleted?: Element;\n    /**\n     * When this item was added to the list.\n     */\n    date?: string;\n    /**\n     * True if this item is marked as deleted in the list.\n     */\n    deleted?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The flag allows the system constructing the list to indicate the role and significance of\n     * the item in the list.\n     */\n    flag?: CodeableConcept;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A reference to the actual resource from which data was derived.\n     */\n    item?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * How this list was prepared - whether it is a working list that is suitable for being\n * maintained on an ongoing basis, or if it represents a snapshot of a list of items from\n * another source, or whether it is a prepared list where items may be marked as added,\n * modified or deleted.\n */\nexport enum ListMode {\n    Changes = \"changes\",\n    Snapshot = \"snapshot\",\n    Working = \"working\",\n}\n\n/**\n * Indicates the current state of this list.\n */\nexport enum ListStatus {\n    Current = \"current\",\n    EnteredInError = \"entered-in-error\",\n    Retired = \"retired\",\n}","import {\n    Element,\n    Address,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Coding,\n    CodeableConcept,\n    ContactPoint,\n    Narrative\n} from \"./fhir._\";\n\nexport interface Location {\n    /**\n     * Extensions for alias\n     */\n    _alias?: Element[];\n    /**\n     * Extensions for availabilityExceptions\n     */\n    _availabilityExceptions?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for mode\n     */\n    _mode?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Physical location.\n     */\n    address?: Address;\n    /**\n     * A list of alternate names that the location is known as, or was known as, in the past.\n     */\n    alias?: string[];\n    /**\n     * A description of when the locations opening ours are different to normal, e.g. public\n     * holiday availability. Succinctly describing all possible exceptions to normal site\n     * availability as detailed in the opening hours Times.\n     */\n    availabilityExceptions?: string;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Location[];\n    /**\n     * Description of the Location, which helps in finding or referencing the place.\n     */\n    description?: string;\n    /**\n     * Technical endpoints providing access to services operated for the location.\n     */\n    endpoint?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * What days/times during a week is this location usually open.\n     */\n    hoursOfOperation?: LocationHoursOfOperation[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * Unique code or number identifying the location to its users.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The organization responsible for the provisioning and upkeep of the location.\n     */\n    managingOrganization?: Reference;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * Indicates whether a resource instance represents a specific location or a class of\n     * locations.\n     */\n    mode?: LocationMode;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Name of the location as used by humans. Does not need to be unique.\n     */\n    name?: string;\n    /**\n     * The operational status covers operation values most relevant to beds (but can also apply\n     * to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically\n     * covers concepts such as contamination, housekeeping, and other activities like\n     * maintenance.\n     */\n    operationalStatus?: Coding;\n    /**\n     * Another Location of which this Location is physically a part of.\n     */\n    partOf?: Reference;\n    /**\n     * Physical form of the location, e.g. building, room, vehicle, road.\n     */\n    physicalType?: CodeableConcept;\n    /**\n     * The absolute geographic location of the Location, expressed using the WGS84 datum (This\n     * is the same co-ordinate system used in KML).\n     */\n    position?: LocationPosition;\n    /**\n     * This is a Location resource\n     */\n    resourceType?: any;\n    /**\n     * The status property covers the general availability of the resource, not the current\n     * value which may be covered by the operationStatus, or by a schedule/slots if they are\n     * configured for the location.\n     */\n    status?: LocationStatus;\n    /**\n     * The contact details of communication devices available at the location. This can include\n     * phone numbers, fax numbers, mobile numbers, email addresses and web sites.\n     */\n    telecom?: ContactPoint[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Indicates the type of function performed at the location.\n     */\n    type?: CodeableConcept[];\n}\n\n/**\n * Details and position information for a physical place where services are provided and\n * resources and participants may be stored, found, contained, or accommodated.\n */\nexport interface LocationHoursOfOperation {\n    /**\n     * Extensions for allDay\n     */\n    _allDay?: Element;\n    /**\n     * Extensions for closingTime\n     */\n    _closingTime?: Element;\n    /**\n     * Extensions for daysOfWeek\n     */\n    _daysOfWeek?: Element[];\n    /**\n     * Extensions for openingTime\n     */\n    _openingTime?: Element;\n    /**\n     * The Location is open all day.\n     */\n    allDay?: boolean;\n    /**\n     * Time that the Location closes.\n     */\n    closingTime?: string;\n    /**\n     * Indicates which days of the week are available between the start and end Times.\n     */\n    daysOfWeek?: string[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Time that the Location opens.\n     */\n    openingTime?: string;\n}\n\n/**\n * Indicates whether a resource instance represents a specific location or a class of\n * locations.\n */\nexport enum LocationMode {\n    Instance = \"instance\",\n    Kind = \"kind\",\n}\n\n/**\n * The absolute geographic location of the Location, expressed using the WGS84 datum (This\n * is the same co-ordinate system used in KML).\n *\n * Details and position information for a physical place where services are provided and\n * resources and participants may be stored, found, contained, or accommodated.\n */\nexport interface LocationPosition {\n    /**\n     * Extensions for altitude\n     */\n    _altitude?: Element;\n    /**\n     * Extensions for latitude\n     */\n    _latitude?: Element;\n    /**\n     * Extensions for longitude\n     */\n    _longitude?: Element;\n    /**\n     * Altitude. The value domain and the interpretation are the same as for the text of the\n     * altitude element in KML (see notes below).\n     */\n    altitude?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Latitude. The value domain and the interpretation are the same as for the text of the\n     * latitude element in KML (see notes below).\n     */\n    latitude?: number;\n    /**\n     * Longitude. The value domain and the interpretation are the same as for the text of the\n     * longitude element in KML (see notes below).\n     */\n    longitude?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The status property covers the general availability of the resource, not the current\n * value which may be covered by the operationStatus, or by a schedule/slots if they are\n * configured for the location.\n */\nexport enum LocationStatus {\n    Active = \"active\",\n    Inactive = \"inactive\",\n    Suspended = \"suspended\",\n}","import {\n    Element,\n    ContactDetail,\n    CodeableConcept,\n    Period,\n    Extension,\n    Identifier,\n    Meta,\n    RelatedArtifact,\n    Reference,\n    Narrative,\n    UsageContext,\n    Expression\n} from \"./fhir._\";\n\nexport interface Measure {\n    /**\n     * Extensions for approvalDate\n     */\n    _approvalDate?: Element;\n    /**\n     * Extensions for clinicalRecommendationStatement\n     */\n    _clinicalRecommendationStatement?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for definition\n     */\n    _definition?: Element[];\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for disclaimer\n     */\n    _disclaimer?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for guidance\n     */\n    _guidance?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for lastReviewDate\n     */\n    _lastReviewDate?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for rateAggregation\n     */\n    _rateAggregation?: Element;\n    /**\n     * Extensions for rationale\n     */\n    _rationale?: Element;\n    /**\n     * Extensions for riskAdjustment\n     */\n    _riskAdjustment?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for subtitle\n     */\n    _subtitle?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for usage\n     */\n    _usage?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * The date on which the resource content was approved by the publisher. Approval happens\n     * once when the content is officially approved for usage.\n     */\n    approvalDate?: string;\n    /**\n     * An individiual or organization primarily involved in the creation and maintenance of the\n     * content.\n     */\n    author?: ContactDetail[];\n    /**\n     * Provides a summary of relevant clinical guidelines or other clinical recommendations\n     * supporting the measure.\n     */\n    clinicalRecommendationStatement?: string;\n    /**\n     * If this is a composite measure, the scoring method used to combine the component measures\n     * to determine the composite score.\n     */\n    compositeScoring?: CodeableConcept;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: Measure[];\n    /**\n     * A copyright statement relating to the measure and/or its contents. Copyright statements\n     * are generally legal restrictions on the use and publishing of the measure.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the measure was published. The date must change when\n     * the business version changes and it must change if the status code changes. In addition,\n     * it should change when the substantive content of the measure changes.\n     */\n    date?: string;\n    /**\n     * Provides a description of an individual term used within the measure.\n     */\n    definition?: string[];\n    /**\n     * A free text natural language description of the measure from a consumer's perspective.\n     */\n    description?: string;\n    /**\n     * Notices and disclaimers regarding the use of the measure or related to intellectual\n     * property (such as code systems) referenced by the measure.\n     */\n    disclaimer?: string;\n    /**\n     * An individual or organization primarily responsible for internal coherence of the content.\n     */\n    editor?: ContactDetail[];\n    /**\n     * The period during which the measure content was or is planned to be in active use.\n     */\n    effectivePeriod?: Period;\n    /**\n     * An individual or organization responsible for officially endorsing the content for use in\n     * some setting.\n     */\n    endorser?: ContactDetail[];\n    /**\n     * A Boolean value to indicate that this measure is authored for testing purposes (or\n     * education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * A group of population criteria for the measure.\n     */\n    group?: MeasureGroup[];\n    /**\n     * Additional guidance for the measure including how it can be used in a clinical context,\n     * and the intent of the measure.\n     */\n    guidance?: string;\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this measure when it is represented in other\n     * formats, or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Information on whether an increase or decrease in score is the preferred result (e.g., a\n     * higher score indicates better quality OR a lower score indicates better quality OR\n     * quality is within a range).\n     */\n    improvementNotation?: CodeableConcept;\n    /**\n     * A legal or geographic region in which the measure is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The date on which the resource content was last reviewed. Review happens periodically\n     * after approval but does not change the original approval date.\n     */\n    lastReviewDate?: string;\n    /**\n     * A reference to a Library resource containing the formal logic used by the measure.\n     */\n    library?: string[];\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the measure. This name should be usable as an\n     * identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * The name of the organization or individual that published the measure.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this measure is needed and why it has been designed as it has.\n     */\n    purpose?: string;\n    /**\n     * Describes how to combine the information calculated, based on logic in each of several\n     * populations, into one summarized result.\n     */\n    rateAggregation?: string;\n    /**\n     * Provides a succinct statement of the need for the measure. Usually includes statements\n     * pertaining to importance criterion: impact, gap in care, and evidence.\n     */\n    rationale?: string;\n    /**\n     * Related artifacts such as additional documentation, justification, or bibliographic\n     * references.\n     */\n    relatedArtifact?: RelatedArtifact[];\n    /**\n     * This is a Measure resource\n     */\n    resourceType?: any;\n    /**\n     * An individual or organization primarily responsible for review of some aspect of the\n     * content.\n     */\n    reviewer?: ContactDetail[];\n    /**\n     * A description of the risk adjustment factors that may impact the resulting score for the\n     * measure and how they may be accounted for when computing and reporting measure results.\n     */\n    riskAdjustment?: string;\n    /**\n     * Indicates how the calculation is performed for the measure, including proportion, ratio,\n     * continuous-variable, and cohort. The value set is extensible, allowing additional measure\n     * scoring types to be represented.\n     */\n    scoring?: CodeableConcept;\n    /**\n     * The status of this measure. Enables tracking the life-cycle of the content.\n     */\n    status?: MeasureStatus;\n    /**\n     * The intended subjects for the measure. If this element is not provided, a Patient subject\n     * is assumed, but the subject of the measure can be anything.\n     */\n    subjectCodeableConcept?: CodeableConcept;\n    /**\n     * The intended subjects for the measure. If this element is not provided, a Patient subject\n     * is assumed, but the subject of the measure can be anything.\n     */\n    subjectReference?: Reference;\n    /**\n     * An explanatory or alternate title for the measure giving additional information about its\n     * content.\n     */\n    subtitle?: string;\n    /**\n     * The supplemental data criteria for the measure report, specified as either the name of a\n     * valid CQL expression within a referenced library, or a valid FHIR Resource Path.\n     */\n    supplementalData?: MeasureSupplementalData[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the measure.\n     */\n    title?: string;\n    /**\n     * Descriptive topics related to the content of the measure. Topics provide a high-level\n     * categorization grouping types of measures that can be useful for filtering and searching.\n     */\n    topic?: CodeableConcept[];\n    /**\n     * Indicates whether the measure is used to examine a process, an outcome over time, a\n     * patient-reported outcome, or a structure measure such as utilization.\n     */\n    type?: CodeableConcept[];\n    /**\n     * An absolute URI that is used to identify this measure when it is referenced in a\n     * specification, model, design or an instance; also called its canonical identifier. This\n     * SHOULD be globally unique and SHOULD be a literal address at which at which an\n     * authoritative instance of this measure is (or will be) published. This URL can be the\n     * target of a canonical reference. It SHALL remain the same when the measure is stored on\n     * different servers.\n     */\n    url?: string;\n    /**\n     * A detailed description, from a clinical perspective, of how the measure is used.\n     */\n    usage?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate measure instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the measure when it is referenced\n     * in a specification, model, design or instance. This is an arbitrary value managed by the\n     * measure author and is not expected to be globally unique. For example, it might be a\n     * timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no\n     * expectation that versions can be placed in a lexicographical sequence. To provide a\n     * version consistent with the Decision Support Service specification, use the format\n     * Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets,\n     * refer to the Decision Support Service specification. Note that a version is required for\n     * non-experimental active artifacts.\n     */\n    version?: string;\n}\n\n/**\n * The Measure resource provides the definition of a quality measure.\n */\nexport interface MeasureGroup {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Indicates a meaning for the group. This can be as simple as a unique identifier, or it\n     * can establish meaning in a broader context by drawing from a terminology, allowing groups\n     * to be correlated across measures.\n     */\n    code?: CodeableConcept;\n    /**\n     * The human readable description of this population group.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A population criteria for the measure.\n     */\n    population?: MeasurePopulation[];\n    /**\n     * The stratifier criteria for the measure report, specified as either the name of a valid\n     * CQL expression defined within a referenced library or a valid FHIR Resource Path.\n     */\n    stratifier?: MeasureStratifier[];\n}\n\n/**\n * The Measure resource provides the definition of a quality measure.\n */\nexport interface MeasurePopulation {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * The type of population criteria.\n     */\n    code?: CodeableConcept;\n    /**\n     * An expression that specifies the criteria for the population, typically the name of an\n     * expression in a library.\n     */\n    criteria?: Expression;\n    /**\n     * The human readable description of this population criteria.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The Measure resource provides the definition of a quality measure.\n */\nexport interface MeasureStratifier {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Indicates a meaning for the stratifier. This can be as simple as a unique identifier, or\n     * it can establish meaning in a broader context by drawing from a terminology, allowing\n     * stratifiers to be correlated across measures.\n     */\n    code?: CodeableConcept;\n    /**\n     * A component of the stratifier criteria for the measure report, specified as either the\n     * name of a valid CQL expression defined within a referenced library or a valid FHIR\n     * Resource Path.\n     */\n    component?: MeasureComponent[];\n    /**\n     * An expression that specifies the criteria for the stratifier. This is typically the name\n     * of an expression defined within a referenced library, but it may also be a path to a\n     * stratifier element.\n     */\n    criteria?: Expression;\n    /**\n     * The human readable description of this stratifier criteria.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The Measure resource provides the definition of a quality measure.\n */\nexport interface MeasureComponent {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Indicates a meaning for the stratifier component. This can be as simple as a unique\n     * identifier, or it can establish meaning in a broader context by drawing from a\n     * terminology, allowing stratifiers to be correlated across measures.\n     */\n    code?: CodeableConcept;\n    /**\n     * An expression that specifies the criteria for this component of the stratifier. This is\n     * typically the name of an expression defined within a referenced library, but it may also\n     * be a path to a stratifier element.\n     */\n    criteria?: Expression;\n    /**\n     * The human readable description of this stratifier criteria component.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * The status of this measure. Enables tracking the life-cycle of the content.\n */\nexport enum MeasureStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}\n\n/**\n * The Measure resource provides the definition of a quality measure.\n */\nexport interface MeasureSupplementalData {\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Indicates a meaning for the supplemental data. This can be as simple as a unique\n     * identifier, or it can establish meaning in a broader context by drawing from a\n     * terminology, allowing supplemental data to be correlated across measures.\n     */\n    code?: CodeableConcept;\n    /**\n     * The criteria for the supplemental data. This is typically the name of a valid expression\n     * defined within a referenced library, but it may also be a path to a specific data\n     * element. The criteria defines the data to be returned for this element.\n     */\n    criteria?: Expression;\n    /**\n     * The human readable description of this supplemental data.\n     */\n    description?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An indicator of the intended usage for the supplemental data element. Supplemental data\n     * indicates the data is additional information requested to augment the measure\n     * information. Risk adjustment factor indicates the data is additional information used to\n     * calculate risk adjustment factors when applying a risk model to the measure calculation.\n     */\n    usage?: CodeableConcept[];\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    CodeableConcept,\n    Meta,\n    Period,\n    Narrative,\n    Quantity\n} from \"./fhir._\";\n\nexport interface MeasureReport {\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: MeasureReport[];\n    /**\n     * The date this measure report was generated.\n     */\n    date?: string;\n    /**\n     * A reference to a Bundle containing the Resources that were used in the calculation of\n     * this measure.\n     */\n    evaluatedResource?: Reference[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The results of the calculation, one for each population group in the measure.\n     */\n    group?: MeasureReportGroup[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this MeasureReport when it is represented in\n     * other formats or referenced in a specification, model, design or an instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * Whether improvement in the measure is noted by an increase or decrease in the measure\n     * score.\n     */\n    improvementNotation?: CodeableConcept;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * A reference to the Measure that was calculated to produce this report.\n     */\n    measure?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The reporting period for which the report was calculated.\n     */\n    period?: Period;\n    /**\n     * The individual, location, or organization that is reporting the data.\n     */\n    reporter?: Reference;\n    /**\n     * This is a MeasureReport resource\n     */\n    resourceType?: any;\n    /**\n     * The MeasureReport status. No data will be available until the MeasureReport status is\n     * complete.\n     */\n    status?: MeasureReportStatus;\n    /**\n     * Optional subject identifying the individual or individuals the report is for.\n     */\n    subject?: Reference;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * The type of measure report. This may be an individual report, which provides the score\n     * for the measure for an individual member of the population; a subject-listing, which\n     * returns the list of members that meet the various criteria in the measure; a summary\n     * report, which returns a population count for each of the criteria in the measure; or a\n     * data-collection, which enables the MeasureReport to be used to exchange the\n     * data-of-interest for a quality measure.\n     */\n    type?: MeasureReportType;\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportGroup {\n    /**\n     * The meaning of the population group as defined in the measure definition.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The measure score for this population group, calculated as appropriate for the measure\n     * type and scoring method, and based on the contents of the populations defined in the\n     * group.\n     */\n    measureScore?: Quantity;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The populations that make up the population group, one for each type of population\n     * appropriate for the measure.\n     */\n    population?: MeasureReportPopulation[];\n    /**\n     * When a measure includes multiple stratifiers, there will be a stratifier group for each\n     * stratifier defined by the measure.\n     */\n    stratifier?: MeasureReportStratifier[];\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportPopulation {\n    /**\n     * Extensions for count\n     */\n    _count?: Element;\n    /**\n     * The type of the population.\n     */\n    code?: CodeableConcept;\n    /**\n     * The number of members of the population.\n     */\n    count?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This element refers to a List of subject level MeasureReport resources, one for each\n     * subject in this population.\n     */\n    subjectResults?: Reference;\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportStratifier {\n    /**\n     * The meaning of this stratifier, as defined in the measure definition.\n     */\n    code?: CodeableConcept[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This element contains the results for a single stratum within the stratifier. For\n     * example, when stratifying on administrative gender, there will be four strata, one for\n     * each possible gender value.\n     */\n    stratum?: MeasureReportStratum[];\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportStratum {\n    /**\n     * A stratifier component value.\n     */\n    component?: MeasureReportComponent[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The measure score for this stratum, calculated as appropriate for the measure type and\n     * scoring method, and based on only the members of this stratum.\n     */\n    measureScore?: Quantity;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The populations that make up the stratum, one for each type of population appropriate to\n     * the measure.\n     */\n    population?: MeasureReportPopulation1[];\n    /**\n     * The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on\n     * complex values, the value must be rendered such that the value for each stratum within\n     * the stratifier is unique.\n     */\n    value?: CodeableConcept;\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportComponent {\n    /**\n     * The code for the stratum component value.\n     */\n    code?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The stratum component value.\n     */\n    value?: CodeableConcept;\n}\n\n/**\n * The MeasureReport resource contains the results of the calculation of a measure; and\n * optionally a reference to the resources involved in that calculation.\n */\nexport interface MeasureReportPopulation1 {\n    /**\n     * Extensions for count\n     */\n    _count?: Element;\n    /**\n     * The type of the population.\n     */\n    code?: CodeableConcept;\n    /**\n     * The number of members of the population in this stratum.\n     */\n    count?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * This element refers to a List of subject level MeasureReport resources, one for each\n     * subject in this population in this stratum.\n     */\n    subjectResults?: Reference;\n}\n\n/**\n * The MeasureReport status. No data will be available until the MeasureReport status is\n * complete.\n */\nexport enum MeasureReportStatus {\n    Complete = \"complete\",\n    Error = \"error\",\n    Pending = \"pending\",\n}\n\n/**\n * The type of measure report. This may be an individual report, which provides the score\n * for the measure for an individual member of the population; a subject-listing, which\n * returns the list of members that meet the various criteria in the measure; a summary\n * report, which returns a population count for each of the criteria in the measure; or a\n * data-collection, which enables the MeasureReport to be used to exchange the\n * data-of-interest for a quality measure.\n */\nexport enum MeasureReportType {\n    DataCollection = \"data-collection\",\n    Individual = \"individual\",\n    SubjectList = \"subject-list\",\n    Summary = \"summary\",\n}\n","import {\n    Element,\n    CodeableConcept,\n    ContactDetail,\n    Coding,\n    Extension,\n    Identifier,\n    Meta,\n    Narrative,\n    UsageContext\n} from \"./fhir._\";\n\nexport interface MessageDefinition {\n    /**\n     * Extensions for category\n     */\n    _category?: Element;\n    /**\n     * Extensions for copyright\n     */\n    _copyright?: Element;\n    /**\n     * Extensions for date\n     */\n    _date?: Element;\n    /**\n     * Extensions for description\n     */\n    _description?: Element;\n    /**\n     * Extensions for eventUri\n     */\n    _eventUri?: Element;\n    /**\n     * Extensions for experimental\n     */\n    _experimental?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for publisher\n     */\n    _publisher?: Element;\n    /**\n     * Extensions for purpose\n     */\n    _purpose?: Element;\n    /**\n     * Extensions for responseRequired\n     */\n    _responseRequired?: Element;\n    /**\n     * Extensions for status\n     */\n    _status?: Element;\n    /**\n     * Extensions for title\n     */\n    _title?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * Indicates what types of messages may be sent as an application-level response to this\n     * message.\n     */\n    allowedResponse?: MessageDefinitionAllowedResponse[];\n    /**\n     * The MessageDefinition that is the basis for the contents of this resource.\n     */\n    base?: string;\n    /**\n     * The impact of the content of the message.\n     */\n    category?: MessageDefinitionCategory;\n    /**\n     * Contact details to assist a user in finding and communicating with the publisher.\n     */\n    contact?: ContactDetail[];\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: MessageDefinition[];\n    /**\n     * A copyright statement relating to the message definition and/or its contents. Copyright\n     * statements are generally legal restrictions on the use and publishing of the message\n     * definition.\n     */\n    copyright?: string;\n    /**\n     * The date  (and optionally time) when the message definition was published. The date must\n     * change when the business version changes and it must change if the status code changes.\n     * In addition, it should change when the substantive content of the message definition\n     * changes.\n     */\n    date?: string;\n    /**\n     * A free text natural language description of the message definition from a consumer's\n     * perspective.\n     */\n    description?: string;\n    /**\n     * Event code or link to the EventDefinition.\n     */\n    eventCoding?: Coding;\n    /**\n     * Event code or link to the EventDefinition.\n     */\n    eventUri?: string;\n    /**\n     * A Boolean value to indicate that this message definition is authored for testing purposes\n     * (or education/evaluation/marketing) and is not intended to be used for genuine usage.\n     */\n    experimental?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Identifies the resource (or resources) that are being addressed by the event.  For\n     * example, the Encounter for an admit message or two Account records for a merge.\n     */\n    focus?: MessageDefinitionFocus[];\n    /**\n     * Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical\n     * reference to a [[[GraphDefinition]]] that it controls what resources are to be added to\n     * the bundle when building the document. The GraphDefinition can also specify profiles that\n     * apply to the various resources.\n     */\n    graph?: string[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A formal identifier that is used to identify this message definition when it is\n     * represented in other formats, or referenced in a specification, model, design or an\n     * instance.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * A legal or geographic region in which the message definition is intended to be used.\n     */\n    jurisdiction?: CodeableConcept[];\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A natural language name identifying the message definition. This name should be usable as\n     * an identifier for the module by machine processing applications such as code generation.\n     */\n    name?: string;\n    /**\n     * Identifies a protocol or workflow that this MessageDefinition represents a step in.\n     */\n    parent?: string[];\n    /**\n     * The name of the organization or individual that published the message definition.\n     */\n    publisher?: string;\n    /**\n     * Explanation of why this message definition is needed and why it has been designed as it\n     * has.\n     */\n    purpose?: string;\n    /**\n     * A MessageDefinition that is superseded by this definition.\n     */\n    replaces?: string[];\n    /**\n     * This is a MessageDefinition resource\n     */\n    resourceType?: any;\n    /**\n     * Declare at a message definition level whether a response is required or only upon error\n     * or success, or never.\n     */\n    responseRequired?: ResponseRequired;\n    /**\n     * The status of this message definition. Enables tracking the life-cycle of the content.\n     */\n    status?: MessageDefinitionStatus;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * A short, descriptive, user-friendly title for the message definition.\n     */\n    title?: string;\n    /**\n     * The business identifier that is used to reference the MessageDefinition and *is* expected\n     * to be consistent from server to server.\n     */\n    url?: string;\n    /**\n     * The content was developed with a focus and intent of supporting the contexts that are\n     * listed. These contexts may be general categories (gender, age, ...) or may be references\n     * to specific programs (insurance plans, studies, ...) and may be used to assist with\n     * indexing and searching for appropriate message definition instances.\n     */\n    useContext?: UsageContext[];\n    /**\n     * The identifier that is used to identify this version of the message definition when it is\n     * referenced in a specification, model, design or instance. This is an arbitrary value\n     * managed by the message definition author and is not expected to be globally unique. For\n     * example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available.\n     * There is also no expectation that versions can be placed in a lexicographical sequence.\n     */\n    version?: string;\n}\n\n/**\n * Defines the characteristics of a message that can be shared between systems, including\n * the type of event that initiates the message, the content to be transmitted and what\n * response(s), if any, are permitted.\n */\nexport interface MessageDefinitionAllowedResponse {\n    /**\n     * Extensions for situation\n     */\n    _situation?: Element;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * A reference to the message definition that must be adhered to by this supported response.\n     */\n    message?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Provides a description of the circumstances in which this response should be used (as\n     * opposed to one of the alternative responses).\n     */\n    situation?: string;\n}\n\n/**\n * The impact of the content of the message.\n */\nexport enum MessageDefinitionCategory {\n    Consequence = \"consequence\",\n    Currency = \"currency\",\n    Notification = \"notification\",\n}\n\n/**\n * Defines the characteristics of a message that can be shared between systems, including\n * the type of event that initiates the message, the content to be transmitted and what\n * response(s), if any, are permitted.\n */\nexport interface MessageDefinitionFocus {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for max\n     */\n    _max?: Element;\n    /**\n     * Extensions for min\n     */\n    _min?: Element;\n    /**\n     * The kind of resource that must be the focus for this message.\n     */\n    code?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Identifies the maximum number of resources of this type that must be pointed to by a\n     * message in order for it to be valid against this MessageDefinition.\n     */\n    max?: string;\n    /**\n     * Identifies the minimum number of resources of this type that must be pointed to by a\n     * message in order for it to be valid against this MessageDefinition.\n     */\n    min?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A profile that reflects constraints for the focal resource (and potentially for related\n     * resources).\n     */\n    profile?: string;\n}\n\n/**\n * Declare at a message definition level whether a response is required or only upon error\n * or success, or never.\n */\nexport enum ResponseRequired {\n    Always = \"always\",\n    Never = \"never\",\n    OnError = \"on-error\",\n    OnSuccess = \"on-success\",\n}\n\n/**\n * The status of this message definition. Enables tracking the life-cycle of the content.\n */\nexport enum MessageDefinitionStatus {\n    Active = \"active\",\n    Draft = \"draft\",\n    Retired = \"retired\",\n    Unknown = \"unknown\",\n}","import {\n    Element,\n    Reference,\n    Coding,\n    Extension,\n    Meta,\n    CodeableConcept,\n    Narrative,\n    ContactPoint\n} from \"./fhir._\";\n\nexport interface MessageHeader {\n    /**\n     * Extensions for eventUri\n     */\n    _eventUri?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * The logical author of the message - the person or device that decided the described event\n     * should happen. When there is more than one candidate, pick the most proximal to the\n     * MessageHeader. Can provide other authors in extensions.\n     */\n    author?: Reference;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: MessageHeader[];\n    /**\n     * Permanent link to the MessageDefinition for this message.\n     */\n    definition?: string;\n    /**\n     * The destination application which the message is intended for.\n     */\n    destination?: MessageHeaderDestination[];\n    /**\n     * The person or device that performed the data entry leading to this message. When there is\n     * more than one candidate, pick the most proximal to the message. Can provide other\n     * enterers in extensions.\n     */\n    enterer?: Reference;\n    /**\n     * Code that identifies the event this message represents and connects it with its\n     * definition. Events defined as part of the FHIR specification have the system value\n     * \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the\n     * EventDefinition.\n     */\n    eventCoding?: Coding;\n    /**\n     * Code that identifies the event this message represents and connects it with its\n     * definition. Events defined as part of the FHIR specification have the system value\n     * \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the\n     * EventDefinition.\n     */\n    eventUri?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The actual data of the message - a reference to the root/focus class of the event.\n     */\n    focus?: Reference[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Coded indication of the cause for the event - indicates  a reason for the occurrence of\n     * the event that is a focus of this message.\n     */\n    reason?: CodeableConcept;\n    /**\n     * This is a MessageHeader resource\n     */\n    resourceType?: any;\n    /**\n     * Information about the message that this message is a response to.  Only present if this\n     * message is a response.\n     */\n    response?: MessageHeaderResponse;\n    /**\n     * The person or organization that accepts overall responsibility for the contents of the\n     * message. The implication is that the message event happened under the policies of the\n     * responsible party.\n     */\n    responsible?: Reference;\n    /**\n     * Identifies the sending system to allow the use of a trust relationship.\n     */\n    sender?: Reference;\n    /**\n     * The source application from which this message originated.\n     */\n    source?: MessageHeaderSource;\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n}\n\n/**\n * The header for a message exchange that is either requesting or responding to an action.\n * The reference(s) that are the subject of the action as well as other information related\n * to the action are typically transmitted in a bundle in which the MessageHeader resource\n * instance is the first resource in the bundle.\n */\nexport interface MessageHeaderDestination {\n    /**\n     * Extensions for endpoint\n     */\n    _endpoint?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Indicates where the message should be routed to.\n     */\n    endpoint?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Human-readable name for the target system.\n     */\n    name?: string;\n    /**\n     * Allows data conveyed by a message to be addressed to a particular person or department\n     * when routing to a specific application isn't sufficient.\n     */\n    receiver?: Reference;\n    /**\n     * Identifies the target end system in situations where the initial message transmission is\n     * to an intermediary system.\n     */\n    target?: Reference;\n}\n\n/**\n * Information about the message that this message is a response to.  Only present if this\n * message is a response.\n *\n * The header for a message exchange that is either requesting or responding to an action.\n * The reference(s) that are the subject of the action as well as other information related\n * to the action are typically transmitted in a bundle in which the MessageHeader resource\n * instance is the first resource in the bundle.\n */\nexport interface MessageHeaderResponse {\n    /**\n     * Extensions for code\n     */\n    _code?: Element;\n    /**\n     * Extensions for identifier\n     */\n    _identifier?: Element;\n    /**\n     * Code that identifies the type of response to the message - whether it was successful or\n     * not, and whether it should be resent or not.\n     */\n    code?: MessageHeaderResponseCode;\n    /**\n     * Full details of any issues found in the message.\n     */\n    details?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * The MessageHeader.id of the message to which this message is a response.\n     */\n    identifier?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n}\n\n/**\n * Code that identifies the type of response to the message - whether it was successful or\n * not, and whether it should be resent or not.\n */\nexport enum MessageHeaderResponseCode {\n    FatalError = \"fatal-error\",\n    Ok = \"ok\",\n    TransientError = \"transient-error\",\n}\n\n/**\n * The source application from which this message originated.\n *\n * The header for a message exchange that is either requesting or responding to an action.\n * The reference(s) that are the subject of the action as well as other information related\n * to the action are typically transmitted in a bundle in which the MessageHeader resource\n * instance is the first resource in the bundle.\n */\nexport interface MessageHeaderSource {\n    /**\n     * Extensions for endpoint\n     */\n    _endpoint?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for software\n     */\n    _software?: Element;\n    /**\n     * Extensions for version\n     */\n    _version?: Element;\n    /**\n     * An e-mail, phone, website or other contact point to use to resolve issues with message\n     * communications.\n     */\n    contact?: ContactPoint;\n    /**\n     * Identifies the routing target to send acknowledgements to.\n     */\n    endpoint?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Human-readable name for the source system.\n     */\n    name?: string;\n    /**\n     * May include configuration or other information useful in debugging.\n     */\n    software?: string;\n    /**\n     * Can convey versions of multiple systems in situations where a message passes through\n     * multiple hands.\n     */\n    version?: string;\n}","import {\n    Element,\n    Reference,\n    Extension,\n    Identifier,\n    Meta,\n    Quantity,\n    Narrative,\n    CodeableConcept\n} from \"./fhir._\";\n\nexport interface MolecularSequence {\n    /**\n     * Extensions for coordinateSystem\n     */\n    _coordinateSystem?: Element;\n    /**\n     * Extensions for implicitRules\n     */\n    _implicitRules?: Element;\n    /**\n     * Extensions for language\n     */\n    _language?: Element;\n    /**\n     * Extensions for observedSeq\n     */\n    _observedSeq?: Element;\n    /**\n     * Extensions for readCoverage\n     */\n    _readCoverage?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * These resources do not have an independent existence apart from the resource that\n     * contains them - they cannot be identified independently, and nor can they have their own\n     * independent transaction scope.\n     */\n    contained?: MolecularSequence[];\n    /**\n     * Whether the sequence is numbered starting at 0 (0-based numbering or coordinates,\n     * inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and\n     * inclusive end).\n     */\n    coordinateSystem?: number;\n    /**\n     * The method for sequencing, for example, chip information.\n     */\n    device?: Reference;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The logical id of the resource, as used in the URL for the resource. Once assigned, this\n     * value never changes.\n     */\n    id?: string;\n    /**\n     * A unique identifier for this particular sequence instance. This is a FHIR-defined id.\n     */\n    identifier?: Identifier[];\n    /**\n     * A reference to a set of rules that were followed when the resource was constructed, and\n     * which must be understood when processing the content. Often, this is a reference to an\n     * implementation guide that defines the special rules along with other profiles etc.\n     */\n    implicitRules?: string;\n    /**\n     * The base language in which the resource is written.\n     */\n    language?: string;\n    /**\n     * The metadata about the resource. This is content that is maintained by the\n     * infrastructure. Changes to the content might not always be associated with version\n     * changes to the resource.\n     */\n    meta?: Meta;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the resource and that modifies the understanding of the element that contains it\n     * and/or the understanding of the containing element's descendants. Usually modifier\n     * elements provide negation or qualification. To make the use of extensions safe and\n     * manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer is allowed to define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Sequence that was observed. It is the result marked by referenceSeq along with variant\n     * records on referenceSeq. This shall start from referenceSeq.windowStart and end by\n     * referenceSeq.windowEnd.\n     */\n    observedSeq?: string;\n    /**\n     * The patient whose sequencing results are described by this resource.\n     */\n    patient?: Reference;\n    /**\n     * The organization or lab that should be responsible for this result.\n     */\n    performer?: Reference;\n    /**\n     * Pointer to next atomic sequence which at most contains one variant.\n     */\n    pointer?: Reference[];\n    /**\n     * An experimental feature attribute that defines the quality of the feature in a\n     * quantitative way, such as a phred quality score\n     * ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).\n     */\n    quality?: MolecularSequenceQuality[];\n    /**\n     * The number of copies of the sequence of interest. (RNASeq).\n     */\n    quantity?: Quantity;\n    /**\n     * Coverage (read depth or depth) is the average number of reads representing a given\n     * nucleotide in the reconstructed sequence.\n     */\n    readCoverage?: number;\n    /**\n     * A sequence that is used as a reference to describe variants that are present in a\n     * sequence analyzed.\n     */\n    referenceSeq?: MolecularSequenceReferenceSeq;\n    /**\n     * Configurations of the external repository. The repository shall store target's\n     * observedSeq or records related with target's observedSeq.\n     */\n    repository?: MolecularSequenceRepository[];\n    /**\n     * This is a MolecularSequence resource\n     */\n    resourceType?: any;\n    /**\n     * Specimen used for sequencing.\n     */\n    specimen?: Reference;\n    /**\n     * Information about chromosome structure variation.\n     */\n    structureVariant?: MolecularSequenceStructureVariant[];\n    /**\n     * A human-readable narrative that contains a summary of the resource and can be used to\n     * represent the content of the resource to a human. The narrative need not encode all the\n     * structured data, but is required to contain sufficient detail to make it \"clinically\n     * safe\" for a human to just read the narrative. Resource definitions may define what\n     * content should be represented in the narrative to ensure clinical safety.\n     */\n    text?: Narrative;\n    /**\n     * Amino Acid Sequence/ DNA Sequence / RNA Sequence.\n     */\n    type?: MolecularSequenceType;\n    /**\n     * The definition of variant here originates from Sequence ontology\n     * ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This\n     * element can represent amino acid or nucleic sequence change(including\n     * insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation\n     * with the assist of CIGAR string.\n     */\n    variant?: MolecularSequenceVariant[];\n}\n\n/**\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceQuality {\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for fScore\n     */\n    _fScore?: Element;\n    /**\n     * Extensions for gtFP\n     */\n    _gtFP?: Element;\n    /**\n     * Extensions for precision\n     */\n    _precision?: Element;\n    /**\n     * Extensions for queryFP\n     */\n    _queryFP?: Element;\n    /**\n     * Extensions for queryTP\n     */\n    _queryTP?: Element;\n    /**\n     * Extensions for recall\n     */\n    _recall?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Extensions for truthFN\n     */\n    _truthFN?: Element;\n    /**\n     * Extensions for truthTP\n     */\n    _truthTP?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * End position of the sequence. If the coordinate system is 0-based then end is exclusive\n     * and does not include the last position. If the coordinate system is 1-base, then end is\n     * inclusive and includes the last position.\n     */\n    end?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision +\n     * recall).\n     */\n    fScore?: number;\n    /**\n     * The number of false positives where the non-REF alleles in the Truth and Query Call Sets\n     * match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).\n     */\n    gtFP?: number;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Which method is used to get sequence quality.\n     */\n    method?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * QUERY.TP / (QUERY.TP + QUERY.FP).\n     */\n    precision?: number;\n    /**\n     * False positives, i.e. the number of sites in the Query Call Set for which there is no\n     * path through the Truth Call Set that is consistent with this site. Sites with correct\n     * variant but incorrect genotype are counted here.\n     */\n    queryFP?: number;\n    /**\n     * True positives, from the perspective of the query data, i.e. the number of sites in the\n     * Query Call Set for which there are paths through the Truth Call Set that are consistent\n     * with all of the alleles at this site, and for which there is an accurate genotype call\n     * for the event.\n     */\n    queryTP?: number;\n    /**\n     * TRUTH.TP / (TRUTH.TP + TRUTH.FN).\n     */\n    recall?: number;\n    /**\n     * Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.\n     */\n    roc?: MolecularSequenceRoc;\n    /**\n     * The score of an experimentally derived feature such as a p-value\n     * ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).\n     */\n    score?: Quantity;\n    /**\n     * Gold standard sequence used for comparing against.\n     */\n    standardSequence?: CodeableConcept;\n    /**\n     * Start position of the sequence. If the coordinate system is either 0-based or 1-based,\n     * then start position is inclusive.\n     */\n    start?: number;\n    /**\n     * False negatives, i.e. the number of sites in the Truth Call Set for which there is no\n     * path through the Query Call Set that is consistent with all of the alleles at this site,\n     * or sites for which there is an inaccurate genotype call for the event. Sites with correct\n     * variant but incorrect genotype are counted here.\n     */\n    truthFN?: number;\n    /**\n     * True positives, from the perspective of the truth data, i.e. the number of sites in the\n     * Truth Call Set for which there are paths through the Query Call Set that are consistent\n     * with all of the alleles at this site, and for which there is an accurate genotype call\n     * for the event.\n     */\n    truthTP?: number;\n    /**\n     * INDEL / SNP / Undefined variant.\n     */\n    type?: MolecularSequenceQualityType;\n}\n\n/**\n * Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.\n *\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceRoc {\n    /**\n     * Extensions for fMeasure\n     */\n    _fMeasure?: Element[];\n    /**\n     * Extensions for numFN\n     */\n    _numFN?: Element[];\n    /**\n     * Extensions for numFP\n     */\n    _numFP?: Element[];\n    /**\n     * Extensions for numTP\n     */\n    _numTP?: Element[];\n    /**\n     * Extensions for precision\n     */\n    _precision?: Element[];\n    /**\n     * Extensions for score\n     */\n    _score?: Element[];\n    /**\n     * Extensions for sensitivity\n     */\n    _sensitivity?: Element[];\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Calculated fScore if the GQ score threshold was set to \"score\" field value.\n     */\n    fMeasure?: number[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * The number of false negatives if the GQ score threshold was set to \"score\" field value.\n     */\n    numFN?: number[];\n    /**\n     * The number of false positives if the GQ score threshold was set to \"score\" field value.\n     */\n    numFP?: number[];\n    /**\n     * The number of true positives if the GQ score threshold was set to \"score\" field value.\n     */\n    numTP?: number[];\n    /**\n     * Calculated precision if the GQ score threshold was set to \"score\" field value.\n     */\n    precision?: number[];\n    /**\n     * Invidual data point representing the GQ (genotype quality) score threshold.\n     */\n    score?: number[];\n    /**\n     * Calculated sensitivity if the GQ score threshold was set to \"score\" field value.\n     */\n    sensitivity?: number[];\n}\n\n/**\n * INDEL / SNP / Undefined variant.\n */\nexport enum MolecularSequenceQualityType {\n    Indel = \"indel\",\n    Snp = \"snp\",\n    Unknown = \"unknown\",\n}\n\n/**\n * A sequence that is used as a reference to describe variants that are present in a\n * sequence analyzed.\n *\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceReferenceSeq {\n    /**\n     * Extensions for genomeBuild\n     */\n    _genomeBuild?: Element;\n    /**\n     * Extensions for orientation\n     */\n    _orientation?: Element;\n    /**\n     * Extensions for referenceSeqString\n     */\n    _referenceSeqString?: Element;\n    /**\n     * Extensions for strand\n     */\n    _strand?: Element;\n    /**\n     * Extensions for windowEnd\n     */\n    _windowEnd?: Element;\n    /**\n     * Extensions for windowStart\n     */\n    _windowStart?: Element;\n    /**\n     * Structural unit composed of a nucleic acid molecule which controls its own replication\n     * through the interaction of specific proteins at one or more origins of replication\n     * ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).\n     */\n    chromosome?: CodeableConcept;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.\n     * Version number must be included if a versioned release of a primary build was used.\n     */\n    genomeBuild?: string;\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * A relative reference to a DNA strand based on gene orientation. The strand that contains\n     * the open reading frame of the gene is the \"sense\" strand, and the opposite complementary\n     * strand is the \"antisense\" strand.\n     */\n    orientation?: Orientation;\n    /**\n     * Reference identifier of reference sequence submitted to NCBI. It must match the type in\n     * the MolecularSequence.type field. For example, the prefix, “NG_” identifies reference\n     * sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid\n     * sequences.\n     */\n    referenceSeqId?: CodeableConcept;\n    /**\n     * A pointer to another MolecularSequence entity as reference sequence.\n     */\n    referenceSeqPointer?: Reference;\n    /**\n     * A string like \"ACGT\".\n     */\n    referenceSeqString?: string;\n    /**\n     * An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the\n     * short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long\n     * arm.\n     */\n    strand?: Strand;\n    /**\n     * End position of the window on the reference sequence. If the coordinate system is 0-based\n     * then end is exclusive and does not include the last position. If the coordinate system is\n     * 1-base, then end is inclusive and includes the last position.\n     */\n    windowEnd?: number;\n    /**\n     * Start position of the window on the reference sequence. If the coordinate system is\n     * either 0-based or 1-based, then start position is inclusive.\n     */\n    windowStart?: number;\n}\n\n/**\n * A relative reference to a DNA strand based on gene orientation. The strand that contains\n * the open reading frame of the gene is the \"sense\" strand, and the opposite complementary\n * strand is the \"antisense\" strand.\n */\nexport enum Orientation {\n    Antisense = \"antisense\",\n    Sense = \"sense\",\n}\n\n/**\n * An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the\n * short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long\n * arm.\n */\nexport enum Strand {\n    Crick = \"crick\",\n    Watson = \"watson\",\n}\n\n/**\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceRepository {\n    /**\n     * Extensions for datasetId\n     */\n    _datasetId?: Element;\n    /**\n     * Extensions for name\n     */\n    _name?: Element;\n    /**\n     * Extensions for readsetId\n     */\n    _readsetId?: Element;\n    /**\n     * Extensions for type\n     */\n    _type?: Element;\n    /**\n     * Extensions for url\n     */\n    _url?: Element;\n    /**\n     * Extensions for variantsetId\n     */\n    _variantsetId?: Element;\n    /**\n     * Id of the variant in this external repository. The server will understand how to use this\n     * id to call for more info about datasets in external repository.\n     */\n    datasetId?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * URI of an external repository which contains further details about the genetics data.\n     */\n    name?: string;\n    /**\n     * Id of the read in this external repository.\n     */\n    readsetId?: string;\n    /**\n     * Click and see / RESTful API / Need login to see / RESTful API with authentication / Other\n     * ways to see resource.\n     */\n    type?: MolecularSequenceRepositoryType;\n    /**\n     * URI of an external repository which contains further details about the genetics data.\n     */\n    url?: string;\n    /**\n     * Id of the variantset in this external repository. The server will understand how to use\n     * this id to call for more info about variantsets in external repository.\n     */\n    variantsetId?: string;\n}\n\n/**\n * Click and see / RESTful API / Need login to see / RESTful API with authentication / Other\n * ways to see resource.\n */\nexport enum MolecularSequenceRepositoryType {\n    Directlink = \"directlink\",\n    Login = \"login\",\n    Oauth = \"oauth\",\n    Openapi = \"openapi\",\n    Other = \"other\",\n}\n\n/**\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceStructureVariant {\n    /**\n     * Extensions for exact\n     */\n    _exact?: Element;\n    /**\n     * Extensions for length\n     */\n    _length?: Element;\n    /**\n     * Used to indicate if the outer and inner start-end values have the same meaning.\n     */\n    exact?: boolean;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * Structural variant inner.\n     */\n    inner?: MolecularSequenceInner;\n    /**\n     * Length of the variant chromosome.\n     */\n    length?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Structural variant outer.\n     */\n    outer?: MolecularSequenceOuter;\n    /**\n     * Information about chromosome structure variation DNA change type.\n     */\n    variantType?: CodeableConcept;\n}\n\n/**\n * Structural variant inner.\n *\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceInner {\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Structural variant inner end. If the coordinate system is 0-based then end is exclusive\n     * and does not include the last position. If the coordinate system is 1-base, then end is\n     * inclusive and includes the last position.\n     */\n    end?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Structural variant inner start. If the coordinate system is either 0-based or 1-based,\n     * then start position is inclusive.\n     */\n    start?: number;\n}\n\n/**\n * Structural variant outer.\n *\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceOuter {\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Structural variant outer end. If the coordinate system is 0-based then end is exclusive\n     * and does not include the last position. If the coordinate system is 1-base, then end is\n     * inclusive and includes the last position.\n     */\n    end?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * Structural variant outer start. If the coordinate system is either 0-based or 1-based,\n     * then start position is inclusive.\n     */\n    start?: number;\n}\n\n/**\n * Amino Acid Sequence/ DNA Sequence / RNA Sequence.\n */\nexport enum MolecularSequenceType {\n    Aa = \"aa\",\n    Dna = \"dna\",\n    Rna = \"rna\",\n}\n\n/**\n * Raw data describing a biological sequence.\n */\nexport interface MolecularSequenceVariant {\n    /**\n     * Extensions for cigar\n     */\n    _cigar?: Element;\n    /**\n     * Extensions for end\n     */\n    _end?: Element;\n    /**\n     * Extensions for observedAllele\n     */\n    _observedAllele?: Element;\n    /**\n     * Extensions for referenceAllele\n     */\n    _referenceAllele?: Element;\n    /**\n     * Extensions for start\n     */\n    _start?: Element;\n    /**\n     * Extended CIGAR string for aligning the sequence with reference bases. See detailed\n     * documentation\n     * [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).\n     */\n    cigar?: string;\n    /**\n     * End position of the variant on the reference sequence. If the coordinate system is\n     * 0-based then end is exclusive and does not include the last position. If the coordinate\n     * system is 1-base, then end is inclusive and includes the last position.\n     */\n    end?: number;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element. To make the use of extensions safe and manageable, there is a strict set\n     * of governance  applied to the definition and use of extensions. Though any implementer\n     * can define an extension, there is a set of requirements that SHALL be met as part of the\n     * definition of the extension.\n     */\n    extension?: Extension[];\n    /**\n     * Unique id for the element within a resource (for internal references). This may be any\n     * string value that does not contain spaces.\n     */\n    id?: string;\n    /**\n     * May be used to represent additional information that is not part of the basic definition\n     * of the element and that modifies the understanding of the element in which it is\n     * contained and/or the understanding of the containing element's descendants. Usually\n     * modifier elements provide negation or qualification. To make the use of extensions safe\n     * and manageable, there is a strict set of governance applied to the definition and use of\n     * extensions. Though any implementer can define an extension, there is a set of\n     * requirements that SHALL be met as part of the definition of the extension. Applications\n     * processing a resource are required to check for modifier extensions.\n     *\n     * Modifier extensions SHALL NOT change the meaning of any elements on Resource or\n     * DomainResource (including cannot change the meaning of modifierExtension itself).\n     */\n    modifierExtension?: Extension[];\n    /**\n     * An allele is one of a set of coexisting sequence variants of a gene\n     * ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).\n     * Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on\n     * the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it\n     * should be the sequence on the positive (+) strand. This will lay in the range between\n     * variant.start and variant.end.\n     */\n    observedAllele?: string;\n    /**\n     * An allele is one of a set of coexisting sequence variants of a gene\n     * ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).\n     * Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on\n     * the positive (+) strand of the reference sequence. When the sequence  type is DNA, it\n     * should be the sequence on the positive (+) strand. This will lay in the range between\n     * variant.start and variant.end.\n     */\n    referenceAllele?: string;\n    /**\n     * Start position of the variant on the  reference sequence. If the coordinate system is\n     * either 0-based or 1-based, then start position is inclusive.\n     */\n    start?: number;\n    /**\n     * A pointer to an Observation containing variant information.\n     */\n    variantPointer?: Reference;\n}\n"],"sourceRoot":""}